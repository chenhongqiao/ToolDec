[{"api_list": [{"category_name": "Data", "tool_name": "World Bank | GDP", "api_name": "List of countries with income level", "api_description": "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/V2/incomeLevel/LIC/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Data", "tool_name": "World Bank | GDP", "api_name": "List all countries", "api_description": "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/v2/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json", "required_parameters": [{"name": "iso2Code", "type": "STRING", "description": "", "default": "br"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "BB Finance", "api_name": "market/auto-complete", "api_description": "Query suggestion by term and phrase", "required_parameters": [{"name": "query", "type": "STRING", "description": "", "default": "apple"}], "optional_parameters": [], "method": "GET", "template_response": {"quote": [{"securityType": "str", "symbol": "str", "country": "str", "currency": "str", "resourceType": "str", "resourceSubtype": "str", "region": "str", "ticker": "str", "tickerName": "str", "template": "str", "tinyName": "str", "name": "str", "watchlist": "bool", "resourceId": "str", "id": "str", "title": "str", "card": "str", "_list_length": 25}], "news": [{"title": "str", "id": "str", "card": "str", "date": "int", "longURL": "str", "thumbnailImage": "str", "_list_length": 25}]}}, {"category_name": "Finance", "tool_name": "BB Finance", "api_name": "news/list-by-region", "api_description": "List latest news from different categories and grouped by region", "required_parameters": [{"name": "id", "type": "STRING", "description": "One of the following is allowed home-v3|asia-home-v3|europe-home-v3|middle-east-home-v3|africa-home-v3|canada-home-v3", "default": "europe-home-v3"}], "optional_parameters": [], "method": "GET", "template_response": "{\"title\": \"NoneType\", \"id\": \"str\", \"indexBar\": {\"enabled\": \"bool\", \"quotes\": [{\"EURUSD:CUR\": {\"baseName\": \"str\", \"securityType\": \"str\", \"symbol\": \"str\", \"country\": \"str\", \"currency\": \"str\", \"resourceType\": \"str\", \"resourceSubtype\": \"str\", \"region\": \"str\", \"ticker\": \"str\", \"tickerName\": \"str\", \"template\": \"str\", \"tinyName\": \"str\", \"name\": \"str\", \"watchlist\": \"bool\", \"resourceId\": \"str\", \"last\": \"str\", \"netChange\": \"str\", \"lastPriceTime\": \"int\", \"yearHigh\": \"str\", \"dayHigh\": \"str\", \"yearLow\": \"str\", \"sourceCurrency\": \"str\", \"dayLow\": \"str\", \"pctChange\": \"str\", \"sparkline\": {\"href\": \"str\"}}, \"_list_length\": 3}], \"stories\": [{\"id\": \"str\", \"type\": \"str\", \"internalID\": \"str\", \"title\": \"str\", \"summary\": \"str\", \"autoGeneratedSummary\": \"str\", \"abstract\": [\"list of str with length 2\"], \"published\": \"int\", \"updatedAt\": \"int\", \"wordCount\": \"int\", \"premium\": \"bool\", \"secondaryBrands\": [\"list of str with length 1\"], \"byline\": \"str\", \"shortURL\": \"str\", \"longURL\": \"str\", \"primaryCategory\": \"str\", \"pri"}, {"category_name": "Finance", "tool_name": "BB Finance", "api_name": "market/get-chart", "api_description": "Get related data for drawing chart", "required_parameters": [{"name": "interval", "type": "STRING", "description": "One of the followings : d1|d3|ytd|m1|m3|m6|y1|y5", "default": "y1"}, {"name": "id", "type": "STRING", "description": "The value of id field returned in .../market/auto-complete endpoint", "default": "inmex:ind"}], "optional_parameters": [], "method": "GET", "template_response": {"result": {"INMEX:IND": {"historical": "bool", "ticksType": "str", "ticks": [{"time": "int", "close": "float", "volume": "int", "_list_length": 253}], "low": "str", "high": "str", "first": "int", "last": "int", "security": {"ticker": "str", "open": "str", "prevClose": "str"}, "hasVolume": "bool"}}}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "MA", "api_description": "Moving Average(MA) is used to smooth out price fluctuations and get rid of market noise.", "required_parameters": [{"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}, {"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}], "optional_parameters": [{"name": "time_period", "type": "NUMBER", "description": "", "default": 9}, {"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}, {"name": "ma_type", "type": "STRING", "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`", "default": "SMA"}, {"name": "series_type", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}, {"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "EXP", "api_description": "Exponential(EXP) transforms input data with the mathematical exponent function.", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}, {"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}], "optional_parameters": [{"name": "series_type", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}, {"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}, {"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "IPO Calendar", "api_description": "This endpoint returns past, today, or upcoming IPOs.\n\nAvailability: Pro plan\nData weighting: 40 API credits per symbol", "required_parameters": [], "optional_parameters": [{"name": "end_date", "type": "STRING", "description": "", "default": ""}, {"name": "symbol", "type": "STRING", "description": "", "default": ""}, {"name": "country", "type": "STRING", "description": "", "default": ""}, {"name": "start_date", "type": "STRING", "description": "", "default": ""}, {"name": "exchange", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm a financial analyst and I need to gather comprehensive data for my research. Can you fetch the list of all countries available in the World Bank | GDP API? Additionally, provide me with the IPO calendar using the Twelve Data API to analyze the market trends.", "relevant APIs": [["World Bank | GDP", "List all countries"], ["Twelve Data", "IPO Calendar"]], "query_id": 30}, {"api_list": [{"category_name": "Financial", "tool_name": "QuantaEx Market Data", "api_name": "24 Hours Tickers", "api_description": "24 hours trading data", "required_parameters": [], "optional_parameters": [{"name": "quantaex.com", "type": "STRING", "description": "", "default": ""}], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/get-strategy", "api_description": "Get strategy", "required_parameters": [{"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}, {"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "market/v2/get-returns", "api_description": "Get market return by years", "required_parameters": [{"name": "performanceIds", "type": "STRING", "description": "The value of performanceId returned in .../market/v2/get-movers , .../market/v2/auto-complete, etc... endpoints. Separated by comma to query multiple entities.", "default": "0P0000OQN8,0P000000GY"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/parent/get-medalist-rating", "api_description": "Get medalist rating as displayed in the Parent tab", "required_parameters": [{"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}, {"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "PPO", "api_description": "Percentage Price Oscillator(PPO) shows the relationship between two Moving Averages(MA) as a percentage.", "required_parameters": [{"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}, {"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}], "optional_parameters": [{"name": "ma_type", "type": "STRING", "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`", "default": "SMA"}, {"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}, {"name": "series_type", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}, {"name": "slow_period", "type": "NUMBER", "description": "", "default": 26}, {"name": "fast_period", "type": "NUMBER", "description": "", "default": 12}, {"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}], "method": "GET", "template_response": {"meta": {"symbol": "str", "interval": "str", "currency": "str", "exchange_timezone": "str", "exchange": "str", "mic_code": "str", "type": "str", "indicator": {"name": "str", "series_type": "str", "fast_period": "int", "slow_period": "int", "ma_type": "str"}}, "values": [{"datetime": "str", "ppo": "str", "_list_length": 30}], "status": "str"}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "KAMA", "api_description": "Kaufman's Adaptive Moving Average(KAMA) is a type of Moving Average(MA) that incorporates market noise and volatility.", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}, {"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}], "optional_parameters": [{"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}, {"name": "time_period", "type": "NUMBER", "description": "", "default": 9}, {"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}, {"name": "series_type", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "TYPPRICE", "api_description": "Typical Price(TYPPRICE).", "required_parameters": [{"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}, {"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}], "optional_parameters": [{"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}, {"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}], "method": "GET", "template_response": {"message": "str"}}], "query": "My company is organizing a financial conference and we need real-time trading data for various markets. Can you provide us with the 24 hours trading data? Additionally, we'd like to know the strategy and market returns for the ETFs and funds we are interested in.", "relevant APIs": [["QuantaEx Market Data", "24 Hours Tickers"], ["Morning Star", "{type}/get-strategy"], ["Morning Star", "market/v2/get-returns"]], "query_id": 60}, {"api_list": [{"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/risk/get-risk-return-analysis", "api_description": "Get risk return analysis in the Risk tab", "required_parameters": [{"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}, {"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/analysis/get-archived", "api_description": "Get Morningstar's analysis archived related to an ETF or FUND", "required_parameters": [{"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}, {"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "stock/v2/get-analysis-report", "api_description": "Get detail information of stock, market", "required_parameters": [{"name": "performanceId", "type": "STRING", "description": "Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints", "default": "0P0000OQN8"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Financial", "tool_name": "QuantaEx Market Data", "api_name": "24 Hours Tickers", "api_description": "24 hours trading data", "required_parameters": [], "optional_parameters": [{"name": "quantaex.com", "type": "STRING", "description": "", "default": ""}], "method": "GET"}, {"category_name": "Finance", "tool_name": "Stock and Options Trading Data Provider", "api_name": "Straddle", "api_description": "Straddle Format", "required_parameters": [{"name": "ticker", "type": "STRING", "description": "Ticker for Intel Stock", "default": "intc"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Stock and Options Trading Data Provider", "api_name": "Options", "api_description": "Stock and Options Data", "required_parameters": [{"name": "ticker", "type": "STRING", "description": "A ticker for U.S. Trading Stocks and ETF", "default": "aapl"}], "optional_parameters": [], "method": "GET", "template_response": "{\"stock\": {\"avgTotalVolume\": \"int\", \"calculationPrice\": \"str\", \"close\": \"float\", \"closeSource\": \"str\", \"closeTime\": \"int\", \"currency\": \"str\", \"delayedPrice\": \"NoneType\", \"delayedPriceTime\": \"NoneType\", \"extendedChange\": \"NoneType\", \"extendedChangePercent\": \"NoneType\", \"extendedPrice\": \"NoneType\", \"extendedPriceTime\": \"NoneType\", \"highSource\": \"NoneType\", \"highTime\": \"NoneType\", \"lastTradeTime\": \"int\", \"latestSource\": \"str\", \"latestTime\": \"str\", \"latestUpdate\": \"int\", \"latestVolume\": \"int\", \"lowSource\": \"NoneType\", \"lowTime\": \"NoneType\", \"marketCap\": \"int\", \"oddLotDelayedPrice\": \"NoneType\", \"oddLotDelayedPriceTime\": \"NoneType\", \"open\": \"NoneType\", \"openTime\": \"int\", \"openSource\": \"str\", \"peRatio\": \"float\", \"previousVolume\": \"int\", \"primaryExchange\": \"str\", \"symbol\": \"str\", \"volume\": \"int\", \"week52High\": \"float\", \"week52Low\": \"float\", \"ytdChange\": \"float\", \"isUSMarketOpen\": \"bool\", \"shortName\": \"str\", \"regularMarketPrice\": \"float\", \"regularMarketOpen\": \"float\", \"regularMarketDayHigh\": \"N"}], "query": "My company is planning to invest in the stock market and we need some insights before making a decision. Can you fetch the risk-return analysis for ETFs and funds? Additionally, provide us with the 24-hour trading data for various tickers.", "relevant APIs": [["Morning Star", "{type}/risk/get-risk-return-analysis"], ["QuantaEx Market Data", "24 Hours Tickers"]], "query_id": 66}, {"api_list": [{"category_name": "Commerce", "tool_name": "AliExpress unofficial", "api_name": "/product/{id}", "api_description": " ", "required_parameters": [{"name": "id", "type": "NUMBER", "description": "", "default": "4000886597329"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "", "default": ""}, {"name": "currency", "type": "STRING", "description": "", "default": ""}, {"name": "country", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Commerce", "tool_name": "AliExpress unofficial", "api_name": "/categories/{id}", "api_description": " ", "required_parameters": [{"name": "id", "type": "NUMBER", "description": "", "default": "200000783"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "", "default": ""}, {"name": "country", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": {"error": "str"}}, {"category_name": "Commerce", "tool_name": "AliExpress unofficial", "api_name": "/shipping/{id}", "api_description": " ", "required_parameters": [{"name": "id", "type": "NUMBER", "description": "", "default": "4000886597329"}], "optional_parameters": [{"name": "count", "type": "NUMBER", "description": "", "default": 1}, {"name": "locale", "type": "STRING", "description": "", "default": ""}, {"name": "country", "type": "STRING", "description": "", "default": ""}, {"name": "currency", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "eCommerce", "tool_name": "Magic AliExpress", "api_name": "/api/shipping/{productID}", "api_description": "This ressource displays the shipping information for one product", "required_parameters": [{"name": "productID", "type": "NUMBER", "description": "The Aliexpress product ID", "default": "4000961087745"}], "optional_parameters": [{"name": "toCountry", "type": "STRING", "description": "The country to calcul the freight ", "default": "FR"}], "method": "GET"}, {"category_name": "eCommerce", "tool_name": "Magic AliExpress", "api_name": "/api/countriesAvailableToShipping", "api_description": "This resource represents the countries. Each country is composed of Code and Name Attributes. This service can be used to communicate with product service for the countryFrom and countryTo query parameters.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "eCommerce", "tool_name": "Magic AliExpress", "api_name": "/api/bestSales/products", "api_description": "This resource represents the best sales detected by our system", "required_parameters": [{"name": "page", "type": "NUMBER", "description": "you can sorted the products", "default": 1}], "optional_parameters": [{"name": "priceMin", "type": "NUMBER", "description": "filter by the price min", "default": 5}, {"name": "categoryID", "type": "NUMBER", "description": "filter by the category's ID", "default": ""}, {"name": "priceMax", "type": "NUMBER", "description": "filter by the price max", "default": 20}, {"name": "sort", "type": "STRING", "description": "you can sorted the products", "default": "EVALUATE_RATE_ASC"}, {"name": "searchName", "type": "STRING", "description": "Returns products with the name", "default": "shoes"}], "method": "GET"}], "query": "I'm organizing a company event and I need to buy some products. Can you fetch the details of a specific product with ID 4000886597329? Additionally, provide me with the available shipping countries for the products.", "relevant APIs": [["AliExpress unofficial", "/product/{id}"], ["Magic AliExpress", "/api/countriesAvailableToShipping"]], "query_id": 369}, {"api_list": [{"category_name": "Food", "tool_name": "The Cocktail DB", "api_name": "Detailed Cocktail Recipe by ID", "api_description": "Get Cocktail by ID", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": "45"}], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "difficulty": "str", "portion": "str", "time": "str", "description": "str", "ingredients": ["list of str with length 5"], "method": [{"Step 1": "str", "_list_length": 3}], "image": "str"}}, {"category_name": "Food", "tool_name": "The Cocktail DB", "api_name": "List of Cocktails", "api_description": "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "difficulty": "str", "image": "str"}}, {"category_name": "Data", "tool_name": "Open Brewery DB", "api_name": "Breweries", "api_description": "List of Breweries", "required_parameters": [], "optional_parameters": [{"name": "by_state", "type": "STRING", "description": "Search by State", "default": "NY"}, {"name": "by_name", "type": "STRING", "description": "Search by Name", "default": "cooper"}, {"name": "by_type", "type": "STRING", "description": "Must be one of: micro, regional, brewpub, large, planning, bar, contract, proprietor", "default": "micro"}, {"name": "sort", "type": "STRING", "description": "+ for acending order (default order); - for decending order comma-separated. Example: sort=-name,+type,city", "default": ""}, {"name": "by_tag", "type": "STRING", "description": "Must be one of: dog-friendly, patio, food-service, food-truck, tours", "default": "patio"}], "method": "GET", "template_response": {}}, {"category_name": "Data", "tool_name": "Open Brewery DB", "api_name": "Search", "api_description": "Search for a brewery", "required_parameters": [], "optional_parameters": [{"name": "query", "type": "STRING", "description": "Search for a brewery", "default": "dog"}], "method": "GET", "template_response": {"id": "str", "name": "str", "brewery_type": "str", "address_1": "str", "address_2": "NoneType", "address_3": "NoneType", "city": "str", "state_province": "str", "postal_code": "str", "country": "str", "longitude": "str", "latitude": "str", "phone": "str", "website_url": "str", "state": "str", "street": "str"}}, {"category_name": "Data", "tool_name": "Open Brewery DB", "api_name": "Autocomplete", "api_description": "", "required_parameters": [{"name": "query", "type": "STRING", "description": "Autocomplete a query", "default": "dog"}], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "name": "str"}}, {"category_name": "Food", "tool_name": "Edamam Nutrition Analysis", "api_name": "/api/nutrition-data", "api_description": "This returns the nutritional analysis for the specified food text by extracting information from a short unstructured food text (usually an ingredient line and returns the following structured data for the text: quantity, measure and food,) and if available: diet, health and allergen labels for the text.  With the built in food logging feature, this allows for change of context. For example, \u201crice\u201d will normally be matched to raw rice while, with the food logging feature on, it will match to ready to eat \u2018cooked rice.\u2019 \n \n <b>Access Point:</b> https://api.edamam.com/api/nutrition-data", "required_parameters": [{"name": "ingr", "type": "STRING", "description": "The ingredient.", "default": ""}], "optional_parameters": [{"name": "nutrition-type", "type": "STRING", "description": "Select between the cooking and food logging processor.", "default": "cooking"}], "method": "GET", "template_response": {"error": "str", "message": "str"}}], "query": "I'm planning a summer party and I want to serve some refreshing cocktails. Can you provide me with a list of summer-themed cocktails along with their detailed recipes and images? Also, suggest some breweries in my area where I can get the ingredients for these cocktails.", "relevant APIs": [["The Cocktail DB", "List of Cocktails"], ["The Cocktail DB", "Detailed Cocktail Recipe by ID"], ["Open Brewery DB", "Breweries"]], "query_id": 496}, {"api_list": [{"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "120 Hour Forecast", "api_description": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "hours", "type": "STRING", "description": "Limit number of forecast hours", "default": "48"}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Severe Weather Alerts", "api_description": "Get servere weather alerts from local meteorlogical agencies (US, EU, and Isreal supported )", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [], "method": "GET", "template_response": {"alerts": "empty list", "city_name": "str", "country_code": "str", "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Weather", "tool_name": "Visual Crossing Weather", "api_name": "Weather forecast data", "api_description": "Provides access to weather forecast information. The forecast is available for up to seven days at the hourly, 12 hour and daily summary level.", "required_parameters": [{"name": "aggregateHours", "type": "NUMBER", "description": "The interval between weather forecast data in the output. 1 represents an hourly forecast, 24 represents a daily forecast. As the source data is calculated at the hourly level, records calculated at 12 or 24 hours are aggregated to indicate the predominant weather condition during that time period. For example the maximum temperature, total precipitation, maximum windspeed etc.  Supported values 1,12 or 24.", "default": "24"}, {"name": "location", "type": "STRING", "description": "he address or latitude or longitude of the location. Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats. When specify a point based on longitude, latitude, the format must be specifed as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).", "default": "Washington,DC,USA"}], "optional_parameters": [{"name": "contentType", "type": "STRING", "description": "When present, choose between json or csv output", "default": "csv"}, {"name": "unitGroup", "type": "STRING", "description": "unitGroup - The system of units used for the output data.  Supported values are us,uk,metric.", "default": "us"}, {"name": "shortColumnNames", "type": "BOOLEAN", "description": " When false, the returned dataset includes descriptive column names. When true, returns shorter, abbreviated column names with only alphanumeric characters. The short names are useful for programmatic use of the data.", "default": "0"}], "method": "GET"}, {"category_name": "Weather", "tool_name": "Visual Crossing Weather", "api_name": "Historical weather record", "api_description": "The weather history data is suitable for retrieving hourly or daily historical weather records.", "required_parameters": [{"name": "location", "type": "STRING", "description": "The address or latitude or longitude of the location. Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats. When specify a point based on longitude, latitude, the format must be specifed as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).", "default": "Washington,DC,USA"}, {"name": "endDateTime", "type": "STRING", "description": "The date time for the start of the data request using the time zone of the location. In the ISO format: yyyy-MM-ddTHH:mm:ss. Hours should be specified in 24 hour clock format.", "default": "2019-01-03T00:00:00"}, {"name": "startDateTime", "type": "STRING", "description": "The date time for the start of the data request using the time zone of the location. In the ISO format: yyyy-MM-ddTHH:mm:ss. Hours should be specified in 24 hour clock format.", "default": "2019-01-01T00:00:00"}, {"name": "aggregateHours", "type": "NUMBER", "description": "The interval between weather history data in the output. 1 represent hourly records, 24 represents a daily forecast. As the source data is recorded at the hourly level, 24 hour records are aggregated to indicate the predominant weather conditions during that time period.  Supported values 1 or 24.", "default": "24"}, {"name": "unitGroup", "type": "STRING", "description": "The system of units used for the output data.  Supported values are us,uk,metric", "default": "us"}], "optional_parameters": [{"name": "contentType", "type": "STRING", "description": "When present, choose between json or csv output", "default": "csv"}, {"name": "dayEndTime", "type": "STRING", "description": "When present and not set to the same as the dayEndTime, filters the output to records that between the specified day times.", "default": "17:00:00"}, {"name": "dayStartTime", "type": "STRING", "description": "When present and not set to the same as the dayEndTime, filters the output to records that between the specified day times. This is useful for setting filters for business hours. Format h:m:ss (eg 9:00:00 woudl be 9am).", "default": "8:00:00"}, {"name": "shortColumnNames", "type": "BOOLEAN", "description": "When false, the returned dataset includes descriptive column names. When true, returns shorter, abbreviated column names with only alphanumeric characters. The short names are useful for programmatic use of the data.", "default": "0"}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "120 Hour Forecast", "api_description": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "hours", "type": "STRING", "description": "Limit number of forecast hours", "default": "48"}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Severe Weather Alerts", "api_description": "Get servere weather alerts from local meteorlogical agencies (US, EU, and Isreal supported )", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [], "method": "GET", "template_response": {"alerts": "empty list", "city_name": "str", "country_code": "str", "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}], "query": "I'm a travel blogger and I want to write an article about the best time to visit a popular tourist destination. Can you provide me with the hourly weather forecast for the next 3 days at the destination? Additionally, I would like to check if there are any severe weather alerts in that area.", "relevant APIs": [["Weather", "1 Hour / Minutely Forecast (Nowcast)"], ["Weather", "Severe Weather Alerts"], ["Visual Crossing Weather", "Weather forecast data"]], "query_id": 525}, {"api_list": [{"category_name": "Data", "tool_name": "Holy Bible", "api_name": "GetVerses", "api_description": "", "required_parameters": [{"name": "Book", "type": "STRING", "description": "Enter one of the books from Bible.", "default": "Luke"}, {"name": "chapter", "type": "NUMBER", "description": "Enter chapter number from given book.", "default": "1"}, {"name": "VerseFrom", "type": "NUMBER", "description": "Enter Verse to start.", "default": "5"}, {"name": "VerseTo", "type": "NUMBER", "description": "Enter Verse to End.", "default": "8"}], "optional_parameters": [], "method": "GET", "template_response": {"Book": "str", "Chapter": "str", "VerseFrom": "str", "VerseTo": "str", "Output": "str"}}, {"category_name": "Data", "tool_name": "Holy Bible", "api_name": "GetVerseOfaChapter", "api_description": "", "required_parameters": [{"name": "Book", "type": "STRING", "description": "", "default": "Luke"}, {"name": "chapter", "type": "NUMBER", "description": "", "default": "1"}, {"name": "Verse", "type": "NUMBER", "description": "", "default": "1"}], "optional_parameters": [], "method": "GET", "template_response": {"Book": "str", "Chapter": "str", "Verse": "str", "Output": "str"}}, {"category_name": "Data", "tool_name": "Holy Bible", "api_name": "GetChapter", "api_description": "", "required_parameters": [{"name": "Book", "type": "STRING", "description": "Enter one of the books from Bible.", "default": "Luke"}, {"name": "chapter", "type": "NUMBER", "description": "Enter chapter number from given book.", "default": "8"}], "optional_parameters": [], "method": "GET", "template_response": {"Book": "str", "Chapter": "str", "Output": "str"}}, {"category_name": "Education", "tool_name": "Uncovered Treasure", "api_name": "/topic/{topic}", "api_description": "Get entries from a specific topic", "required_parameters": [{"name": "topic", "type": "STRING", "description": "\"seek God\"", "default": ""}], "optional_parameters": [{"name": "callback", "type": "STRING", "description": "Optional JSONP callback", "default": ""}], "method": "GET", "template_response": {"results": "empty list"}}, {"category_name": "Education", "tool_name": "Uncovered Treasure", "api_name": "/verse/{verse}", "api_description": "Get treasure by verse", "required_parameters": [{"name": "verse", "type": "STRING", "description": "Use common English name with chapter number and optionally verse, such as \"1 Corinthians 1\", \"1 Corinthians 1:5\" or \"James 3\". Does NOT support ranged searches, such as \"James 3:1-4\".", "default": "Acts 21:8"}], "optional_parameters": [{"name": "callback", "type": "STRING", "description": "Optional JSONP callback", "default": ""}], "method": "GET", "template_response": {"results": [{"date": "str", "context": "str", "scriptures": ["list of str with length 1"], "text": "str", "topics": ["list of str with length 3"], "bookOrder": "int", "_list_length": 4}]}}, {"category_name": "Education", "tool_name": "Uncovered Treasure", "api_name": "/topics", "api_description": "Get list of all topics", "required_parameters": [], "optional_parameters": [{"name": "callback", "type": "STRING", "description": "Optional JSONP callback", "default": ""}], "method": "GET", "template_response": {"results": ["list of NoneType with length 2443"]}}], "query": "I'm writing a book about the power of Bible verses in daily life. Can you fetch a verse from the book of Isaiah, chapter 40, verse 31? Furthermore, I'm interested in exploring educational topics related to religion. Can you provide me with a list of available topics from the Uncovered Treasure API?", "relevant APIs": [["Holy Bible", "GetVerseOfaChapter"], ["Uncovered Treasure", "/topics"]], "query_id": 569}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}], "query": "I'm planning a party for my friends and I want to include some fun jokes to entertain them. Can you provide me with ten jokes from the Jokes by API-Ninjas? Additionally, I would like to search for Chuck Norris jokes that mention cats. Can you find any for me?", "relevant APIs": [["Jokes by API-Ninjas", "/v1/jokes"], ["Chuck Norris", "/jokes/search"]], "query_id": 587}, {"api_list": [{"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Random Joke", "api_description": "Get the random joke from a collection of most rated and most popular jokes.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Joke of the Day By Category", "api_description": "Get the joke of the day of specific category from a collection of most rated and most popular jokes.", "required_parameters": [{"name": "category", "type": "STRING", "description": "Category of joke based on the jokes categories API", "default": "Money"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Random Joke By Category", "api_description": "Get the random joke by category from a collection of most rated and most popular jokes.", "required_parameters": [{"name": "category", "type": "STRING", "description": "Category of joke based on the jokes categories API", "default": "Political"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "DaddyJokes", "api_name": "Random", "api_description": "Get a random dad joke", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm preparing a funny presentation for my class and I need some jokes to lighten the mood. Fetch a random joke from the Jokes by API-Ninjas API, a Chuck Norris joke from the Chuck Norris API, and a dad joke from the DaddyJokes API.", "relevant APIs": [["Jokes by API-Ninjas", "/v1/jokes"], ["Chuck Norris", "/jokes/random"], ["DaddyJokes", "Random"]], "query_id": 605}, {"api_list": [{"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Entertainment", "tool_name": "Programming Memes Images", "api_name": "v1/memes", "api_description": "Get Random Programming Memes", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Random Joke By Category", "api_description": "Get the random joke by category from a collection of most rated and most popular jokes.", "required_parameters": [{"name": "category", "type": "STRING", "description": "Category of joke based on the jokes categories API", "default": "Political"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Random Joke", "api_description": "Get the random joke from a collection of most rated and most popular jokes.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Joke of the Day", "api_description": "Get the joke of the day from a collection of most rated and most popular jokes.", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm planning a surprise party for my best friend's birthday. Can you fetch a random manatee joke and a programming meme to add some fun to the party? Also, find a nearby restaurant that can accommodate a group of 20 people and make a reservation for the party.", "relevant APIs": [["manatee jokes", "random"], ["Programming Memes Images", "v1/memes"]], "query_id": 606}, {"api_list": [{"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports/{sport}/odds", "api_description": "Returns list of live and upcoming games for a given sport, showing bookmaker odds for the specified region and markets. Set the `sport` to a `sport_key` from the /sports endpoint. Alternatively if `sport=upcoming`, it will return a list of the next 8 upcoming games across all sports, as well as any live games. For more info, see [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html) and [list of available bookmakers](https://the-odds-api.com/sports-odds-data/bookmaker-apis.html).", "required_parameters": [{"name": "sport", "type": "STRING", "description": "sport key for which to return games and odds", "default": "upcoming"}, {"name": "regions", "type": "STRING", "description": "Determines which bookmakers appear in the response. Can be a comma delimited list of regions. Each region will count as 1 request against the usage quota for each market. Most use cases will only need to specify one region. For a list of bookmakers by region, see https://the-odds-api.com/sports-odds-data/bookmaker-apis.html", "default": "us"}], "optional_parameters": [{"name": "oddsFormat", "type": "STRING", "description": "Format of returned odds.", "default": "decimal"}, {"name": "markets", "type": "STRING", "description": "The odds market to return. Can be a comma delimited list of odds markets. Defaults to h2h (head to head / moneyline). Outrights only avaialable for select sports. Note each market counts as 1 request against the usage quota.", "default": "h2h,spreads"}, {"name": "dateFormat", "type": "STRING", "description": "Format of returned timestamps. Can be iso (ISO8601) or unix timestamp (seconds since epoch)", "default": "iso"}], "method": "GET", "template_response": {"id": "str", "sport_key": "str", "sport_title": "str", "commence_time": "str", "home_team": "str", "away_team": "str", "bookmakers": [{"key": "str", "title": "str", "last_update": "str", "markets": [{"key": "str", "last_update": "str", "outcomes": [{"name": "str", "price": "float", "_list_length": 2}], "_list_length": 1}], "_list_length": 1}]}}, {"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports/{sport}/scores", "api_description": "Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html)", "required_parameters": [{"name": "sport", "type": "STRING", "description": "sport key for which to return games and odds", "default": "americanfootball_nfl"}], "optional_parameters": [{"name": "daysFrom", "type": "NUMBER", "description": "The number of days in the past from which to return completed games. Valid values are integers from `1` to `3`. If this field is missing, only live and upcoming games are returned.", "default": 3}], "method": "GET", "template_response": {"id": "str", "sport_key": "str", "sport_title": "str", "commence_time": "str", "completed": "bool", "home_team": "str", "away_team": "str", "scores": "NoneType", "last_update": "NoneType"}}, {"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports", "api_description": "Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints.", "required_parameters": [], "optional_parameters": [{"name": "all", "type": "BOOLEAN", "description": "When excluded, only recently updated (in-season) sports appear. Include this paramter to see all available sports", "default": "true"}], "method": "GET", "template_response": {"key": "str", "group": "str", "title": "str", "description": "str", "active": "bool", "has_outrights": "bool"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Place Date-Time", "api_description": "Get this place's current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ", "required_parameters": [{"name": "placeId", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "City Located In", "api_description": "Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level  (if available). \n\nCurrently, this data is highly dependent on whether the Wikidata **locatedIn** relation is properly defined. If you see an issue, please propose a change to the corresponding Wikidata entry.", "required_parameters": [{"name": "cityId", "type": "string", "description": "", "default": "Q65"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Time-Zone", "api_description": "Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ", "required_parameters": [{"name": "zoneid", "type": "STRING", "description": "The time-zone id", "default": "America__Los_Angeles"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Data", "tool_name": "Web Search", "api_name": "imageSearch", "api_description": "Get relevant images for a given query.", "required_parameters": [{"name": "q", "type": "STRING", "description": "The user's search query string.", "default": "taylor swift"}, {"name": "pageNumber", "type": "NUMBER", "description": "The page to view.", "default": "1"}, {"name": "pageSize", "type": "NUMBER", "description": "The number of items per page. The maximum value is 50.", "default": "10"}, {"name": "autoCorrect", "type": "BOOLEAN", "description": "Automatically correct spelling.", "default": true}], "optional_parameters": [{"name": "safeSearch", "type": "BOOLEAN", "description": "A filter used to filter results for adult content.", "default": false}], "method": "GET"}, {"category_name": "Data", "tool_name": "Web Search", "api_name": "spellCheck", "api_description": "Check spelling.", "required_parameters": [{"name": "text", "type": "STRING", "description": "The text string to check for spelling errors.", "default": "teylor swiift"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Data", "tool_name": "Web Search", "api_name": "newsSearch", "api_description": "Get news articles relevant for a given query.", "required_parameters": [{"name": "pageSize", "type": "NUMBER", "description": "The number of items per page. The maximum value is 50.", "default": "10"}, {"name": "autoCorrect", "type": "BOOLEAN", "description": "Automatically correct spelling.", "default": true}, {"name": "q", "type": "STRING", "description": "The user's search query string.", "default": "taylor swift"}, {"name": "pageNumber", "type": "NUMBER", "description": "The page to view.", "default": "1"}], "optional_parameters": [{"name": "toPublishedDate", "type": "STRING", "description": "The  published date and time for the newest article allowed.  For example: *2015-05-16T05:50:06.* See  [https://www.c-sharpcorner.com/blogs/date-and-time-format-in-c-sharp-programming1 ](url)for more possible DateTime formats. ", "default": "null"}, {"name": "safeSearch", "type": "BOOLEAN", "description": "A filter used to filter results for adult content.", "default": false}, {"name": "fromPublishedDate", "type": "STRING", "description": "The  published date and time for the oldest article allowed.  For example: *2015-05-16T05:50:06.* See  [https://www.c-sharpcorner.com/blogs/date-and-time-format-in-c-sharp-programming1 ](url)for more possible DateTime formats. ", "default": "null"}, {"name": "withThumbnails", "type": "BOOLEAN", "description": "Show results with image thumbnails.", "default": false}], "method": "GET"}], "query": "I am a sports blogger and I'm always looking for engaging content for my readers. Can you provide me with a list of upcoming sports events and their bookmaker odds? Additionally, I would like to search for news articles about remarkable sports achievements to share with my audience.", "relevant APIs": [["Live Sports Odds", "/v4/sports/{sport}/odds"], ["Web Search", "newsSearch"]], "query_id": 710}, {"api_list": [{"category_name": "Data", "tool_name": "Web Search", "api_name": "spellCheck", "api_description": "Check spelling.", "required_parameters": [{"name": "text", "type": "STRING", "description": "The text string to check for spelling errors.", "default": "teylor swiift"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Data", "tool_name": "Web Search", "api_name": "newsSearch", "api_description": "Get news articles relevant for a given query.", "required_parameters": [{"name": "pageSize", "type": "NUMBER", "description": "The number of items per page. The maximum value is 50.", "default": "10"}, {"name": "autoCorrect", "type": "BOOLEAN", "description": "Automatically correct spelling.", "default": true}, {"name": "q", "type": "STRING", "description": "The user's search query string.", "default": "taylor swift"}, {"name": "pageNumber", "type": "NUMBER", "description": "The page to view.", "default": "1"}], "optional_parameters": [{"name": "toPublishedDate", "type": "STRING", "description": "The  published date and time for the newest article allowed.  For example: *2015-05-16T05:50:06.* See  [https://www.c-sharpcorner.com/blogs/date-and-time-format-in-c-sharp-programming1 ](url)for more possible DateTime formats. ", "default": "null"}, {"name": "safeSearch", "type": "BOOLEAN", "description": "A filter used to filter results for adult content.", "default": false}, {"name": "fromPublishedDate", "type": "STRING", "description": "The  published date and time for the oldest article allowed.  For example: *2015-05-16T05:50:06.* See  [https://www.c-sharpcorner.com/blogs/date-and-time-format-in-c-sharp-programming1 ](url)for more possible DateTime formats. ", "default": "null"}, {"name": "withThumbnails", "type": "BOOLEAN", "description": "Show results with image thumbnails.", "default": false}], "method": "GET"}, {"category_name": "Data", "tool_name": "Web Search", "api_name": "imageSearch", "api_description": "Get relevant images for a given query.", "required_parameters": [{"name": "q", "type": "STRING", "description": "The user's search query string.", "default": "taylor swift"}, {"name": "pageNumber", "type": "NUMBER", "description": "The page to view.", "default": "1"}, {"name": "pageSize", "type": "NUMBER", "description": "The number of items per page. The maximum value is 50.", "default": "10"}, {"name": "autoCorrect", "type": "BOOLEAN", "description": "Automatically correct spelling.", "default": true}], "optional_parameters": [{"name": "safeSearch", "type": "BOOLEAN", "description": "A filter used to filter results for adult content.", "default": false}], "method": "GET"}, {"category_name": "eCommerce", "tool_name": "Real-Time Product Search", "api_name": "Product Reviews", "api_description": "Get all product reviews. Infinite pagination/scrolling is supported using the *limit* and *offset* parameters.", "required_parameters": [{"name": "product_id", "type": "STRING", "description": "Product id of the product for which to fetch reviews.", "default": "11577822456427762145"}], "optional_parameters": [{"name": "country", "type": "STRING", "description": "Country code of the region/country.\nValid values: see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nDefault: `us`.", "default": "us"}, {"name": "language", "type": "STRING", "description": "The language of the results.\nValid values: see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\nDefault: `en`.", "default": "en"}, {"name": "offset", "type": "STRING", "description": "Number of reviews to skip.\nValid values: integers from 0-30000\nDefault: `0`.", "default": ""}, {"name": "rating", "type": "STRING", "description": "Only return reviews with user rating greater than the specified value.\nValid values: 1-5.", "default": ""}, {"name": "limit", "type": "STRING", "description": "Maximum number of product reviews to return.\nValid values: integers from 0-100.\nDefault: `10`.", "default": ""}], "method": "GET", "template_response": {"status": "str", "request_id": "str", "error": {"message": "str", "code": "int"}}}, {"category_name": "eCommerce", "tool_name": "Real-Time Product Search", "api_name": "Product Offers", "api_description": "Get all offers available for a product.", "required_parameters": [{"name": "product_id", "type": "STRING", "description": "Product id of the product for which to fetch offers.", "default": "11577822456427762145"}], "optional_parameters": [{"name": "country", "type": "STRING", "description": "Country code of the region/country to return offers for.\nValid values: see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nDefault: `us`.", "default": "us"}, {"name": "language", "type": "STRING", "description": "The language of the results.\nValid values: see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\nDefault: `en`.", "default": "en"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "eCommerce", "tool_name": "Real-Time Product Search", "api_name": "Search", "api_description": "Search for product offers - both free-form queries and GTIN/EAN are supported. Each page contains up to 30 product offers. Infinite pagination/scrolling is supported using the *page* parameter.", "required_parameters": [{"name": "q", "type": "STRING", "description": "Free-form search query or a GTIN/EAN (e.g. *0194252014233*).", "default": "Nike shoes"}], "optional_parameters": [{"name": "store_id", "type": "STRING", "description": "Only return product offers from a specific store. Store IDs can be obtained from the Google Shopping URL after using the **Seller** filter by taking the first part of the `merchagg` variable (until the first *|*) within the `tbs` parameter.\n\n**Example**\nafter filtering for eBay, the following URL is shown on the address bar: `https://www.google.com/search?gl=us&tbm=shop&q=shoes&tbs=mr:1,merchagg:g6296794|m6296724|m133929137`, in that case, the extracted eBay Store ID is  **g6296794**.", "default": ""}, {"name": "sort_by", "type": "ENUM", "description": "Sort product offers by best match, top rated, lowest or highest price.\nPossible values: `BEST_MATCH`, `TOP_RATED`, `LOWEST_PRICE`, `HIGHEST_PRICE`.\nDefault: `BEST_MATCH`.", "default": ""}, {"name": "max_shipping_days", "type": "NUMBER", "description": "Only return product offers that offer shipping/delivery of up to specific number of days (i.e. shipping speed).", "default": ""}, {"name": "page", "type": "NUMBER", "description": "Results page to return.\nDefault: `1`.", "default": ""}, {"name": "on_sale", "type": "BOOLEAN", "description": "Only return product offers that are currently on sale.\nDefault: `false`.", "default": ""}, {"name": "product_condition", "type": "ENUM", "description": "Only return products with a specific condition.\nPossible values: `NEW`, `USED`, `REFURBISHED`.", "default": ""}, {"name": "free_shipping", "type": "BOOLEAN", "description": "Only return product offers that offer free shipping/delivery.\nDefault: `false`.", "default": ""}, {"name": "language", "type": "STRING", "description": "The language of the results.\nValid values: see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\nDefault: `en`.", "default": "en"}, {"name": "country", "type": "STRING", "description": "Country code of the region/country to return offers for.\nValid values: see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nDefault: `us`.", "default": "us"}, {"name": "free_returns", "type": "BOOLEAN", "description": "Only return product offers that offer free returns.\nDefault: `false`.", "default": ""}, {"name": "max_price", "type": "NUMBER", "description": "Only return product offers with price lower than a certain value.", "default": ""}, {"name": "min_price", "type": "NUMBER", "description": "Only return product offers with price greater than a certain value.", "default": ""}], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm planning a trip to Paris with my family and we need some information to make the most of our visit. Can you provide me with news articles about popular tourist attractions in Paris? Additionally, I would like to see relevant images of these attractions to get a better idea of what to expect. Finally, please recommend some good hotels in Paris that are near these attractions.", "relevant APIs": [["Web Search", "newsSearch"], ["Web Search", "imageSearch"], ["Real-Time Product Search", "Search"]], "query_id": 809}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}], "query": "I'm planning a surprise visit to my grandparents and I want to make them smile. Fetch a random manatee joke to share with my grandparents. Additionally, provide a funny joke from the Jokes by API-Ninjas endpoint. Finally, suggest some nostalgic activities or games that we can enjoy together.", "relevant APIs": [["Jokes by API-Ninjas", "/v1/jokes"], ["manatee jokes", "random"], ["manatee jokes", "find all"]], "query_id": 828}, {"api_list": [{"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts/active/count", "api_description": "A list of active counts for regions, areas and zones. A list of these items forthcoming.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": "{\"total\": \"int\", \"land\": \"int\", \"marine\": \"int\", \"regions\": {\"AL\": \"int\", \"AT\": \"int\", \"GL\": \"int\", \"GM\": \"int\", \"PA\": \"int\", \"PI\": \"int\"}, \"areas\": {\"AK\": \"int\", \"AL\": \"int\", \"AM\": \"int\", \"AN\": \"int\", \"AR\": \"int\", \"AZ\": \"int\", \"CA\": \"int\", \"CO\": \"int\", \"DE\": \"int\", \"FL\": \"int\", \"GA\": \"int\", \"GM\": \"int\", \"IA\": \"int\", \"ID\": \"int\", \"IN\": \"int\", \"KS\": \"int\", \"KY\": \"int\", \"LA\": \"int\", \"LE\": \"int\", \"MD\": \"int\", \"ME\": \"int\", \"MI\": \"int\", \"MO\": \"int\", \"MS\": \"int\", \"NC\": \"int\", \"NE\": \"int\", \"NH\": \"int\", \"NJ\": \"int\", \"NM\": \"int\", \"NV\": \"int\", \"NY\": \"int\", \"OH\": \"int\", \"OK\": \"int\", \"PA\": \"int\", \"PH\": \"int\", \"PK\": \"int\", \"PR\": \"int\", \"PZ\": \"int\", \"SD\": \"int\", \"TN\": \"int\", \"TX\": \"int\", \"VA\": \"int\", \"VI\": \"int\", \"WY\": \"int\"}, \"zones\": {\"AKC090\": \"int\", \"AKC185\": \"int\", \"AKC188\": \"int\", \"AKC290\": \"int\", \"AKZ203\": \"int\", \"AKZ204\": \"int\", \"AKZ206\": \"int\", \"AKZ218\": \"int\", \"AKZ220\": \"int\", \"ALC003\": \"int\", \"ALC013\": \"int\", \"ALC023\": \"int\", \"ALC025\": \"int\", \"ALC031\": \"int\", \"ALC035\": \"int\", \"ALC039\": \"i"}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/stations/{stationId}", "api_description": "Metadata about a station. Similar to /stations endpoint with id parameter. Example: /stations/KMKC", "required_parameters": [{"name": "stationId", "type": "STRING", "description": "stationId: the id of a station from the /points/{point}/stations endpoint", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 1}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts/active/area/{area}", "api_description": "A list of active alerts by area. The ATOM format returns items in CAP-ATOM.", "required_parameters": [{"name": "area", "type": "STRING", "description": "area: a valid area, see list in counts endpoint", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 4}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Data", "tool_name": "Solcast", "api_name": "Simple PV Power Forecast", "api_description": "The simple PV power request returns a first-guess PV power output forecast, based on your specified latitude and longitude plus some basic PV system characteristics.", "required_parameters": [{"name": "capacity", "type": "NUMBER", "description": "The capacity of the system, in Watts.", "default": "0"}, {"name": "latitude", "type": "NUMBER", "description": "Latitude", "default": ""}, {"name": "longitude", "type": "NUMBER", "description": "Longitude", "default": ""}], "optional_parameters": [{"name": "azimuth", "type": "NUMBER", "description": "The angle (degrees) from true north that the PV system is facing, if tilted.  Must be between -180 and 180.  An azimuth of 0 means the system is facing true north.", "default": ""}, {"name": "install_date", "type": "STRING", "description": "The date (YYYYMMMDD) of installation of the PV system.  We use this to estimate your loss factor based on ageing of your system.  If you provide a loss_factor this date will be ignored.", "default": ""}, {"name": "loss_factor", "type": "STRING", "description": "A factor by which to reduce your output forecast fom the full capacity based on characteristics of the PV array or inverter.", "default": ""}, {"name": "tilt", "type": "NUMBER", "description": "The angle (degrees) that the PV system is tilted off the horizontal.  Must be between 0 and 90. A tilt of 0 means that it is facing directly upwards, and 90 means the system is vertical and facing the horizon.", "default": "23"}, {"name": "format", "type": "STRING", "description": "Response format: json, csv, xml", "default": "json"}], "method": "GET"}, {"category_name": "Data", "tool_name": "Solcast", "api_name": "Simple Radiation Forecast", "api_description": "The simple radiation request returns detailed solar radiation data for the next week based only on your latitude and longitude.", "required_parameters": [{"name": "latitude", "type": "NUMBER", "description": "Latitude", "default": ""}, {"name": "longitude", "type": "NUMBER", "description": "Longitude", "default": ""}], "optional_parameters": [{"name": "format", "type": "STRING", "description": "Response format: json, csv, xml", "default": "json"}], "method": "GET"}], "query": "My company is organizing an outdoor event in San Francisco next week. Could you fetch the current weather conditions and any active alerts for the area? Also, provide a radiation forecast to help us plan the event better.", "relevant APIs": [["National Weather Service", "/alerts/active/area/{area}"], ["National Weather Service", "/stations/{stationId}"], ["Solcast", "Simple Radiation Forecast"]], "query_id": 903}, {"api_list": [{"category_name": "Finance", "tool_name": "Alpaca Trading", "api_name": "Get the calendar", "api_description": "Returns the market calendar", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Alpaca Trading", "api_name": "Get a list of orders", "api_description": "Retrieves a list of orders for the account, filtered by the supplied query parameters.", "required_parameters": [], "optional_parameters": [{"name": "status", "type": "STRING", "description": "Order status to be queried. By default, open is used.", "default": ""}, {"name": "until", "type": "STRING", "description": "limits the result with order time up to this value. the result is unlimited if ommitted", "default": "date-time"}, {"name": "limit", "type": "NUMBER", "description": "", "default": "default 50"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Alpaca Trading", "api_name": "Get assets", "api_description": "", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Movies", "tool_name": "Streaming Availability", "api_name": "Search Basic (FREE)", "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "required_parameters": [{"name": "services", "type": "STRING", "description": "A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.", "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"}, {"name": "country", "type": "STRING", "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.", "default": "us"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.", "default": ""}, {"name": "show_original_language", "type": "STRING", "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.", "default": "en"}, {"name": "genre", "type": "STRING", "description": "A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids.", "default": "18"}, {"name": "keyword", "type": "STRING", "description": "A keyword to only search within the shows have that keyword in their overview or title.", "default": "zombie"}, {"name": "output_language", "type": "STRING", "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.", "default": "en"}, {"name": "show_type", "type": "STRING", "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.", "default": "movie"}], "method": "GET", "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 2}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"prime\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 1}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 1}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 4}]}}, \"cast\": [\"list of str with length 7\"], \"year\": \"int\", \"advisedMinimumAudienceAge\": \"int\", \"imdbId\": "}, {"category_name": "Movies", "tool_name": "Streaming Availability", "api_name": "Search Ultra", "api_description": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "required_parameters": [{"name": "services", "type": "STRING", "description": "A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.", "default": "netflix,prime.buy,hulu.addon.hbo,peacock.free"}, {"name": "country", "type": "STRING", "description": "2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.", "default": "us"}], "optional_parameters": [{"name": "max_imdb_vote_count", "type": "NUMBER", "description": "", "default": "1000000"}, {"name": "order_by", "type": "STRING", "description": "Determines the ordering of the results.\n\nPossible values are `original_title`, `imdb_vote_count`, `imdb_rating` and `year`. Default value is `original_title`", "default": "year"}, {"name": "max_imdb_rating", "type": "NUMBER", "description": "Out of 100", "default": "90"}, {"name": "min_imdb_rating", "type": "NUMBER", "description": "Out of 100", "default": "70"}, {"name": "desc", "type": "BOOLEAN", "description": "Use descending order?\n\nPossible values are `true` and `false`. Default value is `false`.", "default": "true"}, {"name": "keyword", "type": "STRING", "description": "A keyword to only search within the shows have that keyword in their overview or title.", "default": ""}, {"name": "cursor", "type": "STRING", "description": "Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.", "default": ""}, {"name": "year_max", "type": "NUMBER", "description": "Maximum release/air year of the show.", "default": "2025"}, {"name": "min_imdb_vote_count", "type": "NUMBER", "description": "", "default": "10000"}, {"name": "year_min", "type": "NUMBER", "description": "Minimum release/air year of the show.", "default": "2000"}, {"name": "show_original_language", "type": "STRING", "description": "A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language.", "default": "en"}, {"name": "genres_relation", "type": "STRING", "description": "When more than one genre is supplied in `genres` parameter, `genres_relation` chooses the matching style against\n\nWhen `or`, the endpoint returns any show that has at least one of the given genres.\nWhen `and`, it only returns the shows that have all of the given genres.\n\nDefault value is `and`.", "default": "or"}, {"name": "genres", "type": "STRING", "description": "Comma separated list of genre ids to only search within the shows in those genres. See `/v2/genres` endpoint to see available genres and ids.\n\nWhen more than one genre supplied, set `genres_relation` parameter to specify between returning shows that have at least one of the given genres or returning shows that have all of the given genres", "default": "18,80"}, {"name": "output_language", "type": "STRING", "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.", "default": "en"}, {"name": "show_type", "type": "STRING", "description": "Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`.", "default": "movie"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Movies", "tool_name": "Streaming Availability", "api_name": "Search By Title (FREE)", "api_description": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.", "required_parameters": [{"name": "title", "type": "STRING", "description": "Title to search for.", "default": "batman"}, {"name": "country", "type": "STRING", "description": "Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.", "default": "us"}], "optional_parameters": [{"name": "show_type", "type": "STRING", "description": "Type of shows to include in the results. Either `movie`, `series` or `all`. Default is `all`.", "default": "movie"}, {"name": "output_language", "type": "STRING", "description": "2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported.", "default": "en"}], "method": "GET", "template_response": "{\"result\": [{\"type\": \"str\", \"title\": \"str\", \"overview\": \"str\", \"streamingInfo\": {\"us\": {\"apple\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 34}], \"price\": {\"amount\": \"str\", \"currency\": \"str\", \"formatted\": \"str\"}, \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 2}], \"hbo\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_length\": 3}], \"subtitles\": [{\"locale\": {\"language\": \"str\", \"region\": \"str\"}, \"closedCaptions\": \"bool\", \"_list_length\": 3}], \"price\": \"NoneType\", \"leaving\": \"int\", \"availableSince\": \"int\", \"_list_length\": 1}], \"hulu\": [{\"type\": \"str\", \"quality\": \"str\", \"addOn\": \"str\", \"link\": \"str\", \"watchLink\": \"str\", \"audios\": [{\"language\": \"str\", \"region\": \"str\", \"_list_"}], "query": "I'm planning a surprise party for my best friend's birthday and I need some ideas. Can you search for party planning websites that offer unique theme ideas and provide me with the options? Additionally, fetch the list of available venues for the party to finalize the location. Also, search for movies and series related to surprise parties to get inspiration for the event.", "relevant APIs": [["Streaming Availability", "Search Basic (FREE)"], ["Alpaca Trading", "Get a list of orders"], ["Alpaca Trading", "Get assets"]], "query_id": 963}, {"api_list": [{"category_name": "Medical", "tool_name": "GetGuidelines", "api_name": "vac", "api_description": "Vaccinations only", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Medical", "tool_name": "GetGuidelines", "api_name": "all", "api_description": "All guidelines", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Business", "tool_name": "Healthcaremailing", "api_name": "Healthcare mailing", "api_description": "Healthcare mailing, a direct marketing business founded on a base of many successful years of experience building list.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Business", "tool_name": "Lake B2B", "api_name": "Email Marketing", "api_description": "Lake B2B provides best email marketing services and programs across the globe to meet your marketing needs thus helping business to run more efficiently.", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm planning a family vacation and I need to get the vaccination guidelines for traveling. Can you provide me with the necessary vaccinations my family should take, including any specific requirements for each country we plan to visit? Additionally, I would like to gather information on healthcare mailing lists to reach out to medical professionals and clinics in the countries we'll be visiting.", "relevant APIs": [["GetGuidelines", "vac"], ["GetGuidelines", "all"], ["Healthcaremailing", "Healthcare mailing"]], "query_id": 989}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Chart Lyrics", "api_name": "/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad", "api_description": "Sample API request to search Lyrics", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Track", "api_description": "A track object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The track's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Album", "api_description": "An album object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The Deezer album id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "* Search", "api_description": "Search tracks", "required_parameters": [{"name": "q", "type": "STRING", "description": "", "default": "eminem"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "songs/get-related-artist", "api_description": "Get artist related to a song", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'songs->id' field returned from .../shazam-songs/get-details endpoint", "default": "1217912247"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"data": [{"id": "str", "type": "str", "attributes": {"genreNames": ["list of str with length 1"], "name": "str", "editorialNotes": {"name": "str", "standard": "str", "short": "str"}, "artwork": {"width": "int", "url": "str", "height": "int", "textColor3": "str", "textColor2": "str", "textColor4": "str", "textColor1": "str", "bgColor": "str", "hasP3": "bool"}, "url": "str"}, "relationships": {"albums": {"data": [{"id": "str", "type": "str", "_list_length": 25}]}}, "_list_length": 1}]}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "search", "api_description": "Search for songs, artists that match input term", "required_parameters": [{"name": "term", "type": "STRING", "description": "Full name of songs or artists", "default": "kiss the rain"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}, {"name": "limit", "type": "NUMBER", "description": "For paging purpose, maximum is fixed at 5 items per response", "default": "5"}, {"name": "offset", "type": "NUMBER", "description": "For paging purpose", "default": "0"}], "method": "GET", "template_response": "{\"tracks\": {\"hits\": [{\"track\": {\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 2}], \"providers\": [{\"caption\": \"str\", \"images\": {\"overflow\": \"str\", \"default\": \"str\"}, \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}], \"type\": \"str\", \"_list_length\": 2}], \"explicit\": \"bool\", \"dis"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "charts/track", "api_description": "Get all popular songs in specific chart", "required_parameters": [], "optional_parameters": [{"name": "listId", "type": "STRING", "description": "The value of listId field returned in .../charts/list endpoint", "default": ""}, {"name": "pageSize", "type": "NUMBER", "description": "Used for paging purpose, 20 items per response is maximum.", "default": "20"}, {"name": "startFrom", "type": "NUMBER", "description": "Used for paging purpose.", "default": "0"}, {"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"properties\": {}, \"tracks\": [{\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 1}], \"explicit\": \"bool\", \"displayname\": \"str\"}, \"artists\": [{\"alias\": \"str\", \"id\": \"str\", \"adamid\": \"str\", \"_list_length\": 1}], \"url\": \"str\", \"highlightsurls\": {\"artisthighlightsurl\": \"str\", \"trackhighlighturl\": \"str\"}, \"prope"}], "query": "I'm a music enthusiast and I want to explore different genres and artists. Can you help me search for tracks and artists using the Deezer API? Additionally, I would like to search for songs and artists using the Shazam API.", "relevant APIs": [["Deezer", "* Search"], ["Shazam", "search"]], "query_id": 3345}, {"api_list": [{"category_name": "Finance", "tool_name": "Coinmill Currency", "api_name": "Coinmill", "api_description": "", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Free Currency Converter by Hajana One", "api_name": "/currency-api.php", "api_description": "Convert Ant Currency", "required_parameters": [{"name": "amount", "type": "NUMBER", "description": "Amount you want to convert", "default": "500"}, {"name": "from", "type": "STRING", "description": "Three Letters of currency", "default": "PKR"}], "optional_parameters": [{"name": "to", "type": "STRING", "description": "Three Letters of Currency", "default": "USD"}], "method": "GET"}, {"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "listquotes", "api_description": "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "exchange", "api_description": "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1.", "required_parameters": [{"name": "from", "type": "STRING", "description": "Source Quote", "default": "SGD"}, {"name": "to", "type": "STRING", "description": "Destination Quote", "default": "MYR"}], "optional_parameters": [{"name": "q", "type": "NUMBER", "description": "Source Amount", "default": "1.0"}], "method": "GET"}, {"category_name": "Finance", "tool_name": "Currency Conversion and Exchange Rates", "api_name": "Convert", "api_description": "In addition to providing converstion rates, our API provides a dedicated endpoint to easily do conversion on a specific amount of the currency.", "required_parameters": [{"name": "to", "type": "STRING", "description": "The three-letter currency code of the currency you would like to convert to.", "default": "EUR"}, {"name": "amount", "type": "STRING", "description": "The amount to be converted.", "default": "750"}, {"name": "from", "type": "STRING", "description": "The three-letter currency code of the currency you would like to convert from.", "default": "USD"}], "optional_parameters": [{"name": "date", "type": "STRING", "description": "Optionally, provide a specific date (format YYYY-MM-DD) to use historical rates for this conversion.", "default": ""}], "method": "GET", "template_response": {"success": "bool", "query": {"from": "str", "to": "str", "amount": "int"}, "info": {"timestamp": "int", "rate": "float"}, "date": "str", "result": "float"}}, {"category_name": "Finance", "tool_name": "Currency Conversion and Exchange Rates", "api_name": "Recent Exchange Rates", "api_description": "Retrieve the latest exchange rate data. Refresh rate will depend on your subscription: updated every 60 minutes, every 10 minutes or every 60 seconds.", "required_parameters": [], "optional_parameters": [{"name": "from", "type": "STRING", "description": "Three-letter currency code of the currency would would like to convert from. This currency will be converted into the code of the currency provided in the `to` parameter", "default": "USD"}, {"name": "to", "type": "STRING", "description": "A comma-separated list of currency codes to convert the `from` parameter into.", "default": "EUR,GBP"}], "method": "GET", "template_response": "{\"timestamp\": \"int\", \"base\": \"str\", \"success\": \"bool\", \"date\": \"str\", \"rates\": {\"ANG\": \"float\", \"SVC\": \"float\", \"CAD\": \"float\", \"XCD\": \"float\", \"MVR\": \"float\", \"HRK\": \"float\", \"AUD\": \"float\", \"MWK\": \"float\", \"XAG\": \"float\", \"MAD\": \"float\", \"PHP\": \"float\", \"NAD\": \"float\", \"GNF\": \"float\", \"KES\": \"float\", \"MZN\": \"float\", \"BTN\": \"float\", \"MGA\": \"float\", \"AZN\": \"float\", \"XAU\": \"float\", \"RON\": \"float\", \"CHF\": \"float\", \"EGP\": \"float\", \"BSD\": \"float\", \"TWD\": \"float\", \"GGP\": \"float\", \"LVL\": \"float\", \"MMK\": \"float\", \"WST\": \"float\", \"ILS\": \"float\", \"BHD\": \"float\", \"GBP\": \"float\", \"TZS\": \"float\", \"SDG\": \"float\", \"LAK\": \"float\", \"DJF\": \"float\", \"BYN\": \"float\", \"MRO\": \"float\", \"RWF\": \"float\", \"PEN\": \"float\", \"EUR\": \"int\", \"ZMK\": \"float\", \"RSD\": \"float\", \"INR\": \"float\", \"MUR\": \"float\", \"BWP\": \"float\", \"GEL\": \"float\", \"KMF\": \"float\", \"UZS\": \"float\", \"RUB\": \"float\", \"CUC\": \"float\", \"BGN\": \"float\", \"JOD\": \"float\", \"NGN\": \"float\", \"BDT\": \"float\", \"PKR\": \"float\", \"BRL\": \"float\", \"KZT\": \"float\", \"CVE\": \"fl"}, {"category_name": "Finance", "tool_name": "Currency Conversion and Exchange Rates", "api_name": "Historical Exchange Rates", "api_description": "Retrieve historical exchange rate data. Data is available for most currencies all the way back to the year of 1999.", "required_parameters": [{"name": "date", "type": "string", "description": "The date to retrieve the historical exchange rates from.", "default": "2019-10-16"}], "optional_parameters": [{"name": "from", "type": "STRING", "description": "Three-letter currency code of the currency would would like to convert from. This currency will be converted into the code of the currency provided in the `to` parameter", "default": "USD"}, {"name": "to", "type": "STRING", "description": "A comma-separated list of currency codes to convert the `from` parameter into.", "default": "EUR,GBP"}], "method": "GET", "template_response": "{\"timestamp\": \"int\", \"base\": \"str\", \"success\": \"bool\", \"rates\": {\"ANG\": \"float\", \"SVC\": \"float\", \"CAD\": \"float\", \"XCD\": \"float\", \"MVR\": \"float\", \"HRK\": \"float\", \"AUD\": \"float\", \"MWK\": \"float\", \"XAG\": \"float\", \"MAD\": \"float\", \"PHP\": \"float\", \"NAD\": \"float\", \"GNF\": \"float\", \"KES\": \"float\", \"MZN\": \"float\", \"BTN\": \"float\", \"MGA\": \"float\", \"AZN\": \"float\", \"XAU\": \"float\", \"RON\": \"float\", \"CHF\": \"float\", \"EGP\": \"float\", \"BSD\": \"float\", \"TWD\": \"float\", \"GGP\": \"float\", \"LVL\": \"float\", \"MMK\": \"float\", \"WST\": \"float\", \"ILS\": \"float\", \"BHD\": \"float\", \"GBP\": \"float\", \"TZS\": \"float\", \"SDG\": \"float\", \"LAK\": \"float\", \"DJF\": \"float\", \"BYN\": \"float\", \"MRO\": \"float\", \"RWF\": \"float\", \"PEN\": \"float\", \"EUR\": \"int\", \"ZMK\": \"float\", \"RSD\": \"float\", \"INR\": \"float\", \"MUR\": \"float\", \"BWP\": \"float\", \"GEL\": \"float\", \"KMF\": \"float\", \"UZS\": \"float\", \"RUB\": \"float\", \"CUC\": \"float\", \"BGN\": \"float\", \"JOD\": \"float\", \"NGN\": \"float\", \"BDT\": \"float\", \"PKR\": \"float\", \"BRL\": \"float\", \"KZT\": \"float\", \"CVE\": \"float\", \"HNL\": \"f"}], "query": "I am planning a trip to Europe and want to convert 1000 USD to Euros. Can you provide me with the current exchange rate and historical exchange rates for the past week? Additionally, I would like to know the available quotes in the Currency Exchange API.", "relevant APIs": [["Currency Conversion and Exchange Rates", "Convert"], ["Currency Conversion and Exchange Rates", "Recent Exchange Rates"], ["Currency Conversion and Exchange Rates", "Historical Exchange Rates"], ["Currency Exchange", "listquotes"]], "query_id": 3393}, {"api_list": [{"category_name": "Data", "tool_name": "Messages", "api_name": "getMsgs", "api_description": "GetMsg", "required_parameters": [{"name": "category", "type": "STRING", "description": "Select a category to get unlimited messages.Eg: Love,quotes,friendship,Good night,Good morning,funny,Birthday,Sad,Sweet,Random", "default": "love"}], "optional_parameters": [], "method": "GET", "template_response": {"Category": "str", "Message": "str"}}, {"category_name": "Tools", "tool_name": "Famous  Quotes", "api_name": "List Categories", "api_description": "List all available categories", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Tools", "tool_name": "Famous  Quotes", "api_name": "Get Random Quotes", "api_description": "Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint", "required_parameters": [{"name": "count", "type": "NUMBER", "description": "", "default": "2"}, {"name": "category", "type": "STRING", "description": "", "default": "all"}], "optional_parameters": [], "method": "GET", "template_response": {"author": "str", "category": "str", "text": "str", "id": "int"}}], "query": "I'm planning a romantic dinner for my partner and I want to create a romantic atmosphere with famous quotes about love and passion. Can you provide me with random quotes from those categories? Additionally, I need some messages related to romance and affection to include in a love letter. Please fetch those for me.", "relevant APIs": [["Famous  Quotes", "Get Random Quotes"], ["Messages", "getMsgs"]], "query_id": 3516}, {"api_list": [{"category_name": "Tools", "tool_name": "Famous  Quotes", "api_name": "Get Random Quotes", "api_description": "Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint", "required_parameters": [{"name": "count", "type": "NUMBER", "description": "", "default": "2"}, {"name": "category", "type": "STRING", "description": "", "default": "all"}], "optional_parameters": [], "method": "GET", "template_response": {"author": "str", "category": "str", "text": "str", "id": "int"}}, {"category_name": "Tools", "tool_name": "Famous  Quotes", "api_name": "List Categories", "api_description": "List all available categories", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Data", "tool_name": "WikiHow", "api_name": "Steps", "api_description": "Gets a random selection of WikiHow steps.", "required_parameters": [{"name": "count", "type": "NUMBER", "description": "The number of step strings to retrieve (maximum 100)", "default": "3"}], "optional_parameters": [], "method": "GET", "template_response": {"1": "str", "2": "str", "3": "str"}}, {"category_name": "Data", "tool_name": "WikiHow", "api_name": "Images", "api_description": "Gets the src URL for random WikiHow images", "required_parameters": [{"name": "count", "type": "NUMBER", "description": "The number of image URLs to retrieve (maximum 100)", "default": "3"}], "optional_parameters": [], "method": "GET", "template_response": {"1": "str", "2": "str", "3": "str"}}, {"category_name": "Data", "tool_name": "Messages", "api_name": "getMsgs", "api_description": "GetMsg", "required_parameters": [{"name": "category", "type": "STRING", "description": "Select a category to get unlimited messages.Eg: Love,quotes,friendship,Good night,Good morning,funny,Birthday,Sad,Sweet,Random", "default": "love"}], "optional_parameters": [], "method": "GET", "template_response": {"Category": "str", "Message": "str"}}], "query": "I'm organizing a team-building event for my company and I need some inspirational quotes to motivate the employees. Fetch me some random quotes about success and teamwork. Additionally, provide me with step-by-step instructions on how to organize a successful team-building activity. And don't forget to fetch some images of successful teams for presentation slides.", "relevant APIs": [["Famous  Quotes", "Get Random Quotes"], ["WikiHow", "Steps"], ["WikiHow", "Images"], ["Messages", "getMsgs"]], "query_id": 3518}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Hearthstone", "api_name": "Card Backs", "api_description": "Returns a list of all the card backs.", "required_parameters": [], "optional_parameters": [{"name": "callback", "type": "STRING", "description": "Request data to be returned as a JsonP callback.", "default": ""}, {"name": "locale", "type": "STRING", "description": "What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.", "default": ""}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Hearthstone", "api_name": "Cards by Type", "api_description": "Returns all the cards of a certain type. Example values: Spell, Weapon.", "required_parameters": [{"name": "type", "type": "STRING", "description": "Card type.", "default": ""}], "optional_parameters": [{"name": "cost", "type": "NUMBER", "description": "Return only cards of a certain cost.", "default": ""}, {"name": "attack", "type": "NUMBER", "description": "Return only cards with a certain attack.", "default": ""}, {"name": "durability", "type": "NUMBER", "description": "Return only cards with a certain durability.", "default": ""}, {"name": "health", "type": "NUMBER", "description": "Return only cards with a certain health.", "default": ""}, {"name": "callback", "type": "STRING", "description": "Request data to be returned as a JsonP callback.", "default": ""}, {"name": "collectible", "type": "NUMBER", "description": "Set this to 1 to only return collectible cards.", "default": ""}, {"name": "locale", "type": "STRING", "description": "What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.", "default": ""}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Hearthstone", "api_name": "Cards by Quality", "api_description": "Returns all the cards of a certain quality. Example values: Legendary, Common.", "required_parameters": [{"name": "quality", "type": "STRING", "description": "Card quality.", "default": ""}], "optional_parameters": [{"name": "cost", "type": "NUMBER", "description": "Return only cards of a certain cost.", "default": ""}, {"name": "attack", "type": "NUMBER", "description": "Return only cards with a certain attack.", "default": ""}, {"name": "durability", "type": "NUMBER", "description": "Return only cards with a certain durability.", "default": ""}, {"name": "health", "type": "NUMBER", "description": "Return only cards with a certain health.", "default": ""}, {"name": "callback", "type": "STRING", "description": "Request data to be returned as a JsonP callback.", "default": ""}, {"name": "collectible", "type": "NUMBER", "description": "Set this to 1 to only return collectible cards.", "default": ""}, {"name": "locale", "type": "STRING", "description": "What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Diablo4 Smartable", "api_name": "GetPeople", "api_description": "Get Diablo 4 influencers and top players.", "required_parameters": [{"name": "page", "type": "NUMBER", "description": "", "default": "1"}], "optional_parameters": [], "method": "GET", "template_response": {"title": "str", "path": "str", "page": "int", "value": [{"path": "str", "title": "str", "excerpt": "str", "sourceUrl": "str", "webUrl": "str", "type": "str", "name": "str", "bio": "str", "location": "str", "website": "str", "twitter": {"username": "str", "url": "str", "followers": "int"}, "affiliation": {"path": "str", "name": "str", "domain": "str", "images": [{"url": "str", "width": "int", "height": "int", "isCached": "bool", "_list_length": 1}]}, "topics": ["list of str with length 1"], "heat": "int", "images": [{"url": "str", "width": "int", "height": "int", "title": "str", "isCached": "bool", "_list_length": 1}], "content": "str", "_list_length": 8}]}}, {"category_name": "Data", "tool_name": "Diablo4 Smartable", "api_name": "GetSponsorships", "api_description": "Get Diablo 4 sponsorships.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"value": "empty list"}}, {"category_name": "Data", "tool_name": "Diablo4 Smartable", "api_name": "GetGamesByTopic", "api_description": "Get Diablo 4 gameplays by topic.", "required_parameters": [{"name": "topic", "type": "string", "description": "", "default": "druid"}, {"name": "page", "type": "NUMBER", "description": "", "default": "1"}], "optional_parameters": [], "method": "GET", "template_response": {"title": "str", "path": "str", "page": "int", "value": [{"path": "str", "title": "str", "excerpt": "str", "sourceUrl": "str", "webUrl": "str", "originalUrl": "str", "featuredContent": "str", "length": "str", "provider": {"name": "str", "domain": "str"}, "topics": ["list of str with length 2"], "heat": "int", "images": [{"url": "str", "width": "int", "height": "int", "isCached": "bool", "_list_length": 1}], "content": "str", "type": "str", "publishedDateTime": "str", "_list_length": 30}], "nextPage": "int"}}], "query": "I'm organizing a Hearthstone tournament and I need to create a unique experience for the participants. Can you fetch all the available card backs and provide me with their images? It would also be great if you could find any sponsorships related to Diablo 4 that we can incorporate into our event.", "relevant APIs": [["Hearthstone", "Card Backs"], ["Diablo4 Smartable", "GetSponsorships"]], "query_id": 3545}, {"api_list": [{"category_name": "Financial", "tool_name": "QuantaEx Market Data", "api_name": "24 Hours Tickers", "api_description": "24 hours trading data", "required_parameters": [], "optional_parameters": [{"name": "quantaex.com", "type": "STRING", "description": "", "default": ""}], "method": "GET"}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "MIN", "api_description": "Lowest value over period(MIN).", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}, {"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}], "optional_parameters": [{"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}, {"name": "series_type", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}, {"name": "time_period", "type": "NUMBER", "description": "", "default": 9}, {"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "MINMAX", "api_description": "Lowest and highest values over period(MINMAX).", "required_parameters": [{"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}, {"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}], "optional_parameters": [{"name": "series_type", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}, {"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}, {"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}, {"name": "time_period", "type": "NUMBER", "description": "", "default": 9}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "SUB", "api_description": "Subtraction of values of two specified time series.", "required_parameters": [{"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}, {"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}], "optional_parameters": [{"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}, {"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}, {"name": "series_type_1", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "open"}, {"name": "series_type_2", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/parent/get-investment-flows", "api_description": "Get investment flows as displayed in the Parent tab", "required_parameters": [{"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}, {"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/people/get-summary", "api_description": "Get summary information as displayed in the People tab", "required_parameters": [{"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}, {"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/price/get-cost-illustration", "api_description": "Get cost illustration as displayed in the Price tab", "required_parameters": [{"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}, {"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}], "optional_parameters": [], "method": "GET"}], "query": "I'm a stock trader and I want to compare the trading data for different stocks. Can you provide me with the 24 hours tickers for Apple, Microsoft, and Amazon? Additionally, I'm interested in the lowest value over the past hour for each stock. Please give me the MIN values. Also, I want to compare the opening and closing prices of each stock. Please calculate the differences for me using the SUB function.", "relevant APIs": [["QuantaEx Market Data", "24 Hours Tickers"], ["Twelve Data", "MIN"], ["Twelve Data", "SUB"]], "query_id": 3675}, {"api_list": [{"category_name": "Other", "tool_name": "Evaluate expression", "api_name": "Evaluate expression", "api_description": "Scans the given expression and returns the result of any calculation found, in plain text.", "required_parameters": [{"name": "expression", "type": "STRING", "description": "", "default": "$950 - 10% discount"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Events", "tool_name": "Working days", "api_name": "/1.3/list_non_working_days", "api_description": "List the non working days (weekend days, public holidays and custom dates) between two dates in chronlogical order.", "required_parameters": [{"name": "start_date", "type": "STRING", "description": "The start date (YYYY-MM-DD)", "default": "2013-01-01"}, {"name": "end_date", "type": "STRING", "description": "The end date (YYYY-MM-DD)", "default": "2013-12-31"}, {"name": "country_code", "type": "STRING", "description": "The ISO country code (2 letters).  See <a href=https://api.workingdays.org/api-countries >available countries & configurations</a>", "default": "US"}], "optional_parameters": [{"name": "configuration", "type": "STRING", "description": "The name of the preset configuration to be used. See <a href=https://api.workingdays.org/api-countries >available countries & configurations</a>", "default": "Federal holidays"}, {"name": "profile_id", "type": "STRING", "description": "", "default": ""}], "method": "GET"}, {"category_name": "Events", "tool_name": "Working days", "api_name": "/1.3/get_info_day", "api_description": "Get detailed information about a specific day.", "required_parameters": [{"name": "country_code", "type": "STRING", "description": "The ISO country code (2 letters).  See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>", "default": "US"}, {"name": "date", "type": "STRING", "description": "The date to analyze (YYYY-MM-DD)", "default": "2013-12-31"}], "optional_parameters": [{"name": "configuration", "type": "STRING", "description": "The name of the preset configuration to be used. See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>", "default": "Federal holidays"}, {"name": "profile_id", "type": "STRING", "description": "", "default": ""}], "method": "GET"}, {"category_name": "Events", "tool_name": "Working days", "api_name": "/1.3/analyse", "api_description": "Analyse a period (you provide a start_date and an end_date over a given calendar, we respond with the period analysis)", "required_parameters": [{"name": "start_date", "type": "STRING", "description": "The start date (YYYY-MM-DD)", "default": "2013-01-01"}, {"name": "end_date", "type": "STRING", "description": "The end date (YYYY-MM-DD)", "default": "2013-12-31"}, {"name": "country_code", "type": "STRING", "description": "The ISO country code (2 letters).  See <a href=https://api.workingdays.org/api-countries >available countries & configurations</a>", "default": "US"}], "optional_parameters": [{"name": "end_time", "type": "STRING", "description": "The end date's time (24 hours format, like 09:00 or 15:00, but not 3pm).If omitted, default value is 23:59.", "default": "18:15"}, {"name": "start_time", "type": "STRING", "description": "The start date's time (24 hours format, like 09:00 or 15:00, but not 3pm).If omitted, default value is 00:00", "default": "09:14"}, {"name": "profile_id", "type": "STRING", "description": "", "default": ""}, {"name": "configuration", "type": "STRING", "description": "The name of the preset configuration to be used. See <a href=https://api.workingdays.org/api-countries >available countries & configurations</a>", "default": "Federal holidays"}], "method": "GET"}], "query": "I want to plan a vacation with my family in Italy. Can you provide me with a list of non-working days between August 1st and August 15th in Italy? Additionally, I need to evaluate an expression to calculate the total cost of the vacation. The expression is '($2000 * 4) + ($500 * 2)'.", "relevant APIs": [["Working days", "/1.3/list_non_working_days"], ["Evaluate expression", "Evaluate expression"]], "query_id": 3724}, {"api_list": [{"category_name": "Gaming", "tool_name": "Trivia by API-Ninjas", "api_name": "/v1/trivia", "api_description": "API Ninjas Trivia API endpoint", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}, {"name": "category", "type": "STRING", "description": "Category of trivia. Possible values are: \n\n**artliterature\nlanguage\nsciencenature\ngeneral\nfooddrink\npeopleplaces\ngeography\nhistoryholidays\nentertainment\ntoysgames\nmusic\nmathematics\nreligionmythology\nsportsleisure**", "default": ""}], "method": "GET", "template_response": {"category": "str", "question": "str", "answer": "str"}}, {"category_name": "Media", "tool_name": "Music Trivia", "api_name": "/getgamelevel", "api_description": "get a game level with a level parameter. The level this does not imply difficulty", "required_parameters": [], "optional_parameters": [{"name": "level", "type": "NUMBER", "description": "paginated level", "default": ""}, {"name": "output", "type": "STRING", "description": "set output format type , 'xml' or 'json'", "default": ""}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get math fact", "api_description": "Get a mathematical property about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "1729"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get trivia fact", "api_description": "Get a trivia fact about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "42"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "notfound", "type": "STRING", "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).", "default": "floor"}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get year fact", "api_description": "Get a fact about a year", "required_parameters": [{"name": "year", "type": "STRING", "description": "The year of interest", "default": "1492"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}], "query": "My family and I are planning a music-themed game night. Can you fetch the game level for level number 5? Also, provide us with a math fact about the number 1729 and a trivia fact about the number 42.", "relevant APIs": [["Music Trivia", "/getgamelevel"], ["Numbers", "Get math fact"], ["Numbers", "Get trivia fact"]], "query_id": 3752}, {"api_list": [{"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/user/info", "api_description": "Get basic user info", "required_parameters": [{"name": "profile_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934"}], "optional_parameters": [], "method": "GET", "template_response": {"urn": "int", "username": "str", "name": "str", "verified": "bool", "createdAt": "str", "avatarURL": "str", "profile": "str", "bannerURL": "str", "followers": "int", "following": "int", "likesCount": "int", "tracksCount": "int", "tracks": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": "str", "duration": "int", "_list_length": 3}], "likes": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": {"name": "str", "username": "str", "profile": "str"}, "_list_length": 1}]}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/song/info", "api_description": "Get basic information of a song.", "required_parameters": [{"name": "track_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934/the-phoenix"}], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "description": "str", "thumbnail": "str", "url": "str", "duration": "int", "playCount": "str", "commentsCount": "str", "likes": "str", "genre": "str", "author": {"name": "str", "username": "str", "url": "str", "avatarURL": "str", "urn": "int", "verified": "bool", "followers": "int", "following": "int"}, "publishedAt": "str", "embedURL": "str", "embed": {"version": "int", "type": "str", "provider_name": "str", "provider_url": "str", "height": "int", "width": "str", "title": "str", "description": "str", "thumbnail_url": "str", "html": "str", "author_name": "str", "author_url": "str"}, "track": {"hls": "str", "progressive": "str"}, "trackURL": "str", "comments": [{"text": "str", "createdAt": "str", "author": {"name": "str", "username": "str", "url": "str"}, "_list_length": 28}], "streamURL": "str"}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/song/download", "api_description": "Download one song, the result is a url which you can get the song.", "required_parameters": [{"name": "track_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934/the-phoenix"}], "optional_parameters": [], "method": "GET", "template_response": {"url": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Hot 100 Women Artists", "api_description": "Provide the Greatest of All Time Hot 100 Women Artists chart information", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Hot 100 Songs (Greatest of All Time)", "api_description": "Provide the Greatest of All Time Hot 100 Songs chart information", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Ireland Songs", "api_description": "Provide the Ireland Songs chart information", "required_parameters": [{"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "date format(YYYY-MM-DD)", "default": "2022-05-07"}, {"name": "range", "type": "STRING", "description": "", "default": "1-10"}], "optional_parameters": [], "method": "GET", "template_response": {"notice": "str"}}], "query": "I'm a music producer and I want to explore the top songs of all time for inspiration. Can you provide me with the Hot 100 Songs chart information from the Billboard-API? Additionally, fetch the basic information and download link for a popular song from Soundcloud.", "relevant APIs": [["Billboard-API", "Hot 100 Songs (Greatest of All Time)"], ["Soundcloud", "/song/info"], ["Soundcloud", "/song/download"]], "query_id": 3895}, {"api_list": [{"category_name": "Media", "tool_name": "Bing Image Search", "api_name": "Image Search", "api_description": "Get relevant images for a given query.", "required_parameters": [{"name": "q", "type": "STRING", "description": "The user's search query string", "default": ""}], "optional_parameters": [{"name": "count", "type": "NUMBER", "description": "The number of image results to return in the response. The actual number delivered may be less than requested.", "default": ""}, {"name": "safeSearch", "type": "STRING", "description": "A filter used to filter results for adult content.", "default": ""}, {"name": "offset", "type": "STRING", "description": "The zero-based offset that indicates the number of image results to skip before returning results.", "default": ""}, {"name": "mkt", "type": "STRING", "description": "The market where the results come from. Typically, this is the country where the user is making the request from; however, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form -. For example, en-US.\n\n\n\nFull list of supported markets:\nes-AR, en-AU, de-AT, nl-BE, fr-BE, pt-BR, en-CA, fr-CA, es-CL, da-DK, fi-FI, fr-FR, de-DE, zh-HK, en-IN, en-ID, en-IE, it-IT, ja-JP, ko-KR, en-MY, es-MX, nl-NL, en-NZ, no-NO, zh-CN, pl-PL, pt-PT, en-PH, ru-RU, ar-SA, en-ZA, es-ES, sv-SE, fr-CH, de-CH, zh-TW, tr-TR, en-GB, en-US, es-US", "default": ""}], "method": "GET", "template_response": {"_type": "str", "errors": [{"code": "str", "subCode": "str", "message": "str", "moreDetails": "str", "parameter": "str", "value": "str", "_list_length": 3}]}}, {"category_name": "Media", "tool_name": "Bing Image Search", "api_name": "Trending", "api_description": "Get currently trending images.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"_type": "str", "instrumentation": {"_type": "str"}, "errors": [{"code": "str", "subCode": "str", "message": "str", "moreDetails": "str", "parameter": "str", "_list_length": 1}]}}, {"category_name": "Search", "tool_name": "Bing Web Search", "api_name": "Supported Languages", "api_description": "These languages are supported for to search.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": "{\"Arabic\": \"str\", \"Chinese (Simplified)\": \"str\", \"Chinese (Traditional)\": \"str\", \"Czech\": \"str\", \"Dutch\": \"str\", \"English\": \"str\", \"Finnish\": \"str\", \"French\": \"str\", \"German\": \"str\", \"Italian\": \"str\", \"Japanese\": \"str\", \"Korean\": \"str\", \"Polish\": \"str\", \"Portuguese (Brazil)\": \"str\", \"Russian\": \"str\", \"Spanish\": \"str\", \"Swedish\": \"str\", \"Turkish\": \"str\", \"Afrikaans\": \"str\", \"Albanian\": \"str\", \"Amharic\": \"str\", \"Armenian\": \"str\", \"Assamese\": \"str\", \"Azerbaijani (Latin)\": \"str\", \"Bangla\": \"str\", \"Basque\": \"str\", \"Belarusian\": \"str\", \"Bosnian (Latin)\": \"str\", \"Bulgarian\": \"str\", \"Catalan\": \"str\", \"Central Kurdish\": \"str\", \"Cherokee (Cherokee)\": \"str\", \"Croatian\": \"str\", \"Danish\": \"str\", \"Dari\": \"str\", \"Estonian\": \"str\", \"Filipino\": \"str\", \"Galician\": \"str\", \"Georgian\": \"str\", \"Greek\": \"str\", \"Gujarati\": \"str\", \"Hausa (Latin)\": \"str\", \"Hebrew\": \"str\", \"Hindi\": \"str\", \"Hungarian\": \"str\", \"Icelandic\": \"str\", \"Igbo\": \"str\", \"Indonesian\": \"str\", \"Irish\": \"str\", \"isiXhosa\": \"str\", \"isiZulu\": \"st"}, {"category_name": "Search", "tool_name": "Bing Web Search", "api_name": "Supported Countries", "api_description": "You can search against these countries.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": "{\"Australia\": \"str\", \"Belgium\": \"str\", \"Brazil\": \"str\", \"Canada\": \"str\", \"China\": \"str\", \"France\": \"str\", \"Germany\": \"str\", \"India\": \"str\", \"Italy\": \"str\", \"Japan\": \"str\", \"Korea\": \"str\", \"Mexico\": \"str\", \"Netherlands\": \"str\", \"Poland\": \"str\", \"Russia\": \"str\", \"Spain\": \"str\", \"Sweden\": \"str\", \"Switzerland\": \"str\", \"United Kingdom\": \"str\", \"United States\": \"str\", \"Afghanistan\": \"str\", \"Albania\": \"str\", \"Algeria\": \"str\", \"American Samoa\": \"str\", \"Andorra\": \"str\", \"Angola\": \"str\", \"Anguilla\": \"str\", \"Antigua and Barbuda\": \"str\", \"Argentina\": \"str\", \"Armenia\": \"str\", \"Aruba\": \"str\", \"Austria\": \"str\", \"Azerbaijan\": \"str\", \"Bahamas\": \"str\", \"Bahrain\": \"str\", \"Bangladesh\": \"str\", \"Barbados\": \"str\", \"Belarus\": \"str\", \"Belize\": \"str\", \"Benin\": \"str\", \"Bermuda\": \"str\", \"Bhutan\": \"str\", \"Bolivia\": \"str\", \"Bosnia & Herzegovina\": \"str\", \"Botswana\": \"str\", \"British Virgin Islands\": \"str\", \"Brunei\": \"str\", \"Bulgaria\": \"str\", \"Burkina Faso\": \"str\", \"Burundi\": \"str\", \"Cabo Verde\": \"str\", \"Cambodia\": \"s"}], "query": "I'm a graphic designer working on a project for a client who needs images of famous landmarks. Can you fetch me some trending images of iconic landmarks around the world? Additionally, can you provide me with the list of supported countries for web search?", "relevant APIs": [["Bing Image Search", "Trending"], ["Bing Web Search", "Supported Countries"]], "query_id": 3949}, {"api_list": [{"category_name": "Data", "tool_name": "Socialgrep", "api_name": "Post search", "api_description": "Searches Reddit posts.", "required_parameters": [{"name": "query", "type": "STRING", "description": "The comma-separated query for the search. Supports the following term types:\n\n`site:{site_name}` - search only posts where the domain matches {site_name}.\n\n`-site:{site_name}` - search only posts where the domain does not match {site_name}.\n\n`/r/{subreddit}` - search only posts from the subreddit {subreddit}.\n\n`-/r/{subreddit}` - search only posts not from the subreddit {subreddit}.\n\n`{term}` - search only posts with titles containing the term {term}.\n\n`-{term}` - search only posts with titles not containing the term {term}.\n\n`score:{score}` - search only posts with score at least {score}.\n\n`before:{YYYY-mm-dd}`, `after:{YYYY-mm-dd}` - search only posts within the date range. `before` is inclusive, `after` is not.", "default": "/r/funny,cat"}], "optional_parameters": [{"name": "after", "type": "NUMBER", "description": "The previous result's `sort_key` value. Used for pagination.", "default": ""}], "method": "GET", "template_response": {"type": "str", "data": [{"type": "str", "id": "str", "subreddit": {"id": "str", "name": "str", "nsfw": "bool"}, "created_utc": "int", "permalink": "str", "domain": "str", "title": "str", "selftext": "NoneType", "url": "str", "score": "int", "_list_length": 25}], "total_count": "int", "query": "str", "sort_key": ["list of list with length 1"]}}, {"category_name": "Data", "tool_name": "Socialgrep", "api_name": "Comment search", "api_description": "Searches Reddit comments.", "required_parameters": [{"name": "query", "type": "STRING", "description": "The comma-separated query for the search. Supports the following term types:\n\n`/r/{subreddit}` - search only comments from the subreddit {subreddit}.\n\n`-/r/{subreddit}` - search only comments not from the subreddit {subreddit}.\n\n`{term}` - search only comments containing the term {term}.\n\n`-{term}` - search only comments not containing the term {term}.\n\n`score:{score}` - search only comments with score at least {score}.\n\n`before:{YYYY-mm-dd}`, `after:{YYYY-mm-dd}` - search only comments within the date range. `before` is inclusive, `after` is not.\n\n`post:{post_id}` - search only comments for the given post.", "default": "/r/funny,cat"}], "optional_parameters": [{"name": "after", "type": "NUMBER", "description": "The previous result's `sort_key` value. Used for pagination.", "default": ""}], "method": "GET", "template_response": {"type": "str", "data": [{"type": "str", "id": "str", "subreddit": {"id": "str", "name": "str", "nsfw": "bool"}, "created_utc": "int", "permalink": "str", "body": "str", "sentiment": "int", "score": "int", "_list_length": 25}], "total_count": "int", "query": "str", "sort_key": ["list of list with length 1"]}}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Posts By Subreddit", "api_description": "Posts By Subreddit", "required_parameters": [{"name": "subreddit", "type": "STRING", "description": "example: reddit.com/r/`memes`", "default": "memes"}, {"name": "sort", "type": "STRING", "description": "you can just send `new `or `hot`", "default": "new"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Top Comments By Username", "api_description": "Top Comments By Username", "required_parameters": [{"name": "time", "type": "STRING", "description": "you can just select one item from below:\n`hour`\n`day`\n`week`\n`month`\n`year`\n`all`", "default": "year"}, {"name": "username", "type": "STRING", "description": "", "default": "GoldenChrysus"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": {"success": "bool", "data": {"cursor": "NoneType", "comments": "empty list"}}}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Post Details", "api_description": "Post Details", "required_parameters": [{"name": "post_id", "type": "STRING", "description": "", "default": "t3_t19inj"}], "optional_parameters": [], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"int\", \"height\": \"int\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"int\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": {\"gid1\": \"int\", \"gid2\": \"int\", \"gid3\": \"int\"}, \"allAwardings\": [{\"awardType\": \"str\", \"awardSubType\": \"str\", \"coinPrice\": \"int\", \"coinReward\": \"int\", \"daysOfDripExtension\": \"NoneType\", \"daysOfPremium\": \"NoneType\", \"description\": \"str\", \"giverCoinReward\": \"NoneType\", \"iconUrl\": \"str\", \"iconWidth\": \"int\", \"iconHeight\": \"int\", \"staticIconUrl\": \"str\", \"staticIconWidth\": \"int\", \"staticIconHeight\": \"int\", \"id\": \"str\", \"isEnabled\": \"bool\", \"isNew\": \"bool\", \"name\": \"str\", \"pennyDonat"}], "query": "I'm planning a team-building activity for my colleagues. Find me some posts on Reddit about successful team-building exercises and provide me with the top comments to understand the key factors. Also, suggest some popular posts and their details that I can share with my team to inspire them.", "relevant APIs": [["Socialgrep", "Post search"], ["Socialgrep", "Comment search"], ["Reddit", "Posts By Subreddit"], ["Reddit", "Top Comments By Username"], ["Reddit", "Post Details"]], "query_id": 4048}, {"api_list": [{"category_name": "Social", "tool_name": "Reddit", "api_name": "Posts By Username", "api_description": "Posts By Username", "required_parameters": [{"name": "username", "type": "STRING", "description": "", "default": "GoldenChrysus"}, {"name": "sort", "type": "STRING", "description": "you can just send `new `or `hot`", "default": "new"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": \"NoneType\", \"postCategories\": \"NoneType\", \"suggestedSort\": \"NoneType\", \"belongsTo\": {\"id\": \"str\", \"type\": \"str\"}, \"flair\": \"empty list\", \"hidden\": \"bool\", \"saved\": \"bool\", \"isGildable\": \"bool\", \"isMediaOnly\": \"bool\", \"isSponsored\": \"bool\", \"isNSFW\": \"bool\", \"isMeta\": \"bool\", \"isSpoiler\": \"bool\", \"isBlank\": \"bool\", \"sendReplies\": \"bool\", \"voteState\": \"int\", \"permalink\": \"str\", \"events\": \"empty list\", \"eventsOnRender\": \"empty list\", \""}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Popular Posts", "api_description": "Popular Posts", "required_parameters": [{"name": "sort", "type": "STRING", "description": "you can just send `new `or `hot`", "default": "new"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": \"NoneType\", \"postCategories\": \"NoneType\", \"suggestedSort\": \"NoneType\", \"belongsTo\": {\"id\": \"str\", \"type\": \"str\"}, \"flair\": \"empty list\", \"hidden\": \"bool\", \"saved\": \"bool\", \"isGildable\": \"bool\", \"isMediaOnly\": \"bool\", \"isSponsored\": \"bool\", \"isNSFW\": \"bool\", \"isMeta\": \"bool\", \"isSpoiler\": \"bool\", \"isBlank\": \"bool\", \"sendReplies\": \"bool\", \"voteState\": \"int\", \"permalink\": \"str\", \"events\": \"empty list\", \"eventsOnRender\": \"empty list\", \""}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Post Details", "api_description": "Post Details", "required_parameters": [{"name": "post_id", "type": "STRING", "description": "", "default": "t3_t19inj"}], "optional_parameters": [], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"int\", \"height\": \"int\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"int\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": {\"gid1\": \"int\", \"gid2\": \"int\", \"gid3\": \"int\"}, \"allAwardings\": [{\"awardType\": \"str\", \"awardSubType\": \"str\", \"coinPrice\": \"int\", \"coinReward\": \"int\", \"daysOfDripExtension\": \"NoneType\", \"daysOfPremium\": \"NoneType\", \"description\": \"str\", \"giverCoinReward\": \"NoneType\", \"iconUrl\": \"str\", \"iconWidth\": \"int\", \"iconHeight\": \"int\", \"staticIconUrl\": \"str\", \"staticIconWidth\": \"int\", \"staticIconHeight\": \"int\", \"id\": \"str\", \"isEnabled\": \"bool\", \"isNew\": \"bool\", \"name\": \"str\", \"pennyDonat"}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "Soundcloud", "api_description": "Check username on Soundcloud", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "Dribbble", "api_description": "Check username on dribble", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"success": "bool", "username": "str", "available": "bool"}}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "GitHub", "api_description": "Check username on GitHub", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Entertainment", "tool_name": "Reddit meme", "api_name": "Top memes", "api_description": "Use this route to get the all top quality memes from subreddit", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Reddit meme", "api_name": "Trending memes", "api_description": "Use this route to get the newest trending memes from subreddit", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm organizing a social event and I need some entertainment ideas. Fetch the top quality memes from Reddit's meme subreddit and also provide me with the post details of a specific post with ID 't3_t19inj'. Additionally, check if the usernames 'Soundcloud', 'Dribbble', and 'GitHub' are available.", "relevant APIs": [["Reddit meme", "Top memes"], ["Reddit", "Post Details"], ["Check Username", "Soundcloud"], ["Check Username", "Dribbble"], ["Check Username", "GitHub"]], "query_id": 4083}, {"api_list": [{"category_name": "Data", "tool_name": "Opencage geocoder", "api_name": "/geocode/v1/json", "api_description": "geocode an address", "required_parameters": [{"name": "q", "type": "STRING", "description": "\"latitude,longitude\" or \"address\" (without \")", "default": "Berlin"}, {"name": "key", "type": "STRING", "description": "The API key you got when registering on https://geocoder.opencagedata.com/", "default": "OPENCAGE-API-Key"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "an IETF format language code (such as es for Spanish or pt-BR for Brazilian Portuguese); if this is omitted a code of en (English) will be assumed", "default": "en"}], "method": "GET", "template_response": {"documentation": "str", "licenses": [{"name": "str", "url": "str", "_list_length": 1}], "results": "empty list", "status": {"code": "int", "message": "str"}, "stay_informed": {"blog": "str", "mastodon": "str", "twitter": "str"}, "thanks": "str", "timestamp": {"created_http": "str", "created_unix": "int"}, "total_results": "int"}}, {"category_name": "Mapping", "tool_name": "TrueWay Geocoding", "api_name": "ReverseGeocode", "api_description": "Obtain address for location", "required_parameters": [{"name": "location", "type": "STRING", "description": "The location for which you wish to obtain the human-readable address", "default": "37.7879493,-122.3961974"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language in which to return results", "default": "en"}], "method": "GET", "template_response": {"results": [{"address": "str", "postal_code": "str", "country": "str", "region": "str", "area": "str", "locality": "str", "neighborhood": "str", "street": "str", "house": "str", "location": {"lat": "float", "lng": "float"}, "location_type": "str", "type": "str", "_list_length": 5}]}}, {"category_name": "Mapping", "tool_name": "TrueWay Geocoding", "api_name": "Geocode", "api_description": "Obtain geocoordinates for address", "required_parameters": [{"name": "address", "type": "STRING", "description": "The address that you want to geocode", "default": "505 Howard St, San Francisco"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language in which to return results", "default": "en"}, {"name": "country", "type": "STRING", "description": "The country code", "default": ""}, {"name": "bounds", "type": "STRING", "description": "The bounding box", "default": ""}], "method": "GET", "template_response": {"results": [{"address": "str", "postal_code": "str", "country": "str", "region": "str", "area": "str", "locality": "str", "neighborhood": "str", "street": "str", "house": "str", "location": {"lat": "float", "lng": "float"}, "location_type": "str", "type": "str", "_list_length": 1}]}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Get place by Geoname ID", "api_description": "Returns a single Place identified by a Geoname ID.", "required_parameters": [{"name": "geonameId", "type": "NUMBER", "description": "Unique identificator given by Geonames", "default": "5391959"}], "optional_parameters": [{"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Get place by my IP", "api_description": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.", "required_parameters": [], "optional_parameters": [{"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Get place by IP", "api_description": "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.", "required_parameters": [{"name": "id", "type": "STRING", "description": "IP Address (v4 and v6 are supported).", "default": "200.194.51.97"}], "optional_parameters": [{"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}], "query": "I'm planning a beach vacation and need information about the best beach towns. Can you provide me with the geocoordinates for the top-rated beaches and recommend nearby hotels? Also, suggest some beach activities for the trip.", "relevant APIs": [["Opencage geocoder", "/geocode/v1/json"], ["TrueWay Geocoding", "Geocode"], ["TrueWay Geocoding", "ReverseGeocode"]], "query_id": 4357}, {"api_list": [{"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts/active/count", "api_description": "A list of active counts for regions, areas and zones. A list of these items forthcoming.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": "{\"total\": \"int\", \"land\": \"int\", \"marine\": \"int\", \"regions\": {\"AL\": \"int\", \"AT\": \"int\", \"GL\": \"int\", \"GM\": \"int\", \"PA\": \"int\", \"PI\": \"int\"}, \"areas\": {\"AK\": \"int\", \"AL\": \"int\", \"AM\": \"int\", \"AN\": \"int\", \"AR\": \"int\", \"AZ\": \"int\", \"CA\": \"int\", \"CO\": \"int\", \"DE\": \"int\", \"FL\": \"int\", \"GA\": \"int\", \"GM\": \"int\", \"IA\": \"int\", \"ID\": \"int\", \"IN\": \"int\", \"KS\": \"int\", \"KY\": \"int\", \"LA\": \"int\", \"LE\": \"int\", \"MD\": \"int\", \"ME\": \"int\", \"MI\": \"int\", \"MO\": \"int\", \"MS\": \"int\", \"NC\": \"int\", \"NE\": \"int\", \"NH\": \"int\", \"NJ\": \"int\", \"NM\": \"int\", \"NV\": \"int\", \"NY\": \"int\", \"OH\": \"int\", \"OK\": \"int\", \"PA\": \"int\", \"PH\": \"int\", \"PK\": \"int\", \"PR\": \"int\", \"PZ\": \"int\", \"SD\": \"int\", \"TN\": \"int\", \"TX\": \"int\", \"VA\": \"int\", \"VI\": \"int\", \"WY\": \"int\"}, \"zones\": {\"AKC090\": \"int\", \"AKC185\": \"int\", \"AKC188\": \"int\", \"AKC290\": \"int\", \"AKZ203\": \"int\", \"AKZ204\": \"int\", \"AKZ206\": \"int\", \"AKZ218\": \"int\", \"AKZ220\": \"int\", \"ALC003\": \"int\", \"ALC013\": \"int\", \"ALC023\": \"int\", \"ALC025\": \"int\", \"ALC031\": \"int\", \"ALC035\": \"int\", \"ALC039\": \"i"}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/products/{productId}", "api_description": "Data of a product.Example: /product/NWS-IDP-PROD-2202326-2064512 (this id is likely now an expired product)", "required_parameters": [{"name": "productId", "type": "STRING", "description": "productId: an id provided by from another /product endpoint", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 1}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/stations/{stationId}/observations/current", "api_description": "The most current observation for a station. Due to a legacy requirement, this endpoint will support XML for the near future when using the Accept header. It is highly recommend that applications update to the JSON format.  NOTE! See note in /stations/{stationId}/observations for important details on observation data.  Example: /stations/KMKC/observations/current", "required_parameters": [{"name": "stationId", "type": "STRING", "description": "stationId: Station Id (e.g. as provided by the /points/{point}/stations endpoint)", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 2}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Current Weather Data of a location.", "api_description": "Returns the current (most recent) weather observation of a given location", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "-78.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language", "default": ""}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET", "template_response": {"count": "int", "data": [{"app_temp": "float", "aqi": "int", "city_name": "str", "clouds": "int", "country_code": "str", "datetime": "str", "dewpt": "int", "dhi": "int", "dni": "int", "elev_angle": "float", "ghi": "int", "gust": "float", "h_angle": "NoneType", "lat": "float", "lon": "float", "ob_time": "str", "pod": "str", "precip": "int", "pres": "float", "rh": "int", "slp": "float", "snow": "int", "solar_rad": "int", "sources": ["list of str with length 1"], "state_code": "str", "station": "str", "sunrise": "str", "sunset": "str", "temp": "float", "timezone": "str", "ts": "int", "uv": "int", "vis": "int", "weather": {"description": "str", "code": "int", "icon": "str"}, "wind_cdir": "str", "wind_cdir_full": "str", "wind_dir": "int", "wind_spd": "float", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "5 day Forecast", "api_description": "3 hour interval - 5 day forecast for a given lat/lon", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude (Degrees)", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude (degrees)", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}, {"name": "lang", "type": "ENUM", "description": "Language for weather condition", "default": ""}], "method": "GET"}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Air Quality Forecast", "api_description": "Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon. ", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "35.779"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.638"}], "optional_parameters": [{"name": "hours", "type": "NUMBER", "description": "Limits response forecast hours (default 72). ", "default": "72"}], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "float", "datetime": "str", "no2": "float", "o3": "float", "pm10": "float", "pm25": "float", "so2": "float", "timestamp_local": "str", "timestamp_utc": "str", "ts": "int", "_list_length": 72}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Air Quality History", "api_description": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "35.779"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.638"}], "optional_parameters": [], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "float", "datetime": "str", "no2": "float", "o3": "float", "pm10": "float", "pm25": "int", "so2": "int", "timestamp_local": "str", "timestamp_utc": "str", "ts": "int", "_list_length": 72}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Current Air Quality", "api_description": "Retrieves current air quality conditions for any location in the world, given a lat/lon.", "required_parameters": [{"name": "lon", "type": "STRING", "description": "Longitude", "default": "-73.00597"}, {"name": "lat", "type": "STRING", "description": "Latitude", "default": "40.71427"}], "optional_parameters": [], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "int", "mold_level": "int", "no2": "int", "o3": "int", "pm10": "int", "pm25": "int", "pollen_level_grass": "int", "pollen_level_tree": "int", "pollen_level_weed": "int", "predominant_pollen_type": "str", "so2": "int", "_list_length": 1}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Weather", "tool_name": "Visual Crossing Weather", "api_name": "Weather forecast data", "api_description": "Provides access to weather forecast information. The forecast is available for up to seven days at the hourly, 12 hour and daily summary level.", "required_parameters": [{"name": "aggregateHours", "type": "NUMBER", "description": "The interval between weather forecast data in the output. 1 represents an hourly forecast, 24 represents a daily forecast. As the source data is calculated at the hourly level, records calculated at 12 or 24 hours are aggregated to indicate the predominant weather condition during that time period. For example the maximum temperature, total precipitation, maximum windspeed etc.  Supported values 1,12 or 24.", "default": "24"}, {"name": "location", "type": "STRING", "description": "he address or latitude or longitude of the location. Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats. When specify a point based on longitude, latitude, the format must be specifed as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).", "default": "Washington,DC,USA"}], "optional_parameters": [{"name": "contentType", "type": "STRING", "description": "When present, choose between json or csv output", "default": "csv"}, {"name": "unitGroup", "type": "STRING", "description": "unitGroup - The system of units used for the output data.  Supported values are us,uk,metric.", "default": "us"}, {"name": "shortColumnNames", "type": "BOOLEAN", "description": " When false, the returned dataset includes descriptive column names. When true, returns shorter, abbreviated column names with only alphanumeric characters. The short names are useful for programmatic use of the data.", "default": "0"}], "method": "GET"}, {"category_name": "Weather", "tool_name": "Visual Crossing Weather", "api_name": "Historical weather record", "api_description": "The weather history data is suitable for retrieving hourly or daily historical weather records.", "required_parameters": [{"name": "location", "type": "STRING", "description": "The address or latitude or longitude of the location. Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats. When specify a point based on longitude, latitude, the format must be specifed as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).", "default": "Washington,DC,USA"}, {"name": "endDateTime", "type": "STRING", "description": "The date time for the start of the data request using the time zone of the location. In the ISO format: yyyy-MM-ddTHH:mm:ss. Hours should be specified in 24 hour clock format.", "default": "2019-01-03T00:00:00"}, {"name": "startDateTime", "type": "STRING", "description": "The date time for the start of the data request using the time zone of the location. In the ISO format: yyyy-MM-ddTHH:mm:ss. Hours should be specified in 24 hour clock format.", "default": "2019-01-01T00:00:00"}, {"name": "aggregateHours", "type": "NUMBER", "description": "The interval between weather history data in the output. 1 represent hourly records, 24 represents a daily forecast. As the source data is recorded at the hourly level, 24 hour records are aggregated to indicate the predominant weather conditions during that time period.  Supported values 1 or 24.", "default": "24"}, {"name": "unitGroup", "type": "STRING", "description": "The system of units used for the output data.  Supported values are us,uk,metric", "default": "us"}], "optional_parameters": [{"name": "contentType", "type": "STRING", "description": "When present, choose between json or csv output", "default": "csv"}, {"name": "dayEndTime", "type": "STRING", "description": "When present and not set to the same as the dayEndTime, filters the output to records that between the specified day times.", "default": "17:00:00"}, {"name": "dayStartTime", "type": "STRING", "description": "When present and not set to the same as the dayEndTime, filters the output to records that between the specified day times. This is useful for setting filters for business hours. Format h:m:ss (eg 9:00:00 woudl be 9am).", "default": "8:00:00"}, {"name": "shortColumnNames", "type": "BOOLEAN", "description": "When false, the returned dataset includes descriptive column names. When true, returns shorter, abbreviated column names with only alphanumeric characters. The short names are useful for programmatic use of the data.", "default": "0"}], "method": "GET"}], "query": "I am a pilot and I need to plan my flight. Can you provide me with the current weather conditions at my departure and arrival airports? Also, find the 5-day weather forecast for both airports.", "relevant APIs": [["National Weather Service", "/stations/{stationId}/observations/current"], ["Weather", "Current Weather Data of a location."], ["Weather", "5 day Forecast"]], "query_id": 4421}, {"api_list": [{"category_name": "Location", "tool_name": "Spott", "api_name": "Get place by my IP", "api_description": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.", "required_parameters": [], "optional_parameters": [{"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Autocomplete places", "api_description": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.", "default": "10"}, {"name": "skip", "type": "NUMBER", "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.", "default": "0"}, {"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.", "default": ""}, {"name": "country", "type": "STRING", "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).", "default": "US,CA"}, {"name": "adminDivision1", "type": "STRING", "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).", "default": ""}, {"name": "accuracyRadiusKm", "type": "NUMBER", "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.", "default": ""}, {"name": "latitude", "type": "NUMBER", "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.", "default": ""}, {"name": "adminDivision2", "type": "STRING", "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.", "default": ""}, {"name": "q", "type": "STRING", "description": "Query string to find places which name starts with this prefix.", "default": "Sea"}, {"name": "longitude", "type": "NUMBER", "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.", "default": ""}, {"name": "type", "type": "STRING", "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.", "default": "CITY"}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Get place by IP", "api_description": "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.", "required_parameters": [{"name": "id", "type": "STRING", "description": "IP Address (v4 and v6 are supported).", "default": "200.194.51.97"}], "optional_parameters": [{"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Travel", "tool_name": "webcams.travel", "api_name": "/webcams/list/orderby={order},{sort}", "api_description": "This is a modifier. Returns the list of webcams ordered by {order}. The optional sorting direction is given by {sort}. Required {order}.", "required_parameters": [{"name": "sort", "type": "STRING", "description": "Possible values are: \"asc\" (ascending), or \"desc\" (descending).", "default": ""}, {"name": "order", "type": "STRING", "description": "Possible values are: \"popularity\" (default order: \"desc\"), \"hotness\" (default order: \"desc\"), \"new\" (default order: \"desc\"), \"recent\" (default order: \"desc\"), \"random\" (default order: \"asc\"), or \"distance\" (default order: \"asc\", only available if the modifier \"nearby\" has been applied).", "default": ""}], "optional_parameters": [{"name": "lang", "type": "STRING", "description": "Localize the results to this language, if available. Default: \"en\".", "default": "en"}, {"name": "show", "type": "STRING", "description": "Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\".", "default": "webcams:image,location"}], "method": "GET"}, {"category_name": "Travel", "tool_name": "webcams.travel", "api_name": "/webcams/list/region={region}[,{region}[,...]]", "api_description": "This is a modifier. Returns a list of webcams according to the listed region. Multiple regions must be separated by comma. Required: at least one {region}. Possible values are ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot.", "required_parameters": [{"name": "region", "type": "STRING", "description": "Comma separated list of ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot.", "default": ""}], "optional_parameters": [{"name": "lang", "type": "STRING", "description": "Localize the results to this language, if available. Default: \"en\".", "default": "en"}, {"name": "show", "type": "STRING", "description": "Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\".", "default": "webcams:image,location"}], "method": "GET"}, {"category_name": "Travel", "tool_name": "webcams.travel", "api_name": "/webcams/list/bbox={ne_lat},{ne_lng},{sw_lat},{sw_lng}", "api_description": "This is a modifier. Returns a list of the webcams in the bounding box given by north-east ({ne_lat},{ne_lng}) and south-west ({sw_lat},{sw_lng}) coordinates. Required: {ne_lat},{ne_lng},{sw_lat},{sw_lng}.", "required_parameters": [{"name": "ne_lat", "type": "NUMBER", "description": "North-east WGS84 latitude of the bounding box.", "default": ""}, {"name": "sw_lng", "type": "NUMBER", "description": "South-west WGS84 longitude of the bounding box.", "default": ""}, {"name": "sw_lat", "type": "NUMBER", "description": "South-west WGS84 latitude of the bounding box.", "default": ""}, {"name": "ne_lng", "type": "NUMBER", "description": "North-east WGS84 longitude of the bounding box.", "default": ""}], "optional_parameters": [{"name": "lang", "type": "STRING", "description": "Localize the results to this language, if available. Default: \"en\".", "default": "en"}, {"name": "show", "type": "STRING", "description": "Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\".", "default": "webcams:image,location"}], "method": "GET"}], "query": "I'm planning a surprise birthday party for my sister and I need to find a suitable venue. Can you suggest event spaces in the city center with a capacity for 50 people? Also, recommend nearby catering services and provide me with a list of available dates for booking.", "relevant APIs": [["Spott", "Autocomplete places"], ["webcams.travel", "/webcams/list/region={region}[,{region}[,...]]"]], "query_id": 4451}, {"api_list": [{"category_name": "Location", "tool_name": "Spott", "api_name": "Get place by Geoname ID", "api_description": "Returns a single Place identified by a Geoname ID.", "required_parameters": [{"name": "geonameId", "type": "NUMBER", "description": "Unique identificator given by Geonames", "default": "5391959"}], "optional_parameters": [{"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Get place by IP", "api_description": "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.", "required_parameters": [{"name": "id", "type": "STRING", "description": "IP Address (v4 and v6 are supported).", "default": "200.194.51.97"}], "optional_parameters": [{"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Autocomplete places", "api_description": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.", "default": "10"}, {"name": "skip", "type": "NUMBER", "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.", "default": "0"}, {"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.", "default": ""}, {"name": "country", "type": "STRING", "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).", "default": "US,CA"}, {"name": "adminDivision1", "type": "STRING", "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).", "default": ""}, {"name": "accuracyRadiusKm", "type": "NUMBER", "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.", "default": ""}, {"name": "latitude", "type": "NUMBER", "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.", "default": ""}, {"name": "adminDivision2", "type": "STRING", "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.", "default": ""}, {"name": "q", "type": "STRING", "description": "Query string to find places which name starts with this prefix.", "default": "Sea"}, {"name": "longitude", "type": "NUMBER", "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.", "default": ""}, {"name": "type", "type": "STRING", "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.", "default": "CITY"}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getMapTilewithEnglishLabels", "api_description": "Raster Map Tiles with English Labels. Please see our [tutorials page](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials) on how to use this.", "required_parameters": [{"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "6"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}, {"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "3"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getMapTilewithSpanishLabels", "api_description": "Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map.", "required_parameters": [{"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}, {"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "4"}, {"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "2"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getStandardMapTile", "api_description": "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap", "required_parameters": [{"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "3"}, {"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "6"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Location", "tool_name": "Address Correction and Geocoding", "api_name": "/address", "api_description": "Address", "required_parameters": [{"name": "AddressLine1", "type": "STRING", "description": "First line of address", "default": "506 Fourth Avenue Unit 1"}, {"name": "AddressLine2", "type": "STRING", "description": "Second line of address - city, state, zip.", "default": "Asbury Prk, NJ"}], "optional_parameters": [], "method": "GET", "template_response": {"ErrorCode": "int", "ErrorMessage": "str", "AddressLine1": "NoneType", "AddressLine2": "NoneType", "Number": "NoneType", "PreDir": "NoneType", "Street": "NoneType", "Suffix": "NoneType", "PostDir": "NoneType", "Sec": "NoneType", "SecNumber": "NoneType", "SecValidated": "NoneType", "City": "NoneType", "State": "NoneType", "Zip": "NoneType", "Zip4": "NoneType", "UspsCarrierRoute": "NoneType", "County": "NoneType", "StateFP": "NoneType", "CountyFP": "NoneType", "CensusTract": "NoneType", "CensusBlock": "NoneType", "Latitude": "int", "Longitude": "int", "GeoPrecision": "int", "TimeZoneOffset": "NoneType", "DstObserved": "NoneType", "PlaceFP": "NoneType", "CityMunicipality": "NoneType", "SalesTaxRate": "NoneType", "SalesTaxJurisdiction": "NoneType"}}], "query": "I'm working on a project that requires maps with local labels. Can you provide me with a standard map tile for coordinates (x=6, y=3, z=3) that includes labels in the local language? Additionally, suggest some nearby restaurants and hotels for a meeting venue.", "relevant APIs": [["MapTiles", "getStandardMapTile"], ["Spott", "Autocomplete places"]], "query_id": 4465}, {"api_list": [{"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Random Joke", "api_description": "Get the random joke from a collection of most rated and most popular jokes.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Jokes By Specific Category", "api_description": "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria.", "required_parameters": [{"name": "limit", "type": "NUMBER", "description": "", "default": 100}, {"name": "page", "type": "NUMBER", "description": "", "default": 1}, {"name": "category", "type": "STRING", "description": "Category of joke based on the jokes categories API", "default": "Women"}], "optional_parameters": [{"name": "sortBy", "type": "STRING", "description": "Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order", "default": "score:desc"}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Joke of the Day", "api_description": "Get the joke of the day from a collection of most rated and most popular jokes.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Programming Memes Images", "api_name": "v1/memes", "api_description": "Get Random Programming Memes", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Humor-Jokes-and-Memes", "api_name": "praise", "api_description": "Praise somebody for doing something.\nSee https://humorapi.com/docs/#Praise for more.", "required_parameters": [{"name": "reason", "type": "STRING", "description": "The reason for the praise/insult.", "default": "you did it again"}, {"name": "name", "type": "STRING", "description": "The person's name.", "default": "Alex"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Entertainment", "tool_name": "Humor-Jokes-and-Memes", "api_name": "search-gifs", "api_description": "Search for gifs.\nSee https://humorapi.com/docs/#Search-Gifs for more.", "required_parameters": [{"name": "query", "type": "STRING", "description": "A search query.", "default": "cat"}], "optional_parameters": [{"name": "number", "type": "NUMBER", "description": "The number of results to retrieve between 1 and 10.", "default": 3}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Entertainment", "tool_name": "Humor-Jokes-and-Memes", "api_name": "generate-nonsense-word", "api_description": "Generate a nonsense word.\nSee https://humorapi.com/docs/#Generate-Nonsense-Word for more.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}], "query": "I want to surprise my friends with some funny jokes and memes at our weekly game night. Fetch me a random joke from World of Jokes and a programming meme. Also, find a Chuck Norris joke to make them laugh.", "relevant APIs": [["World of Jokes", "Get Random Joke"], ["Programming Memes Images", "v1/memes"], ["Chuck Norris", "/jokes/random"]], "query_id": 4575}, {"api_list": [{"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Entertainment", "tool_name": "DaddyJokes", "api_name": "Random", "api_description": "Get a random dad joke", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm planning a family gathering and I want to make everyone laugh. Fetch a random manatee joke, a Chuck Norris joke, and a dad joke for the occasion. Also, provide a list of available joke categories for Chuck Norris jokes.", "relevant APIs": [["manatee jokes", "random"], ["Chuck Norris", "/jokes/random"], ["DaddyJokes", "Random"], ["Chuck Norris", "/jokes/categories"]], "query_id": 4595}, {"api_list": [{"category_name": "Data", "tool_name": "Weather", "api_name": "5 day Forecast", "api_description": "3 hour interval - 5 day forecast for a given lat/lon", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude (Degrees)", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude (degrees)", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}, {"name": "lang", "type": "ENUM", "description": "Language for weather condition", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Severe Weather Alerts", "api_description": "Get servere weather alerts from local meteorlogical agencies (US, EU, and Isreal supported )", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [], "method": "GET", "template_response": {"alerts": "empty list", "city_name": "str", "country_code": "str", "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Weather", "tool_name": "Visual Crossing Weather", "api_name": "Historical weather record", "api_description": "The weather history data is suitable for retrieving hourly or daily historical weather records.", "required_parameters": [{"name": "location", "type": "STRING", "description": "The address or latitude or longitude of the location. Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats. When specify a point based on longitude, latitude, the format must be specifed as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).", "default": "Washington,DC,USA"}, {"name": "endDateTime", "type": "STRING", "description": "The date time for the start of the data request using the time zone of the location. In the ISO format: yyyy-MM-ddTHH:mm:ss. Hours should be specified in 24 hour clock format.", "default": "2019-01-03T00:00:00"}, {"name": "startDateTime", "type": "STRING", "description": "The date time for the start of the data request using the time zone of the location. In the ISO format: yyyy-MM-ddTHH:mm:ss. Hours should be specified in 24 hour clock format.", "default": "2019-01-01T00:00:00"}, {"name": "aggregateHours", "type": "NUMBER", "description": "The interval between weather history data in the output. 1 represent hourly records, 24 represents a daily forecast. As the source data is recorded at the hourly level, 24 hour records are aggregated to indicate the predominant weather conditions during that time period.  Supported values 1 or 24.", "default": "24"}, {"name": "unitGroup", "type": "STRING", "description": "The system of units used for the output data.  Supported values are us,uk,metric", "default": "us"}], "optional_parameters": [{"name": "contentType", "type": "STRING", "description": "When present, choose between json or csv output", "default": "csv"}, {"name": "dayEndTime", "type": "STRING", "description": "When present and not set to the same as the dayEndTime, filters the output to records that between the specified day times.", "default": "17:00:00"}, {"name": "dayStartTime", "type": "STRING", "description": "When present and not set to the same as the dayEndTime, filters the output to records that between the specified day times. This is useful for setting filters for business hours. Format h:m:ss (eg 9:00:00 woudl be 9am).", "default": "8:00:00"}, {"name": "shortColumnNames", "type": "BOOLEAN", "description": "When false, the returned dataset includes descriptive column names. When true, returns shorter, abbreviated column names with only alphanumeric characters. The short names are useful for programmatic use of the data.", "default": "0"}], "method": "GET"}, {"category_name": "Weather", "tool_name": "Visual Crossing Weather", "api_name": "Weather forecast data", "api_description": "Provides access to weather forecast information. The forecast is available for up to seven days at the hourly, 12 hour and daily summary level.", "required_parameters": [{"name": "aggregateHours", "type": "NUMBER", "description": "The interval between weather forecast data in the output. 1 represents an hourly forecast, 24 represents a daily forecast. As the source data is calculated at the hourly level, records calculated at 12 or 24 hours are aggregated to indicate the predominant weather condition during that time period. For example the maximum temperature, total precipitation, maximum windspeed etc.  Supported values 1,12 or 24.", "default": "24"}, {"name": "location", "type": "STRING", "description": "he address or latitude or longitude of the location. Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats. When specify a point based on longitude, latitude, the format must be specifed as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).", "default": "Washington,DC,USA"}], "optional_parameters": [{"name": "contentType", "type": "STRING", "description": "When present, choose between json or csv output", "default": "csv"}, {"name": "unitGroup", "type": "STRING", "description": "unitGroup - The system of units used for the output data.  Supported values are us,uk,metric.", "default": "us"}, {"name": "shortColumnNames", "type": "BOOLEAN", "description": " When false, the returned dataset includes descriptive column names. When true, returns shorter, abbreviated column names with only alphanumeric characters. The short names are useful for programmatic use of the data.", "default": "0"}], "method": "GET"}, {"category_name": "Weather", "tool_name": "AI Weather by Meteosource", "api_name": "nearest_place", "api_description": "Use this endpoint to search for the **nearest named place** (village/town/city) from a given GPS coordinates. You will get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information**.\n\n*Note: If you specify coordinates of a secluded place (e.g. middle of the ocean), the nearest point can be very far from the coordinates.*", "required_parameters": [{"name": "lon", "type": "STRING", "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4", "default": "-122.42282"}, {"name": "lat", "type": "STRING", "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4", "default": "37.81021"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n\n", "default": "en"}], "method": "GET", "template_response": {"name": "str", "place_id": "str", "adm_area1": "str", "adm_area2": "str", "country": "str", "lat": "str", "lon": "str", "timezone": "str", "type": "str"}}, {"category_name": "Weather", "tool_name": "AI Weather by Meteosource", "api_name": "weather_statistics", "api_description": "Get average weather: **long-term normals** for a given place for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`.", "required_parameters": [], "optional_parameters": [{"name": "units", "type": "STRING", "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n", "default": "auto"}, {"name": "place_id", "type": "STRING", "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**", "default": ""}, {"name": "lon", "type": "STRING", "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**", "default": "-122.42282"}, {"name": "lat", "type": "STRING", "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**", "default": "37.81021"}], "method": "GET", "template_response": {"lat": "str", "lon": "str", "elevation": "int", "units": "str", "statistics": {"data": [{"day": "str", "temperature": {"avg": "float", "avg_min": "float", "avg_max": "float", "record_min": "float", "record_max": "float"}, "wind": {"avg_speed": "float", "avg_angle": "int", "avg_dir": "str", "max_speed": "float", "max_gust": "float"}, "precipitation": {"avg": "float", "probability": "int"}, "_list_length": 30}]}}}, {"category_name": "Weather", "tool_name": "AI Weather by Meteosource", "api_name": "historical_weather", "api_description": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.", "required_parameters": [{"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "The UTC day of the data in the past in `YYYY-MM-DD` format.", "default": "2021-08-24"}], "optional_parameters": [{"name": "lat", "type": "STRING", "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**", "default": "37.81021"}, {"name": "place_id", "type": "STRING", "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**", "default": ""}, {"name": "units", "type": "STRING", "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n", "default": "auto"}, {"name": "lon", "type": "STRING", "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**", "default": "-122.42282"}], "method": "GET", "template_response": {"lat": "str", "lon": "str", "elevation": "int", "timezone": "str", "units": "str", "data": [{"date": "str", "weather": "str", "icon": "int", "temperature": "float", "feels_like": "float", "wind_chill": "float", "dew_point": "float", "wind": {"speed": "float", "gusts": "float", "angle": "int", "dir": "str"}, "cloud_cover": "int", "pressure": "float", "precipitation": {"total": "float", "type": "str"}, "ozone": "int", "humidity": "float", "_list_length": 24}]}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/gridpoints/{wfo}/{x},{y}", "api_description": "Raw (commonly referred to as \"gridded\") data provided by the Weather Office. Every forecast request will use this data to build the forecast response. The grid for a given location is determined by the \"property.forecastGridData\" property in the /points/{lat},{lon} endpoint. Example: /gridpoints/EAX/40,48", "required_parameters": [{"name": "wfo", "type": "STRING", "description": "wfo: a weather office id (https://en.wikipedia.org/wiki/List_of_National_Weather_Service_Weather_Forecast_Offices)", "default": ""}, {"name": "x", "type": "STRING", "description": "x: the grid x coordinate", "default": ""}, {"name": "y", "type": "STRING", "description": "y: the grid y coordinate", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 6}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts/{alertId}", "api_description": "A specific alert by id provided by a search or list. Example: /alerts/NWS-IDP-PROD-2202530-2064731", "required_parameters": [{"name": "alertId", "type": "STRING", "description": "", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 1}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/stations/{stationId}/observations", "api_description": "A list of observations for a station.  NOTE! The API uses MADIS to provide observation data. The observation may be delayed while MADIS completes quality checks of the data. To limit the delay, the API is provided with incremental updates with various levels of checked data, and the API will return the variation of the observation with the most checked data. It is possible that no data is provided on the first variation, or that no data is checked on the first variation. It is up to the consumer to determine if the quality of data is appropriate. If not, the previous observation can be requested, or the next nearest station can be used. The API returns the state of the data for each value in the response, where \"Z\" (or \"null\") is for not checked (and may never be for some values) and \"V\" for checked. Please refer to MADIS for complete documentation on their data quality process.  Example: /stations/KMKC/observations", "required_parameters": [{"name": "stationId", "type": "STRING", "description": "stationId: a valid station id (e.g. as provided by the /points/{point}/stations endpoint)", "default": ""}], "optional_parameters": [{"name": "end", "type": "STRING", "description": " End time (ISO8601DateTime)", "default": ""}, {"name": "limit", "type": "STRING", "description": "Limit (an integer)", "default": ""}, {"name": "start", "type": "STRING", "description": "Start time (ISO8601DateTime)", "default": ""}], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 4}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}], "query": "My friend is planning a destination wedding in Hawaii next year. Can you give me the 5-day weather forecast for Honolulu starting from January 1st? Also, provide me with the weather statistics for the next 30 days in Honolulu.", "relevant APIs": [["Weather", "5 day Forecast"], ["AI Weather by Meteosource", "weather_statistics"]], "query_id": 4758}, {"api_list": [{"category_name": "Data", "tool_name": "Weather", "api_name": "Current Weather Data of a location.", "api_description": "Returns the current (most recent) weather observation of a given location", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "-78.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language", "default": ""}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET", "template_response": {"count": "int", "data": [{"app_temp": "float", "aqi": "int", "city_name": "str", "clouds": "int", "country_code": "str", "datetime": "str", "dewpt": "int", "dhi": "int", "dni": "int", "elev_angle": "float", "ghi": "int", "gust": "float", "h_angle": "NoneType", "lat": "float", "lon": "float", "ob_time": "str", "pod": "str", "precip": "int", "pres": "float", "rh": "int", "slp": "float", "snow": "int", "solar_rad": "int", "sources": ["list of str with length 1"], "state_code": "str", "station": "str", "sunrise": "str", "sunset": "str", "temp": "float", "timezone": "str", "ts": "int", "uv": "int", "vis": "int", "weather": {"description": "str", "code": "int", "icon": "str"}, "wind_cdir": "str", "wind_cdir_full": "str", "wind_dir": "int", "wind_spd": "float", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "5 day Forecast", "api_description": "3 hour interval - 5 day forecast for a given lat/lon", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude (Degrees)", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude (degrees)", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}, {"name": "lang", "type": "ENUM", "description": "Language for weather condition", "default": ""}], "method": "GET"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "shazam-songs/get-details", "api_description": "Get mapping id information between systems to use with other endpoints.", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'id' field returned in .../search endpoint", "default": "40333609"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 1}], \"resources\": {\"artist-highlights\": {\"73406786\": {\"id\": \"str\", \"type\": \"str\"}}, \"track-highlights\": {\"578132846\": {\"id\": \"str\", \"type\": \"str\"}}, \"related-tracks\": {\"track-similarities-id-40333609\": {\"id\": \"str\", \"type\": \"str\"}}, \"songs\": {\"1436677761\": {\"id\": \"str\", \"type\": \"str\"}}, \"albums\": {\"1436677753\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"artistName\": \"str\", \"name\": \"str\", \"releaseDate\": \"str\"}}}, \"shazam-artists\": {\"42\": {\"id\": \"str\", \"type\": \"str\"}}, \"artists\": {\"73406786\": {\"id\": \"str\", \"type\": \"str\"}}, \"shazam-songs\": {\"40333609\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"type\": \"str\", \"title\": \"str\", \"artist\": \"str\", \"primaryArtist\": \"str\", \"label\": \"str\", \"explicit\": \"bool\", \"isrc\": \"str\", \"webUrl\": \"str\", \"images\": {\"artistAvatar\": \"str\", \"coverArt\": \"str\", \"coverArtHq\": \"str\"}, \"share\": {\"subject\": \"str\", \"text\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"snapchat\": \"str\"}, \"genres\": {\"prim"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "auto-complete", "api_description": "Get suggestions by word or phrase", "required_parameters": [{"name": "term", "type": "STRING", "description": "Any word or phrase of song, artist, etc... that you are familiar with", "default": "kiss the"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"hints": [{"term": "str", "_list_length": 10}]}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "songs/v2/get-details", "api_description": "Get details information of specific song", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'songs->id' field returned from .../shazam-songs/get-details endpoint", "default": "1217912247"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"data": [{"id": "str", "type": "str", "attributes": {"hasTimeSyncedLyrics": "bool", "albumName": "str", "genreNames": ["list of str with length 2"], "trackNumber": "int", "releaseDate": "str", "durationInMillis": "int", "isVocalAttenuationAllowed": "bool", "isMasteredForItunes": "bool", "isrc": "str", "artwork": {"width": "int", "url": "str", "height": "int", "textColor3": "str", "textColor2": "str", "textColor4": "str", "textColor1": "str", "bgColor": "str", "hasP3": "bool"}, "composerName": "str", "audioLocale": "str", "url": "str", "playParams": {"id": "str", "kind": "str"}, "discNumber": "int", "isAppleDigitalMaster": "bool", "hasLyrics": "bool", "audioTraits": ["list of str with length 2"], "name": "str", "previews": [{"url": "str", "_list_length": 1}], "artistName": "str"}, "relationships": {"artists": {"data": [{"id": "str", "type": "str", "_list_length": 1}]}, "albums": {"data": [{"id": "str", "type": "str", "_list_length": 1}]}}, "_list_length": 1}]}}, {"category_name": "Food", "tool_name": "The Cocktail DB", "api_name": "List of Cocktails", "api_description": "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "difficulty": "str", "image": "str"}}, {"category_name": "Food", "tool_name": "The Cocktail DB", "api_name": "Detailed Cocktail Recipe by ID", "api_description": "Get Cocktail by ID", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": "45"}], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "difficulty": "str", "portion": "str", "time": "str", "description": "str", "ingredients": ["list of str with length 5"], "method": [{"Step 1": "str", "_list_length": 3}], "image": "str"}}], "query": "I need to plan a beach party for my company. Can you give me the 5-day weather forecast for Miami and suggest some cocktail recipes that complement the weather? Also, provide me with the detailed recipe for a cocktail with the ID 45.", "relevant APIs": [["Weather", "5 day Forecast"], ["The Cocktail DB", "List of Cocktails"], ["The Cocktail DB", "Detailed Cocktail Recipe by ID"]], "query_id": 4819}, {"api_list": [{"category_name": "Media", "tool_name": "placekitten", "api_name": "Kitten", "api_description": "", "required_parameters": [{"name": "width", "type": "STRING", "description": "", "default": "200"}, {"name": "height", "type": "STRING", "description": "", "default": "300"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Data", "tool_name": "Cat Facts", "api_name": "Facts", "api_description": "Retrieve and query facts", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"status": {"verified": "bool", "sentCount": "int"}, "_id": "str", "user": "str", "text": "str", "__v": "int", "source": "str", "updatedAt": "str", "type": "str", "createdAt": "str", "deleted": "bool", "used": "bool"}}, {"category_name": "Reward", "tool_name": "Kitten Placeholder", "api_name": "Kitten", "api_description": "Fetches random kitten image!", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Reward", "tool_name": "Kitten Placeholder", "api_name": "Cat", "api_description": "Fetches a random cat picture.", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I want to surprise my friend who loves cats with a personalized gift. Can you fetch random kitten pictures and cat images that I can use to create a custom photo album for her? Additionally, provide me with some interesting facts about cats that I can include as captions for the photos.", "relevant APIs": [["Kitten Placeholder", "Kitten"], ["Kitten Placeholder", "Cat"], ["Cat Facts", "Facts"]], "query_id": 4875}, {"api_list": [{"category_name": "Education", "tool_name": "Quotes", "api_name": "quote", "api_description": "Get a random Quote", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"quote": "str", "author": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}], "query": "I'm planning a surprise birthday party for my friend and I need some inspiration for funny jokes and quotes to include in the party decorations. Can you provide me with a random Chuck Norris joke, a random manatee joke, and a funny quote? Also, find any available joke categories to add more variety to the party.", "relevant APIs": [["Chuck Norris", "/jokes/random"], ["manatee jokes", "random"], ["Quotes", "quote"], ["Chuck Norris", "/jokes/categories"]], "query_id": 4976}, {"api_list": [{"category_name": "Education", "tool_name": "Quotes", "api_name": "quote", "api_description": "Get a random Quote", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"quote": "str", "author": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}], "query": "My friends and I are organizing a game night and we want to include some fun jokes. Fetch a random joke from the Jokes by API-Ninjas API, a random Chuck Norris joke, and a random manatee joke. Additionally, find a quote related to friendship to create a warm and enjoyable atmosphere.", "relevant APIs": [["Jokes by API-Ninjas", "/v1/jokes"], ["Chuck Norris", "/jokes/random"], ["manatee jokes", "random"], ["Quotes", "quote"]], "query_id": 4979}, {"api_list": [{"category_name": "Education", "tool_name": "Quotes", "api_name": "quote", "api_description": "Get a random Quote", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"quote": "str", "author": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}], "query": "I want to surprise my colleagues with some jokes and interesting facts during our lunch break. Fetch a random joke from the Jokes by API-Ninjas API, a random Chuck Norris joke, and a random manatee joke. Additionally, find a quote related to work to lighten the atmosphere in the office.", "relevant APIs": [["Jokes by API-Ninjas", "/v1/jokes"], ["Chuck Norris", "/jokes/random"], ["manatee jokes", "random"], ["Quotes", "quote"]], "query_id": 4983}, {"api_list": [{"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/gridpoints/{wfo}/{x},{y}", "api_description": "Raw (commonly referred to as \"gridded\") data provided by the Weather Office. Every forecast request will use this data to build the forecast response. The grid for a given location is determined by the \"property.forecastGridData\" property in the /points/{lat},{lon} endpoint. Example: /gridpoints/EAX/40,48", "required_parameters": [{"name": "wfo", "type": "STRING", "description": "wfo: a weather office id (https://en.wikipedia.org/wiki/List_of_National_Weather_Service_Weather_Forecast_Offices)", "default": ""}, {"name": "x", "type": "STRING", "description": "x: the grid x coordinate", "default": ""}, {"name": "y", "type": "STRING", "description": "y: the grid y coordinate", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 6}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/stations/{stationId}", "api_description": "Metadata about a station. Similar to /stations endpoint with id parameter. Example: /stations/KMKC", "required_parameters": [{"name": "stationId", "type": "STRING", "description": "stationId: the id of a station from the /points/{point}/stations endpoint", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 1}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts/active/region/{region}", "api_description": "A list of active alerts by region. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/region/GL", "required_parameters": [{"name": "region", "type": "STRING", "description": "area: a valid region, see list in counts endpoint", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 2}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "5 day Forecast", "api_description": "3 hour interval - 5 day forecast for a given lat/lon", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude (Degrees)", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude (degrees)", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}, {"name": "lang", "type": "ENUM", "description": "Language for weather condition", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "120 Hour Forecast", "api_description": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "hours", "type": "STRING", "description": "Limit number of forecast hours", "default": "48"}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Current Weather Data of a location.", "api_description": "Returns the current (most recent) weather observation of a given location", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "-78.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language", "default": ""}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET", "template_response": {"count": "int", "data": [{"app_temp": "float", "aqi": "int", "city_name": "str", "clouds": "int", "country_code": "str", "datetime": "str", "dewpt": "int", "dhi": "int", "dni": "int", "elev_angle": "float", "ghi": "int", "gust": "float", "h_angle": "NoneType", "lat": "float", "lon": "float", "ob_time": "str", "pod": "str", "precip": "int", "pres": "float", "rh": "int", "slp": "float", "snow": "int", "solar_rad": "int", "sources": ["list of str with length 1"], "state_code": "str", "station": "str", "sunrise": "str", "sunset": "str", "temp": "float", "timezone": "str", "ts": "int", "uv": "int", "vis": "int", "weather": {"description": "str", "code": "int", "icon": "str"}, "wind_cdir": "str", "wind_cdir_full": "str", "wind_dir": "int", "wind_spd": "float", "_list_length": 1}]}}], "query": "My family and I are planning a ski trip to Aspen. Can you provide us with the current weather conditions and a 120-hour forecast for the coordinates 39.2\u00b0N and 106.8\u00b0W? Also, let us know if there are any active weather alerts in the region. Finally, recommend some popular ski resorts and slopes in Aspen.", "relevant APIs": [["National Weather Service", "/gridpoints/{wfo}/{x},{y}"], ["National Weather Service", "/alerts/active/region/{region}"], ["Weather", "120 Hour Forecast"]], "query_id": 5074}, {"api_list": [{"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/points/{point}/forecast/hourly", "api_description": "Hourly forecast data for a point. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast/hourly", "required_parameters": [{"name": "point", "type": "STRING", "description": "point: EPSG:4326 latitude, EPSG:4326 longitude", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/products/types/{typeId}", "api_description": "A list of products by type. Example: /products/types/AFD", "required_parameters": [{"name": "typeId", "type": "STRING", "description": "typeId: an id of a valid product type ", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 1}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/points/{point}/forecast", "api_description": "Forecast data for a point. The DWML format is a temporary format to aid transition and will be sunset at a later date. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast", "required_parameters": [{"name": "point", "type": "STRING", "description": "point: EPSG:4326 latitude, EPSG:4326 longitude", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Severe Weather Alerts", "api_description": "Get servere weather alerts from local meteorlogical agencies (US, EU, and Isreal supported )", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [], "method": "GET", "template_response": {"alerts": "empty list", "city_name": "str", "country_code": "str", "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "120 Hour Forecast", "api_description": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "hours", "type": "STRING", "description": "Limit number of forecast hours", "default": "48"}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "5 day Forecast", "api_description": "3 hour interval - 5 day forecast for a given lat/lon", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude (Degrees)", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude (degrees)", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}, {"name": "lang", "type": "ENUM", "description": "Language for weather condition", "default": ""}], "method": "GET"}], "query": "I want to surprise my family with a spontaneous road trip to Yosemite National Park. Can you give me a 120-hour forecast for the park? Additionally, suggest some hiking trails and scenic spots we shouldn't miss.", "relevant APIs": [["Weather", "120 Hour Forecast"], ["National Weather Service", "/points/{point}/forecast"]], "query_id": 5096}, {"api_list": [{"category_name": "Finance", "tool_name": "Coinbase", "api_name": "Get total buy price", "api_description": "Get the total buy price for some bitcoin amount.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Coinbase", "api_name": "List orders received", "api_description": "List merchant orders received.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Coinbase", "api_name": "Get account balance", "api_description": "Get the user's account balance in BTC.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Financial", "tool_name": "CurrencyAPI.net", "api_name": "Timeframe", "api_description": "Display a currency conversion's historical rates within a given timeframe", "required_parameters": [{"name": "end_date", "type": "DATE (YYYY-MM-DD)", "description": "Display the start date you wish to get the historical data from. Eg 2010-12-29", "default": ""}, {"name": "base", "type": "STRING", "description": "The currency code you want to get the historical data of. Eg, USD", "default": "USD"}, {"name": "start_date", "type": "DATE (YYYY-MM-DD)", "description": "Display the start date you wish to get the historical data from. Eg 2010-12-25", "default": ""}], "optional_parameters": [{"name": "output", "type": "STRING", "description": "The output of the response. Either JSON or XML", "default": "JSON"}], "method": "GET", "template_response": {"valid": "bool", "error": {"code": "int", "message": "str"}}}, {"category_name": "Financial", "tool_name": "CurrencyAPI.net", "api_name": "Currencies", "api_description": "Gets list of currencies we support", "required_parameters": [], "optional_parameters": [{"name": "output", "type": "STRING", "description": "The output of the response. Either JSON or XML", "default": "JSON"}], "method": "GET", "template_response": "{\"valid\": \"bool\", \"currencies\": {\"AED\": \"str\", \"AFN\": \"str\", \"ALL\": \"str\", \"AMD\": \"str\", \"ANG\": \"str\", \"AOA\": \"str\", \"ARS\": \"str\", \"AUD\": \"str\", \"AWG\": \"str\", \"AZN\": \"str\", \"BAM\": \"str\", \"BBD\": \"str\", \"BCH\": \"str\", \"BDT\": \"str\", \"BGN\": \"str\", \"BHD\": \"str\", \"BIF\": \"str\", \"BMD\": \"str\", \"BND\": \"str\", \"BOB\": \"str\", \"BRL\": \"str\", \"BSD\": \"str\", \"BTC\": \"str\", \"BTG\": \"str\", \"BWP\": \"str\", \"BZD\": \"str\", \"CAD\": \"str\", \"CDF\": \"str\", \"CHF\": \"str\", \"CLP\": \"str\", \"CNH\": \"str\", \"CNY\": \"str\", \"COP\": \"str\", \"CRC\": \"str\", \"CUC\": \"str\", \"CUP\": \"str\", \"CVE\": \"str\", \"CZK\": \"str\", \"DASH\": \"str\", \"DJF\": \"str\", \"DKK\": \"str\", \"DOP\": \"str\", \"DZD\": \"str\", \"EGP\": \"str\", \"EOS\": \"str\", \"ETB\": \"str\", \"ETH\": \"str\", \"EUR\": \"str\", \"FJD\": \"str\", \"GBP\": \"str\", \"GEL\": \"str\", \"GHS\": \"str\", \"GIP\": \"str\", \"GMD\": \"str\", \"GNF\": \"str\", \"GTQ\": \"str\", \"GYD\": \"str\", \"HKD\": \"str\", \"HNL\": \"str\", \"HRK\": \"str\", \"HTG\": \"str\", \"HUF\": \"str\", \"IDR\": \"str\", \"ILS\": \"str\", \"INR\": \"str\", \"IQD\": \"str\", \"IRR\": \"str\", \"ISK\": \"str\", \"JMD\": \"str\", "}, {"category_name": "Financial", "tool_name": "CurrencyAPI.net", "api_name": "Rates", "api_description": "Get live currency conversion rates of a given currency", "required_parameters": [], "optional_parameters": [{"name": "output", "type": "STRING", "description": "The output of the response. Either JSON or XML", "default": "JSON"}, {"name": "base", "type": "STRING", "description": "Change the base currency. Eg GBP or BTC", "default": "USD"}], "method": "GET", "template_response": "{\"valid\": \"bool\", \"updated\": \"int\", \"base\": \"str\", \"rates\": {\"AED\": \"float\", \"AFN\": \"float\", \"ALL\": \"float\", \"AMD\": \"float\", \"ANG\": \"float\", \"AOA\": \"float\", \"ARS\": \"float\", \"AUD\": \"float\", \"AWG\": \"float\", \"AZN\": \"float\", \"BAM\": \"float\", \"BBD\": \"float\", \"BCH\": \"float\", \"BDT\": \"float\", \"BGN\": \"float\", \"BHD\": \"float\", \"BIF\": \"float\", \"BMD\": \"int\", \"BND\": \"float\", \"BOB\": \"float\", \"BRL\": \"float\", \"BSD\": \"float\", \"BTC\": \"float\", \"BTG\": \"float\", \"BWP\": \"float\", \"BZD\": \"float\", \"CAD\": \"float\", \"CDF\": \"float\", \"CHF\": \"float\", \"CLP\": \"float\", \"CNH\": \"float\", \"CNY\": \"float\", \"COP\": \"float\", \"CRC\": \"float\", \"CUC\": \"int\", \"CUP\": \"float\", \"CVE\": \"float\", \"CZK\": \"float\", \"DASH\": \"float\", \"DJF\": \"float\", \"DKK\": \"float\", \"DOP\": \"float\", \"DZD\": \"float\", \"EGP\": \"float\", \"EOS\": \"float\", \"ETB\": \"float\", \"ETH\": \"float\", \"EUR\": \"float\", \"FJD\": \"float\", \"GBP\": \"float\", \"GEL\": \"float\", \"GHS\": \"float\", \"GIP\": \"float\", \"GMD\": \"float\", \"GNF\": \"float\", \"GTQ\": \"float\", \"GYD\": \"float\", \"HKD\": \"float\", \"HNL\": \"float\""}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get exchange", "api_description": "Find information on a specific exchange listed on coinranking. An exchange is a place where cryptocurrencies are traded.\nThis endpoint requires the **ultra** plan or higher.", "required_parameters": [{"name": "uuid", "type": "string", "description": "UUID of the exchange you want to request", "default": "-zdvbieRdZ"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get global stats", "api_description": "These global statistics tell about the data available on coinranking.", "required_parameters": [], "optional_parameters": [{"name": "referenceCurrencyUuid", "type": "STRING", "description": "UUID of reference currency, in which all the prices are calculated. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl", "default": "yhjMzLPhuIDl"}], "method": "GET", "template_response": {"status": "str", "data": {"referenceCurrencyRate": "int", "totalCoins": "int", "totalMarkets": "int", "totalExchanges": "int", "totalMarketCap": "str", "total24hVolume": "str", "btcDominance": "float", "bestCoins": [{"uuid": "str", "symbol": "str", "name": "str", "iconUrl": "str", "coinrankingUrl": "str", "_list_length": 3}], "newestCoins": [{"uuid": "str", "symbol": "str", "name": "str", "iconUrl": "str", "coinrankingUrl": "str", "_list_length": 3}]}}}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get coins", "api_description": "Get a list of coins. Coins are by default ordered by their rank, which - somewhat simplified - means that they are ordered on marketcap. The response not only returns a list of coins, but also statistics regarding the requested list, such as the volume in the last 24 hours.", "required_parameters": [], "optional_parameters": [{"name": "tags", "type": "ARRAY", "description": "Tags to filter the list on.\n\nAllowed values:\ndefi, stablecoin, nft, dex, exchange, staking, dao, meme, privacy\n\nArray parameters should be suffixed with brackets.\nExample: ?tags[]=defi&tags[]=nft.", "default": ""}, {"name": "orderDirection", "type": "STRING", "description": "Applies direction to the orderBy query, which can be in ascending or descending order.\n\nDefault value: desc\nAllowed values:\ndesc asc", "default": "desc"}, {"name": "offset", "type": "NUMBER", "description": "Offset. Used for pagination.\n\nDefault value: 0", "default": "0"}, {"name": "search", "type": "STRING", "description": "Filter the results by searching for coin names or symbols.", "default": ""}, {"name": "limit", "type": "NUMBER", "description": "Limit. Used for pagination.\n\nDefault value: 50\nSize range: 0-100", "default": "50"}, {"name": "symbols", "type": "ARRAY", "description": "Symbols to filter the list on.\n\nArray parameters should be suffixed with brackets.\nExample: ?symbols[]=BTC&symbols[]=ETH.", "default": ""}, {"name": "tiers", "type": "ARRAY", "description": "We seperate coins into three tiers. With this parameter you can filter coins on the tiers you need. Read more about out our tiers in our [methodology](https://support.coinranking.com/article/56-what-is-our-ranking-methodology)\n\nArray parameters should be suffixed with brackets.\nExample: ?tiers[]=1&tiers[]=2.", "default": "1"}, {"name": "uuids", "type": "ARRAY", "description": "UUIDs to filter the list on. If you know the UUIDs of the coins you want to fetch, you can use this filter to get the specific coins.\n\nArray parameters should be suffixed with brackets.\nExample: ?uuids[]=razxDUgYGNAdQ&uuids[]=Qwsogvtv82FCd.", "default": ""}, {"name": "orderBy", "type": "STRING", "description": "Index to order by. All sortings excluding listedAt still take our different tiers of coins into account, read more about it in our methodology.\n\nDefault value: marketCap\nAllowed values:\nprice marketCap 24hVolume change listedAt", "default": "marketCap"}, {"name": "referenceCurrencyUuid", "type": "STRING", "description": "UUID of reference currency, in which all the prices are calculated. This includes the price, the change and the sparkline. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl", "default": "yhjMzLPhuIDl"}, {"name": "timePeriod", "type": "STRING", "description": "By setting the timeperiod the change percentage and sparkline in the response will be calculated accordingly\n\nDefault value: 24h\nAllowed values:\n3h 24h 7d 30d 3m 1y 3y 5y", "default": "24h"}], "method": "GET", "template_response": {"status": "str", "data": {"stats": {"total": "int", "totalCoins": "int", "totalMarkets": "int", "totalExchanges": "int", "totalMarketCap": "str", "total24hVolume": "str"}, "coins": [{"uuid": "str", "symbol": "str", "name": "str", "color": "str", "iconUrl": "str", "marketCap": "str", "price": "str", "listedAt": "int", "tier": "int", "change": "str", "rank": "int", "sparkline": ["list of str with length 24"], "lowVolume": "bool", "coinrankingUrl": "str", "24hVolume": "str", "btcPrice": "str", "_list_length": 50}]}}}], "query": "I'm a crypto trader and I need to stay updated with the latest prices. Can you fetch the current prices and market caps of the top 10 coins? Additionally, provide me with the historical rates for the past week.", "relevant APIs": [["Coinranking", "Get coins"], ["CurrencyAPI.net", "Timeframe"]], "query_id": 5188}, {"api_list": [{"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get a Specific Game", "api_description": "This endpoint retrieves a specific game", "required_parameters": [{"name": "id", "type": "STRING", "description": "ID of the game", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get All Games", "api_description": "This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.", "required_parameters": [], "optional_parameters": [{"name": "page", "type": "STRING", "description": "The page number, used for pagination.", "default": "0"}, {"name": "per_page", "type": "STRING", "description": "The number of results returned per call, used for pagination.", "default": "25"}, {"name": "team_ids", "type": "STRING", "description": "An array of team_ids", "default": ""}, {"name": "date", "type": "STRING", "description": "An array of dates formatted in 'YYYY-MM-DD'", "default": ""}, {"name": "Seasons", "type": "STRING", "description": "An array of seasons", "default": ""}], "method": "GET", "template_response": {"data": [{"id": "int", "date": "str", "home_team": {"id": "int", "abbreviation": "str", "city": "str", "conference": "str", "division": "str", "full_name": "str", "name": "str"}, "home_team_score": "int", "period": "int", "postseason": "bool", "season": "int", "status": "str", "time": "str", "visitor_team": {"id": "int", "abbreviation": "str", "city": "str", "conference": "str", "division": "str", "full_name": "str", "name": "str"}, "visitor_team_score": "int", "_list_length": 25}], "meta": {"total_pages": "int", "current_page": "int", "next_page": "int", "per_page": "int", "total_count": "int"}}}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get a Specific Team", "api_description": "This endpoint retrieves a specific team", "required_parameters": [{"name": "id", "type": "STRING", "description": "The ID of the team", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "listquotes", "api_description": "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "exchange", "api_description": "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1.", "required_parameters": [{"name": "from", "type": "STRING", "description": "Source Quote", "default": "SGD"}, {"name": "to", "type": "STRING", "description": "Destination Quote", "default": "MYR"}], "optional_parameters": [{"name": "q", "type": "NUMBER", "description": "Source Amount", "default": "1.0"}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Love Calculator", "api_name": "getPercentage", "api_description": "getPercentage", "required_parameters": [{"name": "sname", "type": "STRING", "description": "Enter second name.", "default": "Alice"}, {"name": "fname", "type": "STRING", "description": "Enter first name.", "default": "John"}], "optional_parameters": [], "method": "GET"}], "query": "I'm planning a movie night with my friends and we want to start the evening with some jokes. Can you suggest some movie-themed Chuck Norris jokes? Also, provide us with the game schedule and team standings of our favorite NBA team to plan future movie nights around their games.", "relevant APIs": [["Chuck Norris", "/jokes/random"], ["Free NBA", "Get All Games"], ["Free NBA", "Get a Specific Team"]], "query_id": 5344}, {"api_list": [{"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getMapTilewithFrenchLabels", "api_description": "Raster Map Tiles with French Labels", "required_parameters": [{"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "8"}, {"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "5"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "4"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getStandardMapTile", "api_description": "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap", "required_parameters": [{"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "3"}, {"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "6"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getMapTilewithSpanishLabels", "api_description": "Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map.", "required_parameters": [{"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}, {"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "4"}, {"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "2"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Commerce", "tool_name": "Apfelpreise", "api_name": "price", "api_description": "Get latest average price for manufacturer number", "required_parameters": [{"name": "manufacturerNumBase64Encoded", "type": "string", "description": "A manufacturer number of an apple product, base64 encoded, e.g for a Apple MacBook Pro 13\\\\\\\" 2020 with manufacturer number MWP72D/A -> TVdQNzJEL0E=", "default": "TVdQNzJEL0E="}, {"name": "condition", "type": "ENUM", "description": "ENUM, valid values are: USED, NEW, DEFECT, REFURBISHED\n\nNote: Until now in v1, only values USED and REFURBISHED are allowed and give the same results (no distringuish between USED or REFURBISHED, so use any of the two.\nIn a future release, the other values will be also supported.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm planning a family vacation to Paris and I need some assistance with mapping. Can you provide me with a standard map tile of zoom level 3 for the coordinates (48.8566\u00b0 N, 2.3522\u00b0 E)? Additionally, I would like to know the average price of a new Apple MacBook Pro 13\" 2020 (manufacturer number TVdQNzJEL0E=) in Paris.", "relevant APIs": [["MapTiles", "getStandardMapTile"], ["Apfelpreise", "price"]], "query_id": 5550}, {"api_list": [{"category_name": "Music", "tool_name": "Shazam", "api_name": "charts/list", "api_description": "List all available charts by cities, countries, and genres", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"countries": [{"id": "str", "listid": "str", "momentum_listid": "str", "name": "str", "cities": [{"id": "str", "name": "str", "countryid": "str", "listid": "str", "_list_length": 50}], "genres": [{"id": "str", "countryid": "str", "listid": "str", "name": "str", "urlPath": "str", "count": "int", "_list_length": 3}], "_list_length": 54}], "global": {"genres": [{"id": "str", "listid": "str", "name": "str", "urlPath": "str", "count": "int", "_list_length": 18}]}}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "auto-complete", "api_description": "Get suggestions by word or phrase", "required_parameters": [{"name": "term", "type": "STRING", "description": "Any word or phrase of song, artist, etc... that you are familiar with", "default": "kiss the"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"hints": [{"term": "str", "_list_length": 10}]}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "albums/get-details", "api_description": "Get detailed album of an album", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'albums->id' field returned in .../shazam-songs/get-details OR .../artists/get-albums OR .../artists/get-summary\nThe value of 'id' field returned in .../artists/get-albums OR .../artists/get-latest-release endpoint\nThe value of 'albumadamid' field returned in .../songs/v2/detect OR .../songs/detect endpoint", "default": "850576570"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"data\": [{\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"copyright\": \"str\", \"genreNames\": [\"list of str with length 9\"], \"releaseDate\": \"str\", \"upc\": \"str\", \"isMasteredForItunes\": \"bool\", \"artwork\": {\"width\": \"int\", \"url\": \"str\", \"height\": \"int\", \"textColor3\": \"str\", \"textColor2\": \"str\", \"textColor4\": \"str\", \"textColor1\": \"str\", \"bgColor\": \"str\", \"hasP3\": \"bool\"}, \"url\": \"str\", \"playParams\": {\"id\": \"str\", \"kind\": \"str\"}, \"recordLabel\": \"str\", \"trackCount\": \"int\", \"isCompilation\": \"bool\", \"isPrerelease\": \"bool\", \"audioTraits\": [\"list of str with length 2\"], \"isSingle\": \"bool\", \"name\": \"str\", \"artistName\": \"str\", \"contentRating\": \"str\", \"editorialNotes\": {\"standard\": \"str\", \"short\": \"str\"}, \"isComplete\": \"bool\"}, \"relationships\": {\"tracks\": {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"hasTimeSyncedLyrics\": \"bool\", \"albumName\": \"str\", \"genreNames\": [\"list of str with length 3\"], \"trackNumber\": \"int\", \"releaseDate\": \"str\", \"durationInMillis\": \"int\", \"isVocalAttenuationAllowed\": \"bo"}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/playlist/info", "api_description": "Get playlist info.", "required_parameters": [{"name": "playlist_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/vghc3eihbsdq/sets/almost-lover"}], "optional_parameters": [], "method": "GET", "template_response": "{\"id\": \"int\", \"title\": \"str\", \"url\": \"str\", \"description\": \"str\", \"thumbnail\": \"str\", \"author\": {\"profile\": \"str\", \"username\": \"str\", \"name\": \"str\", \"urn\": \"int\"}, \"embedURL\": \"str\", \"embed\": \"NoneType\", \"genre\": \"str\", \"trackCount\": \"int\", \"tracks\": [{\"artwork_url\": \"str\", \"caption\": \"NoneType\", \"commentable\": \"bool\", \"comment_count\": \"int\", \"created_at\": \"str\", \"description\": \"str\", \"downloadable\": \"bool\", \"download_count\": \"int\", \"duration\": \"int\", \"full_duration\": \"int\", \"embeddable_by\": \"str\", \"genre\": \"str\", \"has_downloads_left\": \"bool\", \"id\": \"int\", \"kind\": \"str\", \"label_name\": \"str\", \"last_modified\": \"str\", \"license\": \"str\", \"likes_count\": \"int\", \"permalink\": \"str\", \"permalink_url\": \"str\", \"playback_count\": \"int\", \"public\": \"bool\", \"publisher_metadata\": {\"id\": \"int\", \"urn\": \"str\", \"artist\": \"str\", \"contains_music\": \"bool\", \"isrc\": \"str\", \"writer_composer\": \"str\"}, \"purchase_title\": \"NoneType\", \"purchase_url\": \"NoneType\", \"release_date\": \"NoneType\", \"reposts_count\": \"int\", \"secr"}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/user/info", "api_description": "Get basic user info", "required_parameters": [{"name": "profile_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934"}], "optional_parameters": [], "method": "GET", "template_response": {"urn": "int", "username": "str", "name": "str", "verified": "bool", "createdAt": "str", "avatarURL": "str", "profile": "str", "bannerURL": "str", "followers": "int", "following": "int", "likesCount": "int", "tracksCount": "int", "tracks": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": "str", "duration": "int", "_list_length": 3}], "likes": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": {"name": "str", "username": "str", "profile": "str"}, "_list_length": 1}]}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/search", "api_description": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "required_parameters": [{"name": "type", "type": "STRING", "description": "", "default": "all"}, {"name": "query", "type": "STRING", "description": "", "default": "almost lover"}], "optional_parameters": [], "method": "GET", "template_response": {"index": "int", "artist": "str", "url": "str", "itemName": "str", "name": "str", "type": "str"}}, {"category_name": "Entertainment", "tool_name": "Chart Lyrics", "api_name": "/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad", "api_description": "Sample API request to search Lyrics", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm a DJ and I'm looking for remixes of popular songs. Can you help me find remixes of the top tracks in the charts? Additionally, provide me with the details of the artists who created these remixes.", "relevant APIs": [["Shazam", "charts/list"], ["Shazam", "albums/get-details"], ["Soundcloud", "/search"], ["Soundcloud", "/user/info"]], "query_id": 5968}, {"api_list": [{"category_name": "Mapping", "tool_name": "Reverse Geocoding and Geolocation Service", "api_name": "GetLargestCities", "api_description": "Returns 5 largest cities within a given radial range with name, population, country and distance.", "required_parameters": [{"name": "latitude", "type": "NUMBER", "description": "latitude in decimal degrees (wgs84)", "default": "53.55196"}, {"name": "longitude", "type": "NUMBER", "description": "longitude in decimal degrees (wgs84)", "default": "9.98558"}, {"name": "range", "type": "NUMBER", "description": "radial lookup range in meters (max 100.000)", "default": "50000"}], "optional_parameters": [], "method": "GET", "template_response": {"City": "str", "Population": "int", "Latitude": "float", "Longitude": "float", "Country": "str", "CountryId": "str", "TimeZoneId": "str", "TimeZoneName": "str", "TimeZone_GMT_offset": "int", "LocalTimeNow": "str", "Distance": "float", "Bearing": "float", "CompassDirection": "str"}}, {"category_name": "Mapping", "tool_name": "Reverse Geocoding and Geolocation Service", "api_name": "GetNearestCities", "api_description": "Returns a readable place name as nearest 3 cities with population, country and distance based on given latitude/longitude pair.", "required_parameters": [{"name": "latitude", "type": "NUMBER", "description": "latitude in decimal degrees (wgs84)", "default": "53.55196"}, {"name": "longitude", "type": "NUMBER", "description": "longitude in decimal degrees (wgs84)", "default": "9.98558"}, {"name": "range", "type": "NUMBER", "description": "max radial range for lookup in meter (0=no range)", "default": "0"}], "optional_parameters": [], "method": "GET", "template_response": {"City": "str", "Population": "int", "Latitude": "float", "Longitude": "float", "Country": "str", "CountryId": "str", "TimeZoneId": "str", "TimeZoneName": "str", "TimeZone_GMT_offset": "int", "LocalTimeNow": "str", "Distance": "float", "Bearing": "float", "CompassDirection": "str"}}, {"category_name": "Mapping", "tool_name": "Reverse Geocoding and Geolocation Service", "api_name": "GetTimezone", "api_description": "Finds the local timezone for any given geo-location point by lat and long and returns timezone information with Timezone name, Timezone id and current local time.", "required_parameters": [{"name": "longitude", "type": "NUMBER", "description": "", "default": "-74.40753570369408"}, {"name": "latitude", "type": "NUMBER", "description": "", "default": "40.63380384389354"}], "optional_parameters": [], "method": "GET", "template_response": {"TimeZoneId": "str", "GMT_offset": "int", "TimeZoneName": "str", "LocalTime_Now": "str", "Country": "str", "CountryId": "str"}}, {"category_name": "Mapping", "tool_name": "TrueWay Geocoding", "api_name": "ReverseGeocode", "api_description": "Obtain address for location", "required_parameters": [{"name": "location", "type": "STRING", "description": "The location for which you wish to obtain the human-readable address", "default": "37.7879493,-122.3961974"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language in which to return results", "default": "en"}], "method": "GET", "template_response": {"results": [{"address": "str", "postal_code": "str", "country": "str", "region": "str", "area": "str", "locality": "str", "neighborhood": "str", "street": "str", "house": "str", "location": {"lat": "float", "lng": "float"}, "location_type": "str", "type": "str", "_list_length": 5}]}}, {"category_name": "Mapping", "tool_name": "TrueWay Geocoding", "api_name": "Geocode", "api_description": "Obtain geocoordinates for address", "required_parameters": [{"name": "address", "type": "STRING", "description": "The address that you want to geocode", "default": "505 Howard St, San Francisco"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language in which to return results", "default": "en"}, {"name": "country", "type": "STRING", "description": "The country code", "default": ""}, {"name": "bounds", "type": "STRING", "description": "The bounding box", "default": ""}], "method": "GET", "template_response": {"results": [{"address": "str", "postal_code": "str", "country": "str", "region": "str", "area": "str", "locality": "str", "neighborhood": "str", "street": "str", "house": "str", "location": {"lat": "float", "lng": "float"}, "location_type": "str", "type": "str", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Place Distance", "api_description": "Gets this place's distance to the given place.", "required_parameters": [{"name": "placeId", "type": "string", "description": "", "default": ""}], "optional_parameters": [{"name": "distanceUnit", "type": "STRING", "description": "The unit of distance: KM | MI [default]", "default": ""}, {"name": "toPlaceId", "type": "STRING", "description": "The distance to this place", "default": "Q60"}], "method": "GET", "template_response": {"errors": [{"code": "str", "message": "str", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "City Distance", "api_description": "Gets the distance to the given city.", "required_parameters": [{"name": "cityid", "type": "STRING", "description": "The city id (either native id or wikiDataId)", "default": "Q65"}], "optional_parameters": [{"name": "fromCityId", "type": "STRING", "description": "The distance from this city", "default": ""}, {"name": "distanceUnit", "type": "STRING", "description": "The unit of distance: KM | MI [default]", "default": ""}, {"name": "toCityId", "type": "STRING", "description": "The distance to this city", "default": "Q60"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Country Places", "api_description": "Get the places in the given country.", "required_parameters": [{"name": "countryId", "type": "string", "description": "", "default": "US"}], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "The maximum number of results to retrieve", "default": ""}, {"name": "languageCode", "type": "STRING", "description": "Display results in this language", "default": ""}, {"name": "hateoasMode", "type": "BOOLEAN", "description": "Include HATEOAS-style links in results", "default": ""}, {"name": "asciiMode", "type": "BOOLEAN", "description": "Display results using ASCII characters", "default": ""}, {"name": "offset", "type": "NUMBER", "description": "The zero-ary offset into the results", "default": ""}, {"name": "maxPopulation", "type": "NUMBER", "description": "Only places having no more than this population", "default": ""}, {"name": "timeZoneIds", "type": "STRING", "description": "Only places in these time-zones", "default": ""}, {"name": "types", "type": "STRING", "description": "Only cities for these types (comma-delimited): ADM2 | CITY | ISLAND", "default": ""}, {"name": "sort", "type": "STRING", "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD =  elevation | name | population", "default": ""}, {"name": "namePrefixDefaultLangResults", "type": "BOOLEAN", "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested", "default": ""}, {"name": "includeDeleted", "type": "STRING", "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE", "default": ""}, {"name": "minPopulation", "type": "NUMBER", "description": "Only places having at least this population", "default": ""}, {"name": "namePrefix", "type": "STRING", "description": "Only places whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.", "default": ""}], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm planning a solo trip to Tokyo and would like to know the three nearest cities to Tokyo. Can you provide their names, population, distance, and country? Also, find the timezone information for Tokyo.", "relevant APIs": [["Reverse Geocoding and Geolocation Service", "GetNearestCities"], ["Reverse Geocoding and Geolocation Service", "GetTimezone"], ["GeoDB Cities", "Country Places"], ["GeoDB Cities", "City Distance"]], "query_id": 5980}, {"api_list": [{"category_name": "Mapping", "tool_name": "Reverse Geocoding and Geolocation Service", "api_name": "GetLargestCities", "api_description": "Returns 5 largest cities within a given radial range with name, population, country and distance.", "required_parameters": [{"name": "latitude", "type": "NUMBER", "description": "latitude in decimal degrees (wgs84)", "default": "53.55196"}, {"name": "longitude", "type": "NUMBER", "description": "longitude in decimal degrees (wgs84)", "default": "9.98558"}, {"name": "range", "type": "NUMBER", "description": "radial lookup range in meters (max 100.000)", "default": "50000"}], "optional_parameters": [], "method": "GET", "template_response": {"City": "str", "Population": "int", "Latitude": "float", "Longitude": "float", "Country": "str", "CountryId": "str", "TimeZoneId": "str", "TimeZoneName": "str", "TimeZone_GMT_offset": "int", "LocalTimeNow": "str", "Distance": "float", "Bearing": "float", "CompassDirection": "str"}}, {"category_name": "Mapping", "tool_name": "Reverse Geocoding and Geolocation Service", "api_name": "GetNearestCities", "api_description": "Returns a readable place name as nearest 3 cities with population, country and distance based on given latitude/longitude pair.", "required_parameters": [{"name": "latitude", "type": "NUMBER", "description": "latitude in decimal degrees (wgs84)", "default": "53.55196"}, {"name": "longitude", "type": "NUMBER", "description": "longitude in decimal degrees (wgs84)", "default": "9.98558"}, {"name": "range", "type": "NUMBER", "description": "max radial range for lookup in meter (0=no range)", "default": "0"}], "optional_parameters": [], "method": "GET", "template_response": {"City": "str", "Population": "int", "Latitude": "float", "Longitude": "float", "Country": "str", "CountryId": "str", "TimeZoneId": "str", "TimeZoneName": "str", "TimeZone_GMT_offset": "int", "LocalTimeNow": "str", "Distance": "float", "Bearing": "float", "CompassDirection": "str"}}, {"category_name": "Mapping", "tool_name": "Reverse Geocoding and Geolocation Service", "api_name": "GetTimezone", "api_description": "Finds the local timezone for any given geo-location point by lat and long and returns timezone information with Timezone name, Timezone id and current local time.", "required_parameters": [{"name": "longitude", "type": "NUMBER", "description": "", "default": "-74.40753570369408"}, {"name": "latitude", "type": "NUMBER", "description": "", "default": "40.63380384389354"}], "optional_parameters": [], "method": "GET", "template_response": {"TimeZoneId": "str", "GMT_offset": "int", "TimeZoneName": "str", "LocalTime_Now": "str", "Country": "str", "CountryId": "str"}}, {"category_name": "Mapping", "tool_name": "TrueWay Geocoding", "api_name": "ReverseGeocode", "api_description": "Obtain address for location", "required_parameters": [{"name": "location", "type": "STRING", "description": "The location for which you wish to obtain the human-readable address", "default": "37.7879493,-122.3961974"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language in which to return results", "default": "en"}], "method": "GET", "template_response": {"results": [{"address": "str", "postal_code": "str", "country": "str", "region": "str", "area": "str", "locality": "str", "neighborhood": "str", "street": "str", "house": "str", "location": {"lat": "float", "lng": "float"}, "location_type": "str", "type": "str", "_list_length": 5}]}}, {"category_name": "Mapping", "tool_name": "TrueWay Geocoding", "api_name": "Geocode", "api_description": "Obtain geocoordinates for address", "required_parameters": [{"name": "address", "type": "STRING", "description": "The address that you want to geocode", "default": "505 Howard St, San Francisco"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language in which to return results", "default": "en"}, {"name": "country", "type": "STRING", "description": "The country code", "default": ""}, {"name": "bounds", "type": "STRING", "description": "The bounding box", "default": ""}], "method": "GET", "template_response": {"results": [{"address": "str", "postal_code": "str", "country": "str", "region": "str", "area": "str", "locality": "str", "neighborhood": "str", "street": "str", "house": "str", "location": {"lat": "float", "lng": "float"}, "location_type": "str", "type": "str", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Place Distance", "api_description": "Gets this place's distance to the given place.", "required_parameters": [{"name": "placeId", "type": "string", "description": "", "default": ""}], "optional_parameters": [{"name": "distanceUnit", "type": "STRING", "description": "The unit of distance: KM | MI [default]", "default": ""}, {"name": "toPlaceId", "type": "STRING", "description": "The distance to this place", "default": "Q60"}], "method": "GET", "template_response": {"errors": [{"code": "str", "message": "str", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "City Distance", "api_description": "Gets the distance to the given city.", "required_parameters": [{"name": "cityid", "type": "STRING", "description": "The city id (either native id or wikiDataId)", "default": "Q65"}], "optional_parameters": [{"name": "fromCityId", "type": "STRING", "description": "The distance from this city", "default": ""}, {"name": "distanceUnit", "type": "STRING", "description": "The unit of distance: KM | MI [default]", "default": ""}, {"name": "toCityId", "type": "STRING", "description": "The distance to this city", "default": "Q60"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Country Places", "api_description": "Get the places in the given country.", "required_parameters": [{"name": "countryId", "type": "string", "description": "", "default": "US"}], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "The maximum number of results to retrieve", "default": ""}, {"name": "languageCode", "type": "STRING", "description": "Display results in this language", "default": ""}, {"name": "hateoasMode", "type": "BOOLEAN", "description": "Include HATEOAS-style links in results", "default": ""}, {"name": "asciiMode", "type": "BOOLEAN", "description": "Display results using ASCII characters", "default": ""}, {"name": "offset", "type": "NUMBER", "description": "The zero-ary offset into the results", "default": ""}, {"name": "maxPopulation", "type": "NUMBER", "description": "Only places having no more than this population", "default": ""}, {"name": "timeZoneIds", "type": "STRING", "description": "Only places in these time-zones", "default": ""}, {"name": "types", "type": "STRING", "description": "Only cities for these types (comma-delimited): ADM2 | CITY | ISLAND", "default": ""}, {"name": "sort", "type": "STRING", "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD =  elevation | name | population", "default": ""}, {"name": "namePrefixDefaultLangResults", "type": "BOOLEAN", "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested", "default": ""}, {"name": "includeDeleted", "type": "STRING", "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE", "default": ""}, {"name": "minPopulation", "type": "NUMBER", "description": "Only places having at least this population", "default": ""}, {"name": "namePrefix", "type": "STRING", "description": "Only places whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.", "default": ""}], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm organizing a company workshop in Singapore and need to find the five largest cities within a 50 km radius of the workshop venue. Please provide their names, population, distance, and country. Additionally, find the local timezone for Singapore.", "relevant APIs": [["Reverse Geocoding and Geolocation Service", "GetLargestCities"], ["Reverse Geocoding and Geolocation Service", "GetTimezone"], ["GeoDB Cities", "Country Places"], ["GeoDB Cities", "City Distance"]], "query_id": 5983}, {"api_list": [{"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/playlist/info", "api_description": "Get playlist info.", "required_parameters": [{"name": "playlist_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/vghc3eihbsdq/sets/almost-lover"}], "optional_parameters": [], "method": "GET", "template_response": "{\"id\": \"int\", \"title\": \"str\", \"url\": \"str\", \"description\": \"str\", \"thumbnail\": \"str\", \"author\": {\"profile\": \"str\", \"username\": \"str\", \"name\": \"str\", \"urn\": \"int\"}, \"embedURL\": \"str\", \"embed\": \"NoneType\", \"genre\": \"str\", \"trackCount\": \"int\", \"tracks\": [{\"artwork_url\": \"str\", \"caption\": \"NoneType\", \"commentable\": \"bool\", \"comment_count\": \"int\", \"created_at\": \"str\", \"description\": \"str\", \"downloadable\": \"bool\", \"download_count\": \"int\", \"duration\": \"int\", \"full_duration\": \"int\", \"embeddable_by\": \"str\", \"genre\": \"str\", \"has_downloads_left\": \"bool\", \"id\": \"int\", \"kind\": \"str\", \"label_name\": \"str\", \"last_modified\": \"str\", \"license\": \"str\", \"likes_count\": \"int\", \"permalink\": \"str\", \"permalink_url\": \"str\", \"playback_count\": \"int\", \"public\": \"bool\", \"publisher_metadata\": {\"id\": \"int\", \"urn\": \"str\", \"artist\": \"str\", \"contains_music\": \"bool\", \"isrc\": \"str\", \"writer_composer\": \"str\"}, \"purchase_title\": \"NoneType\", \"purchase_url\": \"NoneType\", \"release_date\": \"NoneType\", \"reposts_count\": \"int\", \"secr"}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/user/info", "api_description": "Get basic user info", "required_parameters": [{"name": "profile_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934"}], "optional_parameters": [], "method": "GET", "template_response": {"urn": "int", "username": "str", "name": "str", "verified": "bool", "createdAt": "str", "avatarURL": "str", "profile": "str", "bannerURL": "str", "followers": "int", "following": "int", "likesCount": "int", "tracksCount": "int", "tracks": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": "str", "duration": "int", "_list_length": 3}], "likes": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": {"name": "str", "username": "str", "profile": "str"}, "_list_length": 1}]}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/song/download", "api_description": "Download one song, the result is a url which you can get the song.", "required_parameters": [{"name": "track_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934/the-phoenix"}], "optional_parameters": [], "method": "GET", "template_response": {"url": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Australia Songs", "api_description": "Provide the Australia Songs chart information", "required_parameters": [{"name": "range", "type": "STRING", "description": "", "default": "1-10"}, {"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "date format(YYYY-MM-DD)", "default": "2022-05-07"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Top Labels", "api_description": "Provide the YEAR-END Top Labels chart information\n\nIf `year` is not supplied, will default to last year.", "required_parameters": [], "optional_parameters": [{"name": "year", "type": "STRING", "description": "date format(YYYY)", "default": "2022"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Peru Songs", "api_description": "Provide the Peru Songs chart information", "required_parameters": [{"name": "range", "type": "STRING", "description": "", "default": "1-10"}, {"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "date format(YYYY-MM-DD)", "default": "2022-05-07"}], "optional_parameters": [], "method": "GET", "template_response": {"notice": "str"}}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Album", "api_description": "An album object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The Deezer album id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Genre", "api_description": "A genre object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Track", "api_description": "A track object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The track's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "SongMeanings", "api_name": "artists.search", "api_description": "Search the SongMeanings database for artist names and aliases.", "required_parameters": [{"name": "q", "type": "STRING", "description": "Query string", "default": ""}], "optional_parameters": [{"name": "page", "type": "STRING", "description": "Starting page of comments", "default": "1"}, {"name": "page_size", "type": "STRING", "description": "Set how many comments returned per page", "default": "25"}, {"name": "matchmode", "type": "STRING", "description": "Configure how matching occurs (see further parameter values)", "default": "extended"}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "SongMeanings", "api_name": "users.password.reset", "api_description": "Allows for a user to reset their password. When initiated, method will send the user an email with a link to click. The link will bring the user to desktop SongMeanings where the user will complete the password reset.", "required_parameters": [{"name": "sm_emai", "type": "STRING", "description": "The user\u2019s email address on the account to be reset.", "default": ""}], "optional_parameters": [{"name": "sm_uid", "type": "STRING", "description": "SM User ID of the user initiating the password reset request.", "default": ""}, {"name": "sm_username", "type": "STRING", "description": "SM Username of the user initiating the password reset request.", "default": ""}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "SongMeanings", "api_name": "users.favorite.get", "api_description": "Get a user\u2019s favorites by specified type.", "required_parameters": [{"name": "sm_uid", "type": "STRING", "description": "User ID to grab favorites for", "default": ""}], "optional_parameters": [{"name": "type", "type": "STRING", "description": "Type of favorites to retrieve (artists, lyrics)", "default": "lyrics"}], "method": "GET"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "songs/v2/get-details", "api_description": "Get details information of specific song", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'songs->id' field returned from .../shazam-songs/get-details endpoint", "default": "1217912247"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"data": [{"id": "str", "type": "str", "attributes": {"hasTimeSyncedLyrics": "bool", "albumName": "str", "genreNames": ["list of str with length 2"], "trackNumber": "int", "releaseDate": "str", "durationInMillis": "int", "isVocalAttenuationAllowed": "bool", "isMasteredForItunes": "bool", "isrc": "str", "artwork": {"width": "int", "url": "str", "height": "int", "textColor3": "str", "textColor2": "str", "textColor4": "str", "textColor1": "str", "bgColor": "str", "hasP3": "bool"}, "composerName": "str", "audioLocale": "str", "url": "str", "playParams": {"id": "str", "kind": "str"}, "discNumber": "int", "isAppleDigitalMaster": "bool", "hasLyrics": "bool", "audioTraits": ["list of str with length 2"], "name": "str", "previews": [{"url": "str", "_list_length": 1}], "artistName": "str"}, "relationships": {"artists": {"data": [{"id": "str", "type": "str", "_list_length": 1}]}, "albums": {"data": [{"id": "str", "type": "str", "_list_length": 1}]}}, "_list_length": 1}]}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "artists/get-latest-release", "api_description": "Get latest release of an artist", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'artist->adamid' field returned in .../search OR .../songs/v2/detect OR .../songs/get-details endpoint\nThe value of 'artists->id' field returned in .../shazam-songs/get-details OR .../albums/get-details OR .../albums/get-related-artist", "default": "567072"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"data": [{"id": "str", "type": "str", "attributes": {"copyright": "str", "genreNames": ["list of str with length 2"], "releaseDate": "str", "isMasteredForItunes": "bool", "upc": "str", "artwork": {"width": "int", "url": "str", "height": "int", "textColor3": "str", "textColor2": "str", "textColor4": "str", "textColor1": "str", "bgColor": "str", "hasP3": "bool"}, "url": "str", "playParams": {"id": "str", "kind": "str"}, "recordLabel": "str", "trackCount": "int", "isCompilation": "bool", "isPrerelease": "bool", "audioTraits": ["list of str with length 2"], "isSingle": "bool", "name": "str", "artistName": "str", "contentRating": "str", "editorialNotes": {"standard": "str", "short": "str", "tagline": "str"}, "isComplete": "bool"}, "_list_length": 1}]}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "shazam-songs/get-details", "api_description": "Get mapping id information between systems to use with other endpoints.", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'id' field returned in .../search endpoint", "default": "40333609"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 1}], \"resources\": {\"artist-highlights\": {\"73406786\": {\"id\": \"str\", \"type\": \"str\"}}, \"track-highlights\": {\"578132846\": {\"id\": \"str\", \"type\": \"str\"}}, \"related-tracks\": {\"track-similarities-id-40333609\": {\"id\": \"str\", \"type\": \"str\"}}, \"songs\": {\"1436677761\": {\"id\": \"str\", \"type\": \"str\"}}, \"albums\": {\"1436677753\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"artistName\": \"str\", \"name\": \"str\", \"releaseDate\": \"str\"}}}, \"shazam-artists\": {\"42\": {\"id\": \"str\", \"type\": \"str\"}}, \"artists\": {\"73406786\": {\"id\": \"str\", \"type\": \"str\"}}, \"shazam-songs\": {\"40333609\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"type\": \"str\", \"title\": \"str\", \"artist\": \"str\", \"primaryArtist\": \"str\", \"label\": \"str\", \"explicit\": \"bool\", \"isrc\": \"str\", \"webUrl\": \"str\", \"images\": {\"artistAvatar\": \"str\", \"coverArt\": \"str\", \"coverArtHq\": \"str\"}, \"share\": {\"subject\": \"str\", \"text\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"snapchat\": \"str\"}, \"genres\": {\"prim"}], "query": "I'm planning a road trip with my family and we need some good music to listen to. Can you suggest a playlist from Soundcloud that includes popular songs? Additionally, I want to know the basic information about a specific user on Soundcloud. Can you fetch the user's information?", "relevant APIs": [["Soundcloud", "/playlist/info"], ["Soundcloud", "/user/info"], ["Shazam", "artists/get-latest-release"], ["Shazam", "songs/v2/get-details"]], "query_id": 6068}, {"api_list": [{"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/search", "api_description": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "required_parameters": [{"name": "type", "type": "STRING", "description": "", "default": "all"}, {"name": "query", "type": "STRING", "description": "", "default": "almost lover"}], "optional_parameters": [], "method": "GET", "template_response": {"index": "int", "artist": "str", "url": "str", "itemName": "str", "name": "str", "type": "str"}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/playlist/info", "api_description": "Get playlist info.", "required_parameters": [{"name": "playlist_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/vghc3eihbsdq/sets/almost-lover"}], "optional_parameters": [], "method": "GET", "template_response": "{\"id\": \"int\", \"title\": \"str\", \"url\": \"str\", \"description\": \"str\", \"thumbnail\": \"str\", \"author\": {\"profile\": \"str\", \"username\": \"str\", \"name\": \"str\", \"urn\": \"int\"}, \"embedURL\": \"str\", \"embed\": \"NoneType\", \"genre\": \"str\", \"trackCount\": \"int\", \"tracks\": [{\"artwork_url\": \"str\", \"caption\": \"NoneType\", \"commentable\": \"bool\", \"comment_count\": \"int\", \"created_at\": \"str\", \"description\": \"str\", \"downloadable\": \"bool\", \"download_count\": \"int\", \"duration\": \"int\", \"full_duration\": \"int\", \"embeddable_by\": \"str\", \"genre\": \"str\", \"has_downloads_left\": \"bool\", \"id\": \"int\", \"kind\": \"str\", \"label_name\": \"str\", \"last_modified\": \"str\", \"license\": \"str\", \"likes_count\": \"int\", \"permalink\": \"str\", \"permalink_url\": \"str\", \"playback_count\": \"int\", \"public\": \"bool\", \"publisher_metadata\": {\"id\": \"int\", \"urn\": \"str\", \"artist\": \"str\", \"contains_music\": \"bool\", \"isrc\": \"str\", \"writer_composer\": \"str\"}, \"purchase_title\": \"NoneType\", \"purchase_url\": \"NoneType\", \"release_date\": \"NoneType\", \"reposts_count\": \"int\", \"secr"}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/song/info", "api_description": "Get basic information of a song.", "required_parameters": [{"name": "track_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934/the-phoenix"}], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "description": "str", "thumbnail": "str", "url": "str", "duration": "int", "playCount": "str", "commentsCount": "str", "likes": "str", "genre": "str", "author": {"name": "str", "username": "str", "url": "str", "avatarURL": "str", "urn": "int", "verified": "bool", "followers": "int", "following": "int"}, "publishedAt": "str", "embedURL": "str", "embed": {"version": "int", "type": "str", "provider_name": "str", "provider_url": "str", "height": "int", "width": "str", "title": "str", "description": "str", "thumbnail_url": "str", "html": "str", "author_name": "str", "author_url": "str"}, "track": {"hls": "str", "progressive": "str"}, "trackURL": "str", "comments": [{"text": "str", "createdAt": "str", "author": {"name": "str", "username": "str", "url": "str"}, "_list_length": 28}], "streamURL": "str"}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "charts/track", "api_description": "Get all popular songs in specific chart", "required_parameters": [], "optional_parameters": [{"name": "listId", "type": "STRING", "description": "The value of listId field returned in .../charts/list endpoint", "default": ""}, {"name": "pageSize", "type": "NUMBER", "description": "Used for paging purpose, 20 items per response is maximum.", "default": "20"}, {"name": "startFrom", "type": "NUMBER", "description": "Used for paging purpose.", "default": "0"}, {"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"properties\": {}, \"tracks\": [{\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 1}], \"explicit\": \"bool\", \"displayname\": \"str\"}, \"artists\": [{\"alias\": \"str\", \"id\": \"str\", \"adamid\": \"str\", \"_list_length\": 1}], \"url\": \"str\", \"highlightsurls\": {\"artisthighlightsurl\": \"str\", \"trackhighlighturl\": \"str\"}, \"prope"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "albums/get-related-artist", "api_description": "Get artist related to an album", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'albums->id' field returned in .../shazam-songs/get-details OR .../artists/get-albums OR .../artists/get-summary\nThe value of 'id' field returned in .../artists/get-albums OR .../artists/get-latest-release endpoint\nThe value of 'albumadamid' field returned in .../songs/v2/detect OR .../songs/detect endpoint", "default": "850569437"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"data": [{"id": "str", "type": "str", "attributes": {"genreNames": ["list of str with length 1"], "name": "str", "editorialNotes": {"name": "str", "standard": "str", "short": "str"}, "artwork": {"width": "int", "url": "str", "height": "int", "textColor3": "str", "textColor2": "str", "textColor4": "str", "textColor1": "str", "bgColor": "str", "hasP3": "bool"}, "url": "str"}, "relationships": {"albums": {"data": [{"id": "str", "type": "str", "_list_length": 25}]}}, "_list_length": 1}]}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "search", "api_description": "Search for songs, artists that match input term", "required_parameters": [{"name": "term", "type": "STRING", "description": "Full name of songs or artists", "default": "kiss the rain"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}, {"name": "limit", "type": "NUMBER", "description": "For paging purpose, maximum is fixed at 5 items per response", "default": "5"}, {"name": "offset", "type": "NUMBER", "description": "For paging purpose", "default": "0"}], "method": "GET", "template_response": "{\"tracks\": {\"hits\": [{\"track\": {\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 2}], \"providers\": [{\"caption\": \"str\", \"images\": {\"overflow\": \"str\", \"default\": \"str\"}, \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}], \"type\": \"str\", \"_list_length\": 2}], \"explicit\": \"bool\", \"dis"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Genre", "api_description": "A genre object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Artist", "api_description": "An artist object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The artist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "* Search", "api_description": "Search tracks", "required_parameters": [{"name": "q", "type": "STRING", "description": "", "default": "eminem"}], "optional_parameters": [], "method": "GET"}], "query": "I'm organizing a family gathering and I want to create a playlist that caters to everyone's musical preferences. Can you suggest a diverse playlist with tracks from various genres? It would be helpful if you could provide information about the artists and their respective genres as well. I want to make sure everyone has a great time!", "relevant APIs": [["Soundcloud", "/search"], ["Soundcloud", "/playlist/info"], ["Soundcloud", "/song/info"], ["Shazam", "charts/track"], ["Shazam", "albums/get-related-artist"], ["Deezer", "* Search"], ["Deezer", "Genre"], ["Deezer", "Artist"]], "query_id": 6144}, {"api_list": [{"category_name": "Financial", "tool_name": "QuantaEx Market Data", "api_name": "24 Hours Tickers", "api_description": "24 hours trading data", "required_parameters": [], "optional_parameters": [{"name": "quantaex.com", "type": "STRING", "description": "", "default": ""}], "method": "GET"}, {"category_name": "Finance", "tool_name": "Stock and Options Trading Data Provider", "api_name": "Options", "api_description": "Stock and Options Data", "required_parameters": [{"name": "ticker", "type": "STRING", "description": "A ticker for U.S. Trading Stocks and ETF", "default": "aapl"}], "optional_parameters": [], "method": "GET", "template_response": "{\"stock\": {\"avgTotalVolume\": \"int\", \"calculationPrice\": \"str\", \"close\": \"float\", \"closeSource\": \"str\", \"closeTime\": \"int\", \"currency\": \"str\", \"delayedPrice\": \"NoneType\", \"delayedPriceTime\": \"NoneType\", \"extendedChange\": \"NoneType\", \"extendedChangePercent\": \"NoneType\", \"extendedPrice\": \"NoneType\", \"extendedPriceTime\": \"NoneType\", \"highSource\": \"NoneType\", \"highTime\": \"NoneType\", \"lastTradeTime\": \"int\", \"latestSource\": \"str\", \"latestTime\": \"str\", \"latestUpdate\": \"int\", \"latestVolume\": \"int\", \"lowSource\": \"NoneType\", \"lowTime\": \"NoneType\", \"marketCap\": \"int\", \"oddLotDelayedPrice\": \"NoneType\", \"oddLotDelayedPriceTime\": \"NoneType\", \"open\": \"NoneType\", \"openTime\": \"int\", \"openSource\": \"str\", \"peRatio\": \"float\", \"previousVolume\": \"int\", \"primaryExchange\": \"str\", \"symbol\": \"str\", \"volume\": \"int\", \"week52High\": \"float\", \"week52Low\": \"float\", \"ytdChange\": \"float\", \"isUSMarketOpen\": \"bool\", \"shortName\": \"str\", \"regularMarketPrice\": \"float\", \"regularMarketOpen\": \"float\", \"regularMarketDayHigh\": \"N"}, {"category_name": "Finance", "tool_name": "Stock and Options Trading Data Provider", "api_name": "Straddle", "api_description": "Straddle Format", "required_parameters": [{"name": "ticker", "type": "STRING", "description": "Ticker for Intel Stock", "default": "intc"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Investors Exchange (IEX) Trading", "api_name": "IEX Short Interest List", "api_description": "Consolidated market short interest positions in all IEX-listed securities", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "", "default": "GOOG"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Investors Exchange (IEX) Trading", "api_name": "OHLC", "api_description": "Returns the official open and close for a give symbol.", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "Specify stock symbol or use \"market\" for market-wide information", "default": "qcom"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Investors Exchange (IEX) Trading", "api_name": "Effective Spread", "api_description": "Returns an array of effective spread, eligible volume, and price improvement of a stock, by market.", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "", "default": "msft"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/parent/get-morningstar-rating", "api_description": "Get Morningstar's rating as displayed in the Parent tab", "required_parameters": [{"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}, {"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "{type}/portfolio/get-coupon-range", "api_description": "Get coupon range as displayed in the Portfolio tab", "required_parameters": [{"name": "type", "type": "string", "description": "One of the following values : etf|fund", "default": "etf"}, {"name": "securityId", "type": "STRING", "description": "The value of securityId field returned in .../market/v2/get-returns", "default": "F00000O2CG"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Morning Star", "api_name": "news/list", "api_description": "List latest news", "required_parameters": [{"name": "performanceId", "type": "STRING", "description": "Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints", "default": "0P0000OQN8"}], "optional_parameters": [], "method": "GET"}], "query": "My friends and I are planning a hiking trip to the Grand Canyon. Can you recommend some nearby hotels with good ratings and reviews? Additionally, provide us with the options and effective spreads for trading stocks of Apple Inc.", "relevant APIs": [["QuantaEx Market Data", "24 Hours Tickers"], ["Stock and Options Trading Data Provider", "Options"], ["Investors Exchange (IEX) Trading", "Effective Spread"]], "query_id": 6344}, {"api_list": [{"category_name": "Gaming", "tool_name": "Trivia by API-Ninjas", "api_name": "/v1/trivia", "api_description": "API Ninjas Trivia API endpoint", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}, {"name": "category", "type": "STRING", "description": "Category of trivia. Possible values are: \n\n**artliterature\nlanguage\nsciencenature\ngeneral\nfooddrink\npeopleplaces\ngeography\nhistoryholidays\nentertainment\ntoysgames\nmusic\nmathematics\nreligionmythology\nsportsleisure**", "default": ""}], "method": "GET", "template_response": {"category": "str", "question": "str", "answer": "str"}}, {"category_name": "Media", "tool_name": "Music Trivia", "api_name": "/getgamelevel", "api_description": "get a game level with a level parameter. The level this does not imply difficulty", "required_parameters": [], "optional_parameters": [{"name": "level", "type": "NUMBER", "description": "paginated level", "default": ""}, {"name": "output", "type": "STRING", "description": "set output format type , 'xml' or 'json'", "default": ""}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get math fact", "api_description": "Get a mathematical property about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "1729"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get trivia fact", "api_description": "Get a trivia fact about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "42"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "notfound", "type": "STRING", "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).", "default": "floor"}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get year fact", "api_description": "Get a fact about a year", "required_parameters": [{"name": "year", "type": "STRING", "description": "The year of interest", "default": "1492"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}], "query": "I'm preparing a presentation on famous events in history and I need some interesting facts. Can you give me a trivia fact about the year 1492 and a Chuck Norris joke to entertain the audience? Also, fetch me a trivia question from the 'geography' category.", "relevant APIs": [["Numbers", "Get year fact"], ["Chuck Norris", "/jokes/random"], ["Trivia by API-Ninjas", "/v1/trivia"]], "query_id": 6436}, {"api_list": [{"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Gaming", "tool_name": "Trivia by API-Ninjas", "api_name": "/v1/trivia", "api_description": "API Ninjas Trivia API endpoint", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}, {"name": "category", "type": "STRING", "description": "Category of trivia. Possible values are: \n\n**artliterature\nlanguage\nsciencenature\ngeneral\nfooddrink\npeopleplaces\ngeography\nhistoryholidays\nentertainment\ntoysgames\nmusic\nmathematics\nreligionmythology\nsportsleisure**", "default": ""}], "method": "GET", "template_response": {"category": "str", "question": "str", "answer": "str"}}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get trivia fact", "api_description": "Get a trivia fact about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "42"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "notfound", "type": "STRING", "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).", "default": "floor"}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get year fact", "api_description": "Get a fact about a year", "required_parameters": [{"name": "year", "type": "STRING", "description": "The year of interest", "default": "1492"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get math fact", "api_description": "Get a mathematical property about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "1729"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Media", "tool_name": "Music Trivia", "api_name": "/getgamelevel", "api_description": "get a game level with a level parameter. The level this does not imply difficulty", "required_parameters": [], "optional_parameters": [{"name": "level", "type": "NUMBER", "description": "paginated level", "default": ""}, {"name": "output", "type": "STRING", "description": "set output format type , 'xml' or 'json'", "default": ""}], "method": "GET"}], "query": "Can you find a Chuck Norris joke that mentions the word 'programming' and provide a trivia fact about the year 1492? Also, give me a random trivia question from the gaming category.", "relevant APIs": [["Chuck Norris", "/jokes/search"], ["Numbers", "Get year fact"], ["Trivia by API-Ninjas", "/v1/trivia"]], "query_id": 6446}, {"api_list": [{"category_name": "Music", "tool_name": "Shazam", "api_name": "songs/list-artist-top-tracks (Deprecated)", "api_description": "List top tracks of specific artist", "required_parameters": [{"name": "id", "type": "STRING", "description": "The id field inside artists json object returned from .../songs/detect or .../search endpoint", "default": "40008598"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"tracks\": [{\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 2}], \"providers\": [{\"caption\": \"str\", \"images\": {\"overflow\": \"str\", \"default\": \"str\"}, \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}], \"type\": \"str\", \"_list_length\": 2}], \"explicit\": \"bool\", \"displayname\": \"str\"}, "}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "shazam-songs/list-similarities", "api_description": "Get similar (You may also like) songs", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'related-tracks->id' field returned in .../shazam-songs/get-details endpoint", "default": "track-similarities-id-424767377"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 1}], \"resources\": {\"shazam-song-lists\": {\"track-similarities-id-424767377\": {\"id\": \"str\", \"type\": \"str\", \"relationships\": {\"tracks\": {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 20}]}}}}, \"albums\": {\"1533678938\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"artistName\": \"str\", \"name\": \"str\", \"releaseDate\": \"str\"}}, \"1387814084\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"artistName\": \"str\", \"name\": \"str\", \"releaseDate\": \"str\"}}, \"793285794\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"artistName\": \"str\", \"name\": \"str\", \"releaseDate\": \"str\"}}, \"1530573299\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"artistName\": \"str\", \"name\": \"str\", \"releaseDate\": \"str\"}}, \"850585388\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"artistName\": \"str\", \"name\": \"str\", \"releaseDate\": \"str\"}}, \"1505862984\": {\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"artistName\": \"str\", \"name\": \"str\", \"releaseDate\": \"str\"}}, \"1217911994\": {\"id\": \"str\", \"t"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "charts/list", "api_description": "List all available charts by cities, countries, and genres", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"countries": [{"id": "str", "listid": "str", "momentum_listid": "str", "name": "str", "cities": [{"id": "str", "name": "str", "countryid": "str", "listid": "str", "_list_length": 50}], "genres": [{"id": "str", "countryid": "str", "listid": "str", "name": "str", "urlPath": "str", "count": "int", "_list_length": 3}], "_list_length": 54}], "global": {"genres": [{"id": "str", "listid": "str", "name": "str", "urlPath": "str", "count": "int", "_list_length": 18}]}}}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "* Search", "api_description": "Search tracks", "required_parameters": [{"name": "q", "type": "STRING", "description": "", "default": "eminem"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Editorial", "api_description": "An editorial object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Infos", "api_description": "Get the infos about the api in the current country", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/user/info", "api_description": "Get basic user info", "required_parameters": [{"name": "profile_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934"}], "optional_parameters": [], "method": "GET", "template_response": {"urn": "int", "username": "str", "name": "str", "verified": "bool", "createdAt": "str", "avatarURL": "str", "profile": "str", "bannerURL": "str", "followers": "int", "following": "int", "likesCount": "int", "tracksCount": "int", "tracks": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": "str", "duration": "int", "_list_length": 3}], "likes": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": {"name": "str", "username": "str", "profile": "str"}, "_list_length": 1}]}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/song/info", "api_description": "Get basic information of a song.", "required_parameters": [{"name": "track_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934/the-phoenix"}], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "description": "str", "thumbnail": "str", "url": "str", "duration": "int", "playCount": "str", "commentsCount": "str", "likes": "str", "genre": "str", "author": {"name": "str", "username": "str", "url": "str", "avatarURL": "str", "urn": "int", "verified": "bool", "followers": "int", "following": "int"}, "publishedAt": "str", "embedURL": "str", "embed": {"version": "int", "type": "str", "provider_name": "str", "provider_url": "str", "height": "int", "width": "str", "title": "str", "description": "str", "thumbnail_url": "str", "html": "str", "author_name": "str", "author_url": "str"}, "track": {"hls": "str", "progressive": "str"}, "trackURL": "str", "comments": [{"text": "str", "createdAt": "str", "author": {"name": "str", "username": "str", "url": "str"}, "_list_length": 28}], "streamURL": "str"}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/search", "api_description": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "required_parameters": [{"name": "type", "type": "STRING", "description": "", "default": "all"}, {"name": "query", "type": "STRING", "description": "", "default": "almost lover"}], "optional_parameters": [], "method": "GET", "template_response": {"index": "int", "artist": "str", "url": "str", "itemName": "str", "name": "str", "type": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Iceland Songs", "api_description": "Provide the Iceland Songs chart information", "required_parameters": [{"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "date format(YYYY-MM-DD)", "default": "2022-05-07"}, {"name": "range", "type": "STRING", "description": "", "default": "1-10"}], "optional_parameters": [], "method": "GET", "template_response": {"notice": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "India Songs", "api_description": "Provide the India Songs chart information", "required_parameters": [{"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "date format(YYYY-MM-DD)", "default": "2022-05-07"}, {"name": "range", "type": "STRING", "description": "", "default": "1-10"}], "optional_parameters": [], "method": "GET", "template_response": {"notice": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Finland Songs", "api_description": "Provide the Finland Songs chart information", "required_parameters": [{"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "date format(YYYY-MM-DD)", "default": "2022-05-07"}, {"name": "range", "type": "STRING", "description": "", "default": "1-10"}], "optional_parameters": [], "method": "GET", "template_response": {"notice": "str"}}, {"category_name": "Music", "tool_name": "View Song", "api_name": "View song_copy", "api_description": "View song", "required_parameters": [{"name": "https_only", "type": "STRING", "description": "", "default": "1"}, {"name": "wmid", "type": "STRING", "description": "", "default": "161445361"}, {"name": "songid", "type": "STRING", "description": "", "default": "ttEleQJoxgCuNOIbUuRh7Q=="}, {"name": "s", "type": "STRING", "description": "", "default": "fe7cc2de3cfcc4efd457838a9521e7e9"}, {"name": "song_preview_kbps", "type": "STRING", "description": "", "default": "320"}, {"name": "lang", "type": "STRING", "description": "", "default": "id"}, {"name": "country", "type": "STRING", "description": "", "default": "id"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Music", "tool_name": "View Song", "api_name": "View song", "api_description": "View song", "required_parameters": [{"name": "country", "type": "STRING", "description": "", "default": "id"}, {"name": "song_preview_kbps", "type": "STRING", "description": "", "default": "320"}, {"name": "https_only", "type": "STRING", "description": "", "default": "1"}, {"name": "wmid", "type": "STRING", "description": "", "default": "161445361"}, {"name": "songid", "type": "STRING", "description": "", "default": "ttEleQJoxgCuNOIbUuRh7Q=="}, {"name": "lang", "type": "STRING", "description": "", "default": "id"}, {"name": "s", "type": "STRING", "description": "", "default": "fe7cc2de3cfcc4efd457838a9521e7e9"}], "optional_parameters": [], "method": "GET"}], "query": "I'm hosting a karaoke night and I need a list of popular songs that people can sing along to. Can you suggest some well-known songs by a specific artist? Also, provide me with similar songs that are crowd favorites.", "relevant APIs": [["Shazam", "songs/list-artist-top-tracks (Deprecated)"], ["Shazam", "shazam-songs/list-similarities"], ["Deezer", "* Search"]], "query_id": 6522}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Track", "api_description": "A track object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The track's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Artist", "api_description": "An artist object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The artist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Comment", "api_description": "A comment object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/search", "api_description": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "required_parameters": [{"name": "type", "type": "STRING", "description": "", "default": "all"}, {"name": "query", "type": "STRING", "description": "", "default": "almost lover"}], "optional_parameters": [], "method": "GET", "template_response": {"index": "int", "artist": "str", "url": "str", "itemName": "str", "name": "str", "type": "str"}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/playlist/info", "api_description": "Get playlist info.", "required_parameters": [{"name": "playlist_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/vghc3eihbsdq/sets/almost-lover"}], "optional_parameters": [], "method": "GET", "template_response": "{\"id\": \"int\", \"title\": \"str\", \"url\": \"str\", \"description\": \"str\", \"thumbnail\": \"str\", \"author\": {\"profile\": \"str\", \"username\": \"str\", \"name\": \"str\", \"urn\": \"int\"}, \"embedURL\": \"str\", \"embed\": \"NoneType\", \"genre\": \"str\", \"trackCount\": \"int\", \"tracks\": [{\"artwork_url\": \"str\", \"caption\": \"NoneType\", \"commentable\": \"bool\", \"comment_count\": \"int\", \"created_at\": \"str\", \"description\": \"str\", \"downloadable\": \"bool\", \"download_count\": \"int\", \"duration\": \"int\", \"full_duration\": \"int\", \"embeddable_by\": \"str\", \"genre\": \"str\", \"has_downloads_left\": \"bool\", \"id\": \"int\", \"kind\": \"str\", \"label_name\": \"str\", \"last_modified\": \"str\", \"license\": \"str\", \"likes_count\": \"int\", \"permalink\": \"str\", \"permalink_url\": \"str\", \"playback_count\": \"int\", \"public\": \"bool\", \"publisher_metadata\": {\"id\": \"int\", \"urn\": \"str\", \"artist\": \"str\", \"contains_music\": \"bool\", \"isrc\": \"str\", \"writer_composer\": \"str\"}, \"purchase_title\": \"NoneType\", \"purchase_url\": \"NoneType\", \"release_date\": \"NoneType\", \"reposts_count\": \"int\", \"secr"}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/song/download", "api_description": "Download one song, the result is a url which you can get the song.", "required_parameters": [{"name": "track_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934/the-phoenix"}], "optional_parameters": [], "method": "GET", "template_response": {"url": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Top Artists - Duo/Group", "api_description": "Provide the YEAR-END Top Artists - Duo/Group chart information\n\nIf `year` is not supplied, will default to last year.", "required_parameters": [], "optional_parameters": [{"name": "year", "type": "STRING", "description": "date format(YYYY)", "default": "2022"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Hot 100 Songs by Women", "api_description": "Provide the Greatest of All Time Hot 100 Songs by Women chart information", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Pop Songs Artists", "api_description": "Provide the Greatest of All Time Pop Songs Artists chart information", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm planning a family gathering and we need some good music to set the mood. Can you suggest the top duo/group artists of the year for a lively playlist? Additionally, we would like to download a song for each artist on the list. Thank you!", "relevant APIs": [["Billboard-API", "Top Artists - Duo/Group"], ["Soundcloud", "/search"], ["Soundcloud", "/song/download"]], "query_id": 6549}, {"api_list": [{"category_name": "Data", "tool_name": "Socialgrep", "api_name": "Post search", "api_description": "Searches Reddit posts.", "required_parameters": [{"name": "query", "type": "STRING", "description": "The comma-separated query for the search. Supports the following term types:\n\n`site:{site_name}` - search only posts where the domain matches {site_name}.\n\n`-site:{site_name}` - search only posts where the domain does not match {site_name}.\n\n`/r/{subreddit}` - search only posts from the subreddit {subreddit}.\n\n`-/r/{subreddit}` - search only posts not from the subreddit {subreddit}.\n\n`{term}` - search only posts with titles containing the term {term}.\n\n`-{term}` - search only posts with titles not containing the term {term}.\n\n`score:{score}` - search only posts with score at least {score}.\n\n`before:{YYYY-mm-dd}`, `after:{YYYY-mm-dd}` - search only posts within the date range. `before` is inclusive, `after` is not.", "default": "/r/funny,cat"}], "optional_parameters": [{"name": "after", "type": "NUMBER", "description": "The previous result's `sort_key` value. Used for pagination.", "default": ""}], "method": "GET", "template_response": {"type": "str", "data": [{"type": "str", "id": "str", "subreddit": {"id": "str", "name": "str", "nsfw": "bool"}, "created_utc": "int", "permalink": "str", "domain": "str", "title": "str", "selftext": "NoneType", "url": "str", "score": "int", "_list_length": 25}], "total_count": "int", "query": "str", "sort_key": ["list of list with length 1"]}}, {"category_name": "Data", "tool_name": "Socialgrep", "api_name": "Comment search", "api_description": "Searches Reddit comments.", "required_parameters": [{"name": "query", "type": "STRING", "description": "The comma-separated query for the search. Supports the following term types:\n\n`/r/{subreddit}` - search only comments from the subreddit {subreddit}.\n\n`-/r/{subreddit}` - search only comments not from the subreddit {subreddit}.\n\n`{term}` - search only comments containing the term {term}.\n\n`-{term}` - search only comments not containing the term {term}.\n\n`score:{score}` - search only comments with score at least {score}.\n\n`before:{YYYY-mm-dd}`, `after:{YYYY-mm-dd}` - search only comments within the date range. `before` is inclusive, `after` is not.\n\n`post:{post_id}` - search only comments for the given post.", "default": "/r/funny,cat"}], "optional_parameters": [{"name": "after", "type": "NUMBER", "description": "The previous result's `sort_key` value. Used for pagination.", "default": ""}], "method": "GET", "template_response": {"type": "str", "data": [{"type": "str", "id": "str", "subreddit": {"id": "str", "name": "str", "nsfw": "bool"}, "created_utc": "int", "permalink": "str", "body": "str", "sentiment": "int", "score": "int", "_list_length": 25}], "total_count": "int", "query": "str", "sort_key": ["list of list with length 1"]}}, {"category_name": "Entertainment", "tool_name": "Programming Memes Reddit", "api_name": "Get All Memes", "api_description": "Gets all memes", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Comments By Username", "api_description": "Comments By Username", "required_parameters": [{"name": "sort", "type": "STRING", "description": "you can just send `new `or `hot`", "default": "hot"}, {"name": "username", "type": "STRING", "description": "", "default": "GoldenChrysus"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"NoneType\", \"comments\": [{\"author\": \"str\", \"authorId\": \"str\", \"collapsed\": \"bool\", \"collapsedReason\": \"NoneType\", \"collapsedBecauseCrowdControl\": \"NoneType\", \"collapsedReasonCode\": \"NoneType\", \"created\": \"float\", \"depth\": \"NoneType\", \"deletedBy\": \"NoneType\", \"distinguishType\": \"NoneType\", \"editedAt\": \"NoneType\", \"gildings\": \"NoneType\", \"goldCount\": \"int\", \"id\": \"str\", \"isAdmin\": \"bool\", \"isDeleted\": \"bool\", \"isGildable\": \"bool\", \"isLocked\": \"bool\", \"isMod\": \"bool\", \"isOp\": \"bool\", \"isSaved\": \"bool\", \"isStickied\": \"bool\", \"isScoreHidden\": \"bool\", \"next\": \"NoneType\", \"parentId\": \"NoneType\", \"permalink\": \"str\", \"prev\": \"NoneType\", \"postAuthor\": \"str\", \"postId\": \"str\", \"postTitle\": \"str\", \"score\": \"int\", \"sendReplies\": \"bool\", \"subredditId\": \"str\", \"voteState\": \"int\", \"media\": {\"richtextContent\": {\"document\": [{\"c\": [{\"e\": \"str\", \"u\": \"str\", \"t\": \"str\", \"_list_length\": 1}], \"e\": \"str\", \"_list_length\": 1}]}, \"type\": \"str\", \"rteMode\": \"str\"}, \"profileIm"}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Posts By Username", "api_description": "Posts By Username", "required_parameters": [{"name": "username", "type": "STRING", "description": "", "default": "GoldenChrysus"}, {"name": "sort", "type": "STRING", "description": "you can just send `new `or `hot`", "default": "new"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": \"NoneType\", \"postCategories\": \"NoneType\", \"suggestedSort\": \"NoneType\", \"belongsTo\": {\"id\": \"str\", \"type\": \"str\"}, \"flair\": \"empty list\", \"hidden\": \"bool\", \"saved\": \"bool\", \"isGildable\": \"bool\", \"isMediaOnly\": \"bool\", \"isSponsored\": \"bool\", \"isNSFW\": \"bool\", \"isMeta\": \"bool\", \"isSpoiler\": \"bool\", \"isBlank\": \"bool\", \"sendReplies\": \"bool\", \"voteState\": \"int\", \"permalink\": \"str\", \"events\": \"empty list\", \"eventsOnRender\": \"empty list\", \""}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Rising Popular Posts", "api_description": "Rising Popular Posts", "required_parameters": [], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"int\", \"height\": \"int\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": \"NoneType\", \"postCategories\": \"NoneType\", \"suggestedSort\": \"NoneType\", \"belongsTo\": {\"id\": \"str\", \"type\": \"str\"}, \"flair\": [{\"text\": \"str\", \"type\": \"str\", \"textColor\": \"str\", \"backgroundColor\": \"str\", \"templateId\": \"str\", \"_list_length\": 1}], \"hidden\": \"bool\", \"saved\": \"bool\", \"isGildable\": \"bool\", \"isMediaOnly\": \"bool\", \"isSponsored\": \"bool\", \"isNSFW\": \"bool\", \"isMeta\": \"bool\", \"isSpoiler\": \"bool\", \"isBlank\": \"bool\", \"sendReplies\": \"bool\", \""}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "Check usernames on all Platforms", "api_description": "Check if a username is available on all platforms at once!\ntrue if available, false if not", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "Dockerhub", "api_description": "Check username on Dockerhub", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "Tumblr", "api_description": "Check username on Tumblr", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm a developer and I want to integrate Reddit data into my application. Can you provide me with the latest posts and comments made by a specific user using the Reddit API? Additionally, show me some rising popular posts from Reddit and provide me with the latest memes from the Programming Memes Reddit API.", "relevant APIs": [["Reddit", "Comments By Username"], ["Reddit", "Posts By Username"], ["Reddit", "Rising Popular Posts"], ["Programming Memes Reddit", "Get All Memes"]], "query_id": 6719}, {"api_list": [{"category_name": "Data", "tool_name": "Socialgrep", "api_name": "Post search", "api_description": "Searches Reddit posts.", "required_parameters": [{"name": "query", "type": "STRING", "description": "The comma-separated query for the search. Supports the following term types:\n\n`site:{site_name}` - search only posts where the domain matches {site_name}.\n\n`-site:{site_name}` - search only posts where the domain does not match {site_name}.\n\n`/r/{subreddit}` - search only posts from the subreddit {subreddit}.\n\n`-/r/{subreddit}` - search only posts not from the subreddit {subreddit}.\n\n`{term}` - search only posts with titles containing the term {term}.\n\n`-{term}` - search only posts with titles not containing the term {term}.\n\n`score:{score}` - search only posts with score at least {score}.\n\n`before:{YYYY-mm-dd}`, `after:{YYYY-mm-dd}` - search only posts within the date range. `before` is inclusive, `after` is not.", "default": "/r/funny,cat"}], "optional_parameters": [{"name": "after", "type": "NUMBER", "description": "The previous result's `sort_key` value. Used for pagination.", "default": ""}], "method": "GET", "template_response": {"type": "str", "data": [{"type": "str", "id": "str", "subreddit": {"id": "str", "name": "str", "nsfw": "bool"}, "created_utc": "int", "permalink": "str", "domain": "str", "title": "str", "selftext": "NoneType", "url": "str", "score": "int", "_list_length": 25}], "total_count": "int", "query": "str", "sort_key": ["list of list with length 1"]}}, {"category_name": "Data", "tool_name": "Socialgrep", "api_name": "Comment search", "api_description": "Searches Reddit comments.", "required_parameters": [{"name": "query", "type": "STRING", "description": "The comma-separated query for the search. Supports the following term types:\n\n`/r/{subreddit}` - search only comments from the subreddit {subreddit}.\n\n`-/r/{subreddit}` - search only comments not from the subreddit {subreddit}.\n\n`{term}` - search only comments containing the term {term}.\n\n`-{term}` - search only comments not containing the term {term}.\n\n`score:{score}` - search only comments with score at least {score}.\n\n`before:{YYYY-mm-dd}`, `after:{YYYY-mm-dd}` - search only comments within the date range. `before` is inclusive, `after` is not.\n\n`post:{post_id}` - search only comments for the given post.", "default": "/r/funny,cat"}], "optional_parameters": [{"name": "after", "type": "NUMBER", "description": "The previous result's `sort_key` value. Used for pagination.", "default": ""}], "method": "GET", "template_response": {"type": "str", "data": [{"type": "str", "id": "str", "subreddit": {"id": "str", "name": "str", "nsfw": "bool"}, "created_utc": "int", "permalink": "str", "body": "str", "sentiment": "int", "score": "int", "_list_length": 25}], "total_count": "int", "query": "str", "sort_key": ["list of list with length 1"]}}, {"category_name": "Entertainment", "tool_name": "Programming Memes Reddit", "api_name": "Get All Memes", "api_description": "Gets all memes", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Comments By Username", "api_description": "Comments By Username", "required_parameters": [{"name": "sort", "type": "STRING", "description": "you can just send `new `or `hot`", "default": "hot"}, {"name": "username", "type": "STRING", "description": "", "default": "GoldenChrysus"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"NoneType\", \"comments\": [{\"author\": \"str\", \"authorId\": \"str\", \"collapsed\": \"bool\", \"collapsedReason\": \"NoneType\", \"collapsedBecauseCrowdControl\": \"NoneType\", \"collapsedReasonCode\": \"NoneType\", \"created\": \"float\", \"depth\": \"NoneType\", \"deletedBy\": \"NoneType\", \"distinguishType\": \"NoneType\", \"editedAt\": \"NoneType\", \"gildings\": \"NoneType\", \"goldCount\": \"int\", \"id\": \"str\", \"isAdmin\": \"bool\", \"isDeleted\": \"bool\", \"isGildable\": \"bool\", \"isLocked\": \"bool\", \"isMod\": \"bool\", \"isOp\": \"bool\", \"isSaved\": \"bool\", \"isStickied\": \"bool\", \"isScoreHidden\": \"bool\", \"next\": \"NoneType\", \"parentId\": \"NoneType\", \"permalink\": \"str\", \"prev\": \"NoneType\", \"postAuthor\": \"str\", \"postId\": \"str\", \"postTitle\": \"str\", \"score\": \"int\", \"sendReplies\": \"bool\", \"subredditId\": \"str\", \"voteState\": \"int\", \"media\": {\"richtextContent\": {\"document\": [{\"c\": [{\"e\": \"str\", \"u\": \"str\", \"t\": \"str\", \"_list_length\": 1}], \"e\": \"str\", \"_list_length\": 1}]}, \"type\": \"str\", \"rteMode\": \"str\"}, \"profileIm"}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Posts By Username", "api_description": "Posts By Username", "required_parameters": [{"name": "username", "type": "STRING", "description": "", "default": "GoldenChrysus"}, {"name": "sort", "type": "STRING", "description": "you can just send `new `or `hot`", "default": "new"}], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": \"NoneType\", \"postCategories\": \"NoneType\", \"suggestedSort\": \"NoneType\", \"belongsTo\": {\"id\": \"str\", \"type\": \"str\"}, \"flair\": \"empty list\", \"hidden\": \"bool\", \"saved\": \"bool\", \"isGildable\": \"bool\", \"isMediaOnly\": \"bool\", \"isSponsored\": \"bool\", \"isNSFW\": \"bool\", \"isMeta\": \"bool\", \"isSpoiler\": \"bool\", \"isBlank\": \"bool\", \"sendReplies\": \"bool\", \"voteState\": \"int\", \"permalink\": \"str\", \"events\": \"empty list\", \"eventsOnRender\": \"empty list\", \""}, {"category_name": "Social", "tool_name": "Reddit", "api_name": "Rising Popular Posts", "api_description": "Rising Popular Posts", "required_parameters": [], "optional_parameters": [{"name": "cursor", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": "{\"success\": \"bool\", \"data\": {\"cursor\": \"str\", \"posts\": [{\"id\": \"str\", \"numComments\": \"int\", \"created\": \"int\", \"score\": \"int\", \"distinguishType\": \"NoneType\", \"isLocked\": \"bool\", \"isStickied\": \"bool\", \"thumbnail\": {\"url\": \"str\", \"width\": \"int\", \"height\": \"int\"}, \"title\": \"str\", \"author\": \"str\", \"authorId\": \"str\", \"authorIsBlocked\": \"bool\", \"domain\": \"str\", \"postId\": \"str\", \"upvoteRatio\": \"float\", \"numDuplicates\": \"NoneType\", \"discussionType\": \"NoneType\", \"viewCount\": \"int\", \"goldCount\": \"int\", \"isArchived\": \"bool\", \"contestMode\": \"bool\", \"gildings\": \"NoneType\", \"postCategories\": \"NoneType\", \"suggestedSort\": \"NoneType\", \"belongsTo\": {\"id\": \"str\", \"type\": \"str\"}, \"flair\": [{\"text\": \"str\", \"type\": \"str\", \"textColor\": \"str\", \"backgroundColor\": \"str\", \"templateId\": \"str\", \"_list_length\": 1}], \"hidden\": \"bool\", \"saved\": \"bool\", \"isGildable\": \"bool\", \"isMediaOnly\": \"bool\", \"isSponsored\": \"bool\", \"isNSFW\": \"bool\", \"isMeta\": \"bool\", \"isSpoiler\": \"bool\", \"isBlank\": \"bool\", \"sendReplies\": \"bool\", \""}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "Check usernames on all Platforms", "api_description": "Check if a username is available on all platforms at once!\ntrue if available, false if not", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "Dockerhub", "api_description": "Check username on Dockerhub", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Social", "tool_name": "Check Username", "api_name": "Tumblr", "api_description": "Check username on Tumblr", "required_parameters": [{"name": "username", "type": "string", "description": "", "default": "username"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm planning a company event and I want to create a fun and engaging atmosphere. Fetch the latest memes from the Programming Memes Reddit API and show me some rising popular posts from Reddit. Additionally, check if a specific username is available on all platforms using the Check Username API.", "relevant APIs": [["Programming Memes Reddit", "Get All Memes"], ["Reddit", "Rising Popular Posts"], ["Check Username", "Check usernames on all Platforms"]], "query_id": 6721}, {"api_list": [{"category_name": "Data", "tool_name": "Proxy-Spider Proxies", "api_name": "/proxies.example.json", "api_description": "This is a free sample of ten proxies. Sign up and receive the full list.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"status": "str", "data": {"proxies": [{"ip": "str", "port": "str", "country_code": "str", "response_time": "str", "type": "str", "supports": ["list of str with length 4"], "protocols": ["list of str with length 2"], "_list_length": 10}], "filters": "empty list", "quota_remaining": "int", "limit": "int", "page": "int", "has_next_page": "bool"}, "message": "str", "request_id": "str"}}, {"category_name": "Commerce", "tool_name": "IP2Proxy", "api_name": "IP2Proxy API", "api_description": "Proxy Detection API", "required_parameters": [{"name": "IP", "type": "STRING", "description": "IP address to query.", "default": ""}, {"name": "LICENSE", "type": "STRING", "description": "API license key.", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Tools", "tool_name": "Ephemeral Proxies", "api_name": "Check residential proxies service status", "api_description": "It returns the current status of the service, including the total number of residential proxies available and grouped by country.\n", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"success": "bool", "service_status": {"availability": {"total": {"proxies": "int"}, "by_country": [{"country_iso": "str", "proxies": "int", "_list_length": 32}]}}}}, {"category_name": "Tools", "tool_name": "Ephemeral Proxies", "api_name": "Obtain a new datacenter proxy", "api_description": "The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins.\n", "required_parameters": [], "optional_parameters": [{"name": "whitelist_ip", "type": "STRING", "description": "The proxy that this endpoint returns will allow connections from the source ip that is making this API call.\nAdditionally, you can allow an extra ip to connect to the proxy by setting this parameter to the ip that you would like to whitelist.\nThe list of ips that the proxy has whitelisted is returned in the API response.\n", "default": ""}, {"name": "countries", "type": "STRING", "description": "List of countries, separate it by comma, that you would like the proxies to be located.\nExample: GB,US,PL,RU\n", "default": ""}], "method": "GET", "template_response": {"success": "bool", "proxy": {"id": "str", "host": "str", "port": "int", "expires_at": "str", "whitelisted_ips": ["list of str with length 1"], "features": {"static": "bool", "type": "str", "supported_protocols": {"socks4": "bool", "socks5": "bool", "http": "bool", "https": "bool"}}, "visibility": {"ip": "str", "country": "str", "country_iso": "str", "latitude": "float", "longitude": "float", "timezone": "str", "asn": "str", "asn_org": "str", "zip_code": "str", "region_name": "str", "region_code": "str", "city": "str"}}}}, {"category_name": "Tools", "tool_name": "Ephemeral Proxies", "api_name": "Get user's traffic balance", "api_description": "It returns the user's traffic balance for current monthly subscription.\n", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"success": "bool", "balance": {"consumed_megabytes": "int", "limit_megabytes": "int"}}}], "query": "I'm a software developer working on a project that requires IP geolocation. Can you fetch me the IP details for a given IP address, including the country, region, city, and latitude/longitude coordinates? Additionally, I need to obtain a new datacenter proxy for testing purposes.", "relevant APIs": [["IP2Proxy", "IP2Proxy API"], ["Ephemeral Proxies", "Obtain a new datacenter proxy"]], "query_id": 6773}, {"api_list": [{"category_name": "Business", "tool_name": "360 Business Tool", "api_name": "GetCompanies", "api_description": "Get all companies", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Business", "tool_name": "360 Business Tool", "api_name": "GetCases", "api_description": "Get all cases", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Business", "tool_name": "360 Business Tool", "api_name": "GetCompaniesSince", "api_description": "Get companies modified since", "required_parameters": [{"name": "timestamp", "type": "NUMBER", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Chart Lyrics", "api_name": "/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad", "api_description": "Sample API request to search Lyrics", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "My family is planning a trip and we need to find reliable companies to book services from. Can you provide us with a list of companies and cases? Additionally, we'd like to search for the lyrics of 'Bad' by Michael Jackson.", "relevant APIs": [["360 Business Tool", "GetCompanies"], ["360 Business Tool", "GetCases"], ["Chart Lyrics", "/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad"]], "query_id": 6826}, {"api_list": [{"category_name": "Data", "tool_name": "Opencage geocoder", "api_name": "/geocode/v1/json", "api_description": "geocode an address", "required_parameters": [{"name": "q", "type": "STRING", "description": "\"latitude,longitude\" or \"address\" (without \")", "default": "Berlin"}, {"name": "key", "type": "STRING", "description": "The API key you got when registering on https://geocoder.opencagedata.com/", "default": "OPENCAGE-API-Key"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "an IETF format language code (such as es for Spanish or pt-BR for Brazilian Portuguese); if this is omitted a code of en (English) will be assumed", "default": "en"}], "method": "GET", "template_response": {"documentation": "str", "licenses": [{"name": "str", "url": "str", "_list_length": 1}], "results": "empty list", "status": {"code": "int", "message": "str"}, "stay_informed": {"blog": "str", "mastodon": "str", "twitter": "str"}, "thanks": "str", "timestamp": {"created_http": "str", "created_unix": "int"}, "total_results": "int"}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Search places", "api_description": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.", "required_parameters": [], "optional_parameters": [{"name": "type", "type": "STRING", "description": "Filters places by \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.", "default": "CITY"}, {"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.", "default": ""}, {"name": "skip", "type": "NUMBER", "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.", "default": "0"}, {"name": "country", "type": "STRING", "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).", "default": "US,CA"}, {"name": "limit", "type": "NUMBER", "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.", "default": "10"}, {"name": "adminDivision1", "type": "STRING", "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).", "default": ""}, {"name": "adminDivision2", "type": "STRING", "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.", "default": ""}, {"name": "accuracyRadiusKm", "type": "NUMBER", "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.", "default": ""}, {"name": "latitude", "type": "NUMBER", "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.", "default": ""}, {"name": "q", "type": "STRING", "description": "Query string to find places with a similar name.", "default": "New York"}, {"name": "longitude", "type": "NUMBER", "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Autocomplete places", "api_description": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.", "default": "10"}, {"name": "skip", "type": "NUMBER", "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.", "default": "0"}, {"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.", "default": ""}, {"name": "country", "type": "STRING", "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).", "default": "US,CA"}, {"name": "adminDivision1", "type": "STRING", "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).", "default": ""}, {"name": "accuracyRadiusKm", "type": "NUMBER", "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.", "default": ""}, {"name": "latitude", "type": "NUMBER", "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.", "default": ""}, {"name": "adminDivision2", "type": "STRING", "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.", "default": ""}, {"name": "q", "type": "STRING", "description": "Query string to find places which name starts with this prefix.", "default": "Sea"}, {"name": "longitude", "type": "NUMBER", "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.", "default": ""}, {"name": "type", "type": "STRING", "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.", "default": "CITY"}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Location", "tool_name": "Spott", "api_name": "Get place by Geoname ID", "api_description": "Returns a single Place identified by a Geoname ID.", "required_parameters": [{"name": "geonameId", "type": "NUMBER", "description": "Unique identificator given by Geonames", "default": "5391959"}], "optional_parameters": [{"name": "language", "type": "ENUM", "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.", "default": ""}], "method": "GET", "template_response": {"error": {"code": "str", "message": "str"}}}, {"category_name": "Mapping", "tool_name": "MapToolkit", "api_name": "Routing", "api_description": "Global routing engine.", "required_parameters": [{"name": "points", "type": "STRING", "description": "Value: `{lat},{lng}[|{lat},{lng} ...]`\nDefine multiple routing waypoints, consisting of latitude and longitude. At least 2 points are needed.", "default": "48.202596,16.369801|48.208373,16.370401"}], "optional_parameters": [{"name": "finish_instruction", "type": "STRING", "description": "Adds a finish instruction at the end of the route.", "default": ""}, {"name": "language", "type": "STRING", "description": "Language for the given instructions. Must be a valid ISO 639-1 language code. Default value is `en`.", "default": ""}, {"name": "voice_instructions", "type": "STRING", "description": "Enables voice instructions for text to speech engines.", "default": ""}, {"name": "filename", "type": "STRING", "description": "Only available if the set `format` is `gpx` or `kml`. ", "default": ""}, {"name": "format", "type": "STRING", "description": "Default format is `json`.", "default": ""}, {"name": "weighting", "type": "STRING", "description": "Only available if the set `routeType` is `bike`. Default value is `networks`.", "default": ""}, {"name": "routeType", "type": "STRING", "description": "", "default": "bike"}], "method": "GET", "template_response": {"info": {"copyrights": ["list of str with length 2"], "took": "int"}, "paths": [{"distance": "float", "snapped_waypoints": "str", "weight": "float", "descend": "float", "ascend": "float", "points_encoded": "bool", "points": "str", "bbox": ["list of float with length 4"], "time": "int", "instructions": [{"distance": "float", "name": "str", "tags": {"surface": "str", "highway": "str"}, "text": "str", "interval": ["list of int with length 2"], "sign": "int", "pushbike": "bool", "annotations": "empty list", "time": "int", "coordinate": ["list of float with length 2"], "speed": "float", "_list_length": 9}], "_list_length": 1}]}}, {"category_name": "Mapping", "tool_name": "MapToolkit", "api_name": "Elevation", "api_description": "Global elevation service.", "required_parameters": [{"name": "points", "type": "STRING", "description": "JSON Array of [latitdue, longitude] Objects.", "default": "[[50,10],[46,16]]"}], "optional_parameters": [{"name": "simplify", "type": "STRING", "description": "Simplifies the points before searching for elevation.", "default": ""}], "method": "GET", "template_response": {}}, {"category_name": "Mapping", "tool_name": "MapToolkit", "api_name": "Planet & Contour Vectortiles", "api_description": "Global Vectortiles combined with Contourlines.", "required_parameters": [{"name": "y", "type": "string", "description": "", "default": "1"}, {"name": "z", "type": "string", "description": "", "default": "1"}, {"name": "x", "type": "string", "description": "", "default": "1"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "TrueWay Geocoding", "api_name": "ReverseGeocode", "api_description": "Obtain address for location", "required_parameters": [{"name": "location", "type": "STRING", "description": "The location for which you wish to obtain the human-readable address", "default": "37.7879493,-122.3961974"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language in which to return results", "default": "en"}], "method": "GET", "template_response": {"results": [{"address": "str", "postal_code": "str", "country": "str", "region": "str", "area": "str", "locality": "str", "neighborhood": "str", "street": "str", "house": "str", "location": {"lat": "float", "lng": "float"}, "location_type": "str", "type": "str", "_list_length": 5}]}}, {"category_name": "Mapping", "tool_name": "TrueWay Geocoding", "api_name": "Geocode", "api_description": "Obtain geocoordinates for address", "required_parameters": [{"name": "address", "type": "STRING", "description": "The address that you want to geocode", "default": "505 Howard St, San Francisco"}], "optional_parameters": [{"name": "language", "type": "STRING", "description": "The language in which to return results", "default": "en"}, {"name": "country", "type": "STRING", "description": "The country code", "default": ""}, {"name": "bounds", "type": "STRING", "description": "The bounding box", "default": ""}], "method": "GET", "template_response": {"results": [{"address": "str", "postal_code": "str", "country": "str", "region": "str", "area": "str", "locality": "str", "neighborhood": "str", "street": "str", "house": "str", "location": {"lat": "float", "lng": "float"}, "location_type": "str", "type": "str", "_list_length": 1}]}}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getMapTilewithSpanishLabels", "api_description": "Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map.", "required_parameters": [{"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}, {"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "4"}, {"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "2"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getStandardMapTile", "api_description": "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap", "required_parameters": [{"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "3"}, {"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "6"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getMapTilewithEnglishLabels", "api_description": "Raster Map Tiles with English Labels. Please see our [tutorials page](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials) on how to use this.", "required_parameters": [{"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "6"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}, {"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "3"}], "optional_parameters": [], "method": "GET"}], "query": "I recently moved to a new city and I'm looking for a good Italian restaurant. Can you suggest some popular Italian restaurants near my location? Additionally, I would like to know the elevation of my current location.", "relevant APIs": [["Spott", "Search places"], ["MapToolkit", "Elevation"], ["TrueWay Geocoding", "ReverseGeocode"]], "query_id": 6886}, {"api_list": [{"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts/active/zone/{zoneId}", "api_description": "A list of active alerts by zone id. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/zone/ILZ081", "required_parameters": [{"name": "zoneId", "type": "STRING", "description": "zoneId: a valid zone, see list in counts endpoint", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 2}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/products/types/{typeId}/locations/{locationId}", "api_description": "A product for a location that has issued a product for a specific type.  Example: /products/types/AFD/locations/EAX", "required_parameters": [{"name": "locationId", "type": "STRING", "description": "locationId: an id of a valid location (list forthcoming)", "default": ""}, {"name": "typeId", "type": "STRING", "description": "typeId: an id of a valid product type ", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 2}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts/active/count", "api_description": "A list of active counts for regions, areas and zones. A list of these items forthcoming.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": "{\"total\": \"int\", \"land\": \"int\", \"marine\": \"int\", \"regions\": {\"AL\": \"int\", \"AT\": \"int\", \"GL\": \"int\", \"GM\": \"int\", \"PA\": \"int\", \"PI\": \"int\"}, \"areas\": {\"AK\": \"int\", \"AL\": \"int\", \"AM\": \"int\", \"AN\": \"int\", \"AR\": \"int\", \"AZ\": \"int\", \"CA\": \"int\", \"CO\": \"int\", \"DE\": \"int\", \"FL\": \"int\", \"GA\": \"int\", \"GM\": \"int\", \"IA\": \"int\", \"ID\": \"int\", \"IN\": \"int\", \"KS\": \"int\", \"KY\": \"int\", \"LA\": \"int\", \"LE\": \"int\", \"MD\": \"int\", \"ME\": \"int\", \"MI\": \"int\", \"MO\": \"int\", \"MS\": \"int\", \"NC\": \"int\", \"NE\": \"int\", \"NH\": \"int\", \"NJ\": \"int\", \"NM\": \"int\", \"NV\": \"int\", \"NY\": \"int\", \"OH\": \"int\", \"OK\": \"int\", \"PA\": \"int\", \"PH\": \"int\", \"PK\": \"int\", \"PR\": \"int\", \"PZ\": \"int\", \"SD\": \"int\", \"TN\": \"int\", \"TX\": \"int\", \"VA\": \"int\", \"VI\": \"int\", \"WY\": \"int\"}, \"zones\": {\"AKC090\": \"int\", \"AKC185\": \"int\", \"AKC188\": \"int\", \"AKC290\": \"int\", \"AKZ203\": \"int\", \"AKZ204\": \"int\", \"AKZ206\": \"int\", \"AKZ218\": \"int\", \"AKZ220\": \"int\", \"ALC003\": \"int\", \"ALC013\": \"int\", \"ALC023\": \"int\", \"ALC025\": \"int\", \"ALC031\": \"int\", \"ALC035\": \"int\", \"ALC039\": \"i"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "16 Day Forecast", "api_description": "Returns a 16 day (daily) forecast", "required_parameters": [{"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}, {"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Current Weather Data of a location.", "api_description": "Returns the current (most recent) weather observation of a given location", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "-78.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language", "default": ""}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET", "template_response": {"count": "int", "data": [{"app_temp": "float", "aqi": "int", "city_name": "str", "clouds": "int", "country_code": "str", "datetime": "str", "dewpt": "int", "dhi": "int", "dni": "int", "elev_angle": "float", "ghi": "int", "gust": "float", "h_angle": "NoneType", "lat": "float", "lon": "float", "ob_time": "str", "pod": "str", "precip": "int", "pres": "float", "rh": "int", "slp": "float", "snow": "int", "solar_rad": "int", "sources": ["list of str with length 1"], "state_code": "str", "station": "str", "sunrise": "str", "sunset": "str", "temp": "float", "timezone": "str", "ts": "int", "uv": "int", "vis": "int", "weather": {"description": "str", "code": "int", "icon": "str"}, "wind_cdir": "str", "wind_cdir_full": "str", "wind_dir": "int", "wind_spd": "float", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "120 Hour Forecast", "api_description": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "hours", "type": "STRING", "description": "Limit number of forecast hours", "default": "48"}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "16 Day Forecast", "api_description": "Returns a 16 day (daily) forecast", "required_parameters": [{"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}, {"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Current Weather Data of a location.", "api_description": "Returns the current (most recent) weather observation of a given location", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "-78.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language", "default": ""}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET", "template_response": {"count": "int", "data": [{"app_temp": "float", "aqi": "int", "city_name": "str", "clouds": "int", "country_code": "str", "datetime": "str", "dewpt": "int", "dhi": "int", "dni": "int", "elev_angle": "float", "ghi": "int", "gust": "float", "h_angle": "NoneType", "lat": "float", "lon": "float", "ob_time": "str", "pod": "str", "precip": "int", "pres": "float", "rh": "int", "slp": "float", "snow": "int", "solar_rad": "int", "sources": ["list of str with length 1"], "state_code": "str", "station": "str", "sunrise": "str", "sunset": "str", "temp": "float", "timezone": "str", "ts": "int", "uv": "int", "vis": "int", "weather": {"description": "str", "code": "int", "icon": "str"}, "wind_cdir": "str", "wind_cdir_full": "str", "wind_dir": "int", "wind_spd": "float", "_list_length": 1}]}}], "query": "I'm a travel blogger, and I'm currently writing an article about the most extreme weather events in the United States. Can you provide me with the active weather alerts for all regions, areas, and zones in the country? Additionally, fetch me the current weather data for the location with coordinates (37.7749\u00b0 N, 122.4194\u00b0 W) to include in my article. Thank you!", "relevant APIs": [["National Weather Service", "/alerts/active/count"], ["Weather", "Current Weather Data of a location."]], "query_id": 6911}, {"api_list": [{"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "120 Hour Forecast", "api_description": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "hours", "type": "STRING", "description": "Limit number of forecast hours", "default": "48"}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "5 day Forecast", "api_description": "3 hour interval - 5 day forecast for a given lat/lon", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude (Degrees)", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude (degrees)", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}, {"name": "lang", "type": "ENUM", "description": "Language for weather condition", "default": ""}], "method": "GET"}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Air Quality History", "api_description": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "35.779"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.638"}], "optional_parameters": [], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "float", "datetime": "str", "no2": "float", "o3": "float", "pm10": "float", "pm25": "int", "so2": "int", "timestamp_local": "str", "timestamp_utc": "str", "ts": "int", "_list_length": 72}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Current Air Quality", "api_description": "Retrieves current air quality conditions for any location in the world, given a lat/lon.", "required_parameters": [{"name": "lon", "type": "STRING", "description": "Longitude", "default": "-73.00597"}, {"name": "lat", "type": "STRING", "description": "Latitude", "default": "40.71427"}], "optional_parameters": [], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "int", "mold_level": "int", "no2": "int", "o3": "int", "pm10": "int", "pm25": "int", "pollen_level_grass": "int", "pollen_level_tree": "int", "pollen_level_weed": "int", "predominant_pollen_type": "str", "so2": "int", "_list_length": 1}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Air Quality Forecast", "api_description": "Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon. ", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "35.779"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.638"}], "optional_parameters": [{"name": "hours", "type": "NUMBER", "description": "Limits response forecast hours (default 72). ", "default": "72"}], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "float", "datetime": "str", "no2": "float", "o3": "float", "pm10": "float", "pm25": "float", "so2": "float", "timestamp_local": "str", "timestamp_utc": "str", "ts": "int", "_list_length": 72}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}], "query": "I'm planning a road trip across the country and I want to make sure I have clear skies and good air quality throughout the journey. Can you provide me with a 120-hour weather forecast for multiple cities along the route? Additionally, I'd like to know the air quality history for each city.", "relevant APIs": [["Weather", "120 Hour Forecast"], ["Air Quality", "Air Quality History"]], "query_id": 6934}, {"api_list": [{"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "120 Hour Forecast", "api_description": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "hours", "type": "STRING", "description": "Limit number of forecast hours", "default": "48"}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "5 day Forecast", "api_description": "3 hour interval - 5 day forecast for a given lat/lon", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude (Degrees)", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude (degrees)", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}, {"name": "lang", "type": "ENUM", "description": "Language for weather condition", "default": ""}], "method": "GET"}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Air Quality History", "api_description": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "35.779"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.638"}], "optional_parameters": [], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "float", "datetime": "str", "no2": "float", "o3": "float", "pm10": "float", "pm25": "int", "so2": "int", "timestamp_local": "str", "timestamp_utc": "str", "ts": "int", "_list_length": 72}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Current Air Quality", "api_description": "Retrieves current air quality conditions for any location in the world, given a lat/lon.", "required_parameters": [{"name": "lon", "type": "STRING", "description": "Longitude", "default": "-73.00597"}, {"name": "lat", "type": "STRING", "description": "Latitude", "default": "40.71427"}], "optional_parameters": [], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "int", "mold_level": "int", "no2": "int", "o3": "int", "pm10": "int", "pm25": "int", "pollen_level_grass": "int", "pollen_level_tree": "int", "pollen_level_weed": "int", "predominant_pollen_type": "str", "so2": "int", "_list_length": 1}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}, {"category_name": "Weather", "tool_name": "Air Quality", "api_name": "Air Quality Forecast", "api_description": "Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon. ", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "35.779"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.638"}], "optional_parameters": [{"name": "hours", "type": "NUMBER", "description": "Limits response forecast hours (default 72). ", "default": "72"}], "method": "GET", "template_response": {"city_name": "str", "country_code": "str", "data": [{"aqi": "int", "co": "float", "datetime": "str", "no2": "float", "o3": "float", "pm10": "float", "pm25": "float", "so2": "float", "timestamp_local": "str", "timestamp_utc": "str", "ts": "int", "_list_length": 72}], "lat": "float", "lon": "float", "state_code": "str", "timezone": "str"}}], "query": "I'm planning a hiking trip in the mountains and I need to check the weather conditions for the next 5 days. Can you provide me with a detailed 5-day weather forecast for the hiking location? Also, I'd like to check the air quality forecast for the same period.", "relevant APIs": [["Weather", "5 day Forecast"], ["Air Quality", "Air Quality Forecast"]], "query_id": 6940}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Programming Memes Images", "api_name": "v1/memes", "api_description": "Get Random Programming Memes", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Joke of the Day", "api_description": "Get the joke of the day from a collection of most rated and most popular jokes.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Categories of Jokes", "api_description": "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Random Joke By Category", "api_description": "Get the random joke by category from a collection of most rated and most popular jokes.", "required_parameters": [{"name": "category", "type": "STRING", "description": "Category of joke based on the jokes categories API", "default": "Political"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Entertainment", "tool_name": "DaddyJokes", "api_name": "Random", "api_description": "Get a random dad joke", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm organizing a family gathering and I want to make everyone laugh. Fetch me a random dad joke and a manatee joke to entertain my relatives. Also, find a funny programming meme to share with my tech-savvy cousins.", "relevant APIs": [["World of Jokes", "Get Random Joke By Category"], ["manatee jokes", "random"], ["Programming Memes Images", "v1/memes"]], "query_id": 7014}, {"api_list": [{"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}], "query": "I'm organizing a charity event and I want to include some humor in the program. Can you provide me with a specific manatee joke by its ID? Also, recommend some funny skits or performances to entertain the audience.", "relevant APIs": [["Chuck Norris", "/jokes/search"], ["manatee jokes", "get by id"]], "query_id": 7058}, {"api_list": [{"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}], "query": "I'm organizing a comedy night at my local community center and I need some jokes to entertain the audience. Can you recommend some funny jokes about animals? Also, suggest some local comedians who can perform at the event.", "relevant APIs": [["Chuck Norris", "/jokes/random"], ["manatee jokes", "random"]], "query_id": 7062}, {"api_list": [{"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Entertainment", "tool_name": "Programming Memes Images", "api_name": "v1/memes", "api_description": "Get Random Programming Memes", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Memeados", "api_name": "Google Fake Autocomplete", "api_description": "Generate Fake google autocomplete", "required_parameters": [{"name": "text1", "type": "STRING", "description": "", "default": "Search"}, {"name": "text3", "type": "STRING", "description": "", "default": "search autocomplete 2"}, {"name": "text2", "type": "STRING", "description": "", "default": "search autocomplete 1"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Memeados", "api_name": "drakelikehate", "api_description": "Generate Drake Likes and Hates meme", "required_parameters": [{"name": "text2", "type": "STRING", "description": "", "default": "This text is liked."}, {"name": "text1", "type": "STRING", "description": "", "default": "This text is hated"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Memeados", "api_name": "Pet Pet", "api_description": "Generate My Pet Pet meme GIF", "required_parameters": [{"name": "image", "type": "STRING", "description": "", "default": "https://i.pravatar.cc/300"}], "optional_parameters": [], "method": "GET"}], "query": "I'm feeling a bit down and need a good laugh. Can you find me a hilarious programming meme and a funny manatee joke to brighten up my day?", "relevant APIs": [["Programming Memes Images", "v1/memes"], ["manatee jokes", "random"]], "query_id": 7095}, {"api_list": [{"category_name": "Gaming", "tool_name": "World of Tanks Stats", "api_name": "Get Stats", "api_description": "Get WN8, WN7, battles, victories, defeats, kills, draws, avereageTier, tanksSpotted, battlesSurvived", "required_parameters": [{"name": "name", "type": "STRING", "description": "", "default": "PasiHD"}], "optional_parameters": [], "method": "GET", "template_response": {"name": "str", "account_id": "int", "battles": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "averageTier": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "victories": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "defeats": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "draws": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "battlesSurvived": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "kills": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "tanksSpotted": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "wn7": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}, "wn8": {"total": "str", "last24h": "str", "last7d": "str", "last30d": "str"}}}, {"category_name": "Entertainment", "tool_name": "Hearthstone", "api_name": "Single Card", "api_description": "Returns card by name or ID. This may return more then one card if they share the same name. Loatheb returns both the card and the boss.", "required_parameters": [{"name": "name", "type": "STRING", "description": "The name or ID of the card. Example values: Ysera, EX1_572.", "default": ""}], "optional_parameters": [{"name": "callback", "type": "STRING", "description": "Request data to be returned as a JsonP callback.", "default": ""}, {"name": "collectible", "type": "NUMBER", "description": "Set this to 1 to only return collectible cards.", "default": ""}, {"name": "locale", "type": "STRING", "description": "What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.", "default": ""}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Hearthstone", "api_name": "All Cards", "api_description": "Returns all available Hearthstone cards including non collectible cards.", "required_parameters": [], "optional_parameters": [{"name": "cost", "type": "NUMBER", "description": "Return only cards of a certain cost.", "default": ""}, {"name": "attack", "type": "NUMBER", "description": "Return only cards with a certain attack.", "default": ""}, {"name": "health", "type": "NUMBER", "description": "Return only cards with a certain health.", "default": ""}, {"name": "callback", "type": "STRING", "description": "Request data to be returned as a JsonP callback.", "default": ""}, {"name": "collectible", "type": "NUMBER", "description": "Set this to 1 to only return collectible cards.", "default": ""}, {"name": "durability", "type": "NUMBER", "description": "Return only cards with a certain durability.", "default": ""}, {"name": "locale", "type": "STRING", "description": "What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.", "default": ""}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Hearthstone", "api_name": "Cards by Race", "api_description": "Returns all the cards of a certain race. Example values: Mech, Murloc.", "required_parameters": [{"name": "race", "type": "STRING", "description": "Card race.", "default": ""}], "optional_parameters": [{"name": "attack", "type": "NUMBER", "description": "Return only cards with a certain attack.", "default": ""}, {"name": "durability", "type": "NUMBER", "description": "Return only cards with a certain durability.", "default": ""}, {"name": "health", "type": "NUMBER", "description": "Return only cards with a certain health.", "default": ""}, {"name": "cost", "type": "NUMBER", "description": "Return only cards of a certain cost.", "default": ""}, {"name": "callback", "type": "STRING", "description": "Request data to be returned as a JsonP callback.", "default": ""}, {"name": "collectible", "type": "NUMBER", "description": "Set this to 1 to only return collectible cards.", "default": ""}, {"name": "locale", "type": "STRING", "description": "What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.", "default": ""}], "method": "GET"}], "query": "I'm organizing a Hearthstone tournament and I need a comprehensive list of all available cards. Can you fetch me the complete collection of Hearthstone cards? Additionally, find the stats for my World of Tanks account named PasiHD to see my progress.", "relevant APIs": [["Hearthstone", "All Cards"], ["World of Tanks Stats", "Get Stats"]], "query_id": 7161}, {"api_list": [{"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "MarketById", "api_description": "Retrieves the details of an individual market. Supply the unique identifier (UUID) of the market.\n\nThe full list of all market UUIDs can be obtained from the Market endpoint.", "required_parameters": [{"name": "id", "type": "STRING", "description": "UUID. The unique resource identifier of a market e.g.  BTC/USD = 6ea0d2ef-6dd0-4adb-ad32-f7f3db58ccbe", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"status": "str", "timestamp": "str", "message": "str"}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "AssetTicker", "api_description": "This free endpoint will return the latest details for an asset refreshed every 5 minutes with global USD spot price, 24 hour volume and supply.  The optional percentChange parameter provides the 1, 7 and 30 day percentage movements as additional payload.   \n\nSupply the unique identifier (UUID) for an asset.  The UUID for any asset may be found from the Assets endpoint in Lookups.\n\nA security token is required for the Authorization Header. Obtain a token valid for 24 hours from the GetToken endpoint.", "required_parameters": [{"name": "assetId", "type": "STRING", "description": "UUID. The unique resource identifier of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f", "default": ""}], "optional_parameters": [{"name": "percentChange", "type": "STRING", "description": "true or false (default).  When true the  percentage changes in the price and 24 hour volume across 1, 7 and 30 days will be included in the response payload. ", "default": ""}], "method": "GET"}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "DailyOHLCV", "api_description": "This endpoint returns end-of-day open, high, low, close prices and volumes (OHLCV) for market weighted averages (MWA) or global weighted averages (GWA). The 24hr period for end of day is based on an open/close at 00:00:00 UTC. Parameters may be used to select the data required. \n\nBNC uses universal identifiers (UUIDs) for assets and markets. Each index type will have a UUID which identifies the constituent type used to build the index:\n\n| Index Type | Index Id  | Output |\n| -----------|:---------:|:---------:|\n| MWA        | Market Id | OHLCV for that market |\n| GWA        | Asset Id  | OHLCV for that coin / asset |\n\nThe UUIDs for assets or markets may be found from the Lookups with those names.\n\nIf no timestamp is provided, then only the latest values are returned. With a timestamp, records are returned in reverse date order, the number determining how far back  controlled by the size parameter. \n\nAn authentication token is required. Obtain a token valid for 24 hours from the GetToken endpoint.", "required_parameters": [], "optional_parameters": [{"name": "timestamp", "type": "STRING", "description": "Retrieve all daily OHLCV records up to the timestamp provided. All dates are stored in UTC. Timestamp strings should be in the form  YYYY-MM-DDThh:mm:ssZ", "default": ""}, {"name": "size", "type": "NUMBER", "description": "Integer 1 to 2000. Default 10. The maximum size to return in the result set up to the overall limit of 2000. This parameter is ignored if no timestamp is provided. Otherwise, since records are in reverse data order, use in conjunction with timestamp to make selections back in time.", "default": "10"}, {"name": "startAfter", "type": "STRING", "description": "UUID. Retrieve OHLCV for the indexId or indexType required, starting after this particular record id. Every record in the dataset has a universal identifier (UUID). This parameter provides for pagination through large selections since every response includes a nextId that can be used here.", "default": ""}, {"name": "indexType", "type": "STRING", "description": "Restrict the OHLCV results to the index type. Either MWA or GWA.", "default": ""}, {"name": "indexId", "type": "STRING", "description": "Retrieve all the OHLCV values for a particular asset or market by its id. The index id is a universal identifier (UUID) that will differ based on the index type.\n\n| Index Type | Index Id  |\n| -----------|:---------:|\n| MWA        |Market Id  |\n| GWA        |Asset Id   |\n\nUUIDs for assets or markets can be identified from their endpoints in Lookups.", "default": ""}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Food", "tool_name": "The Cocktail DB", "api_name": "Detailed Cocktail Recipe by ID", "api_description": "Get Cocktail by ID", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": "45"}], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "difficulty": "str", "portion": "str", "time": "str", "description": "str", "ingredients": ["list of str with length 5"], "method": [{"Step 1": "str", "_list_length": 3}], "image": "str"}}, {"category_name": "Food", "tool_name": "The Cocktail DB", "api_name": "List of Cocktails", "api_description": "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "difficulty": "str", "image": "str"}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "charts/track", "api_description": "Get all popular songs in specific chart", "required_parameters": [], "optional_parameters": [{"name": "listId", "type": "STRING", "description": "The value of listId field returned in .../charts/list endpoint", "default": ""}, {"name": "pageSize", "type": "NUMBER", "description": "Used for paging purpose, 20 items per response is maximum.", "default": "20"}, {"name": "startFrom", "type": "NUMBER", "description": "Used for paging purpose.", "default": "0"}, {"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"properties\": {}, \"tracks\": [{\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 1}], \"explicit\": \"bool\", \"displayname\": \"str\"}, \"artists\": [{\"alias\": \"str\", \"id\": \"str\", \"adamid\": \"str\", \"_list_length\": 1}], \"url\": \"str\", \"highlightsurls\": {\"artisthighlightsurl\": \"str\", \"trackhighlighturl\": \"str\"}, \"prope"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "search", "api_description": "Search for songs, artists that match input term", "required_parameters": [{"name": "term", "type": "STRING", "description": "Full name of songs or artists", "default": "kiss the rain"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}, {"name": "limit", "type": "NUMBER", "description": "For paging purpose, maximum is fixed at 5 items per response", "default": "5"}, {"name": "offset", "type": "NUMBER", "description": "For paging purpose", "default": "0"}], "method": "GET", "template_response": "{\"tracks\": {\"hits\": [{\"track\": {\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 2}], \"providers\": [{\"caption\": \"str\", \"images\": {\"overflow\": \"str\", \"default\": \"str\"}, \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}], \"type\": \"str\", \"_list_length\": 2}], \"explicit\": \"bool\", \"dis"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "auto-complete", "api_description": "Get suggestions by word or phrase", "required_parameters": [{"name": "term", "type": "STRING", "description": "Any word or phrase of song, artist, etc... that you are familiar with", "default": "kiss the"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"hints": [{"term": "str", "_list_length": 10}]}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Place Distance", "api_description": "Gets this place's distance to the given place.", "required_parameters": [{"name": "placeId", "type": "string", "description": "", "default": ""}], "optional_parameters": [{"name": "distanceUnit", "type": "STRING", "description": "The unit of distance: KM | MI [default]", "default": ""}, {"name": "toPlaceId", "type": "STRING", "description": "The distance to this place", "default": "Q60"}], "method": "GET", "template_response": {"errors": [{"code": "str", "message": "str", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Currencies", "api_description": "Get currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies.", "required_parameters": [], "optional_parameters": [{"name": "countryId", "type": "STRING", "description": "Only currencies supported by this country", "default": "US"}, {"name": "limit", "type": "NUMBER", "description": "The maximum number of results to retrieve", "default": ""}, {"name": "hateoasMode", "type": "BOOLEAN", "description": "Include HATEOAS-style links in results", "default": ""}, {"name": "offset", "type": "NUMBER", "description": "The zero-ary offset index into the results", "default": ""}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Countries", "api_description": "Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries.", "required_parameters": [], "optional_parameters": [{"name": "asciiMode", "type": "BOOLEAN", "description": "Display results using ASCII characters", "default": ""}, {"name": "limit", "type": "NUMBER", "description": "The maximum number of results to retrieve", "default": ""}, {"name": "hateoasMode", "type": "BOOLEAN", "description": "Include HATEOAS-style links in results", "default": ""}, {"name": "offset", "type": "NUMBER", "description": "The zero-ary offset index into the results", "default": ""}, {"name": "currencyCode", "type": "STRING", "description": "Only countries supporting this currency", "default": ""}, {"name": "languageCode", "type": "STRING", "description": "Display results in this language", "default": ""}, {"name": "sort", "type": "STRING", "description": "How to sort the results. Format: \u00b1SORT_FIELD where SORT_FIELD = code | name", "default": ""}, {"name": "namePrefixDefaultLangResults", "type": "BOOLEAN", "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested", "default": ""}, {"name": "namePrefix", "type": "STRING", "description": "Only countries whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.", "default": ""}], "method": "GET", "template_response": {"data": [{"code": "str", "currencyCodes": ["list of str with length 1"], "name": "str", "wikiDataId": "str", "_list_length": 5}], "links": [{"rel": "str", "href": "str", "_list_length": 3}], "metadata": {"currentOffset": "int", "totalCount": "int"}}}], "query": "I'm organizing a surprise birthday party for my mom and I want to make it extra special. Can you suggest some cocktail recipes that I can prepare for the party? Also, provide me with a playlist of her favorite songs to create a nostalgic ambiance. Additionally, find a nearby venue with a beautiful garden for the party.", "relevant APIs": [["The Cocktail DB", "List of Cocktails"], ["Shazam", "charts/track"], ["GeoDB Cities", "Place Distance"]], "query_id": 7311}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}, {"category_name": "Education", "tool_name": "Quotes", "api_name": "quote", "api_description": "Get a random Quote", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"quote": "str", "author": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}], "query": "I'm organizing a science-themed event for kids and need some jokes related to marine life to entertain them. Can you fetch all the available manatee jokes? Also, provide a random quote to inspire the young minds.", "relevant APIs": [["manatee jokes", "find all"], ["Quotes", "quote"]], "query_id": 7480}, {"api_list": [{"category_name": "Sports", "tool_name": "Horse Racing", "api_name": "Query races", "api_description": "The best way to search races.", "required_parameters": [], "optional_parameters": [{"name": "order_by_date", "type": "ENUM", "description": "Results ordered by date race ascending or descending.", "default": ""}, {"name": "date_to", "type": "DATE (YYYY-MM-DD)", "description": "", "default": ""}, {"name": "class_to", "type": "NUMBER", "description": "Maximum race class.", "default": ""}, {"name": "distance_to", "type": "ENUM", "description": "", "default": ""}, {"name": "distance_from", "type": "ENUM", "description": "", "default": ""}, {"name": "id_horse", "type": "NUMBER", "description": "Horse id. If you populate this field the query search races where this horse run.", "default": ""}, {"name": "course", "type": "STRING", "description": "Like Cheltenham, Ascot, Newmarket ....", "default": ""}, {"name": "class_from", "type": "NUMBER", "description": "Minimum race class.", "default": ""}, {"name": "page", "type": "NUMBER", "description": "", "default": ""}, {"name": "date_from", "type": "DATE (YYYY-MM-DD)", "description": "", "default": ""}, {"name": "name", "type": "STRING", "description": "Race name or a text on the race name. Like \\\"Novice\\\", \\\"Handicap chase\\\", \\\"Hurdle\\\", ....", "default": ""}], "method": "GET", "template_response": {"summary": {"total_results": "str", "total_pages": "str", "current_page": "str"}, "races": [{"id_race": "str", "name": "str", "course": "str", "date": "str", "distance": "str", "class": "str", "_list_length": 20}]}}, {"category_name": "Sports", "tool_name": "Horse Racing", "api_name": "Racecards", "api_description": "Get races list.", "required_parameters": [], "optional_parameters": [{"name": "date", "type": "STRING", "description": "", "default": "2020-03-12"}], "method": "GET", "template_response": {"id_race": "str", "course": "str", "date": "str", "title": "str", "distance": "str", "age": "str", "going": "str", "finished": "str", "canceled": "str", "finish_time": "str", "prize": "str", "class": "str"}}, {"category_name": "Sports", "tool_name": "Horse Racing", "api_name": "Race detail info", "api_description": "**Get racecard detailed info** and **Odds comparator**\nHorses, Jockeys, Trainers, Form, OR, Owner, Sire, Dam, Age, Weight and more information.", "required_parameters": [{"name": "id_race", "type": "string", "description": "", "default": "207660"}], "optional_parameters": [], "method": "GET", "template_response": {"id_race": "str", "course": "str", "date": "str", "title": "str", "distance": "str", "age": "str", "going": "str", "finished": "str", "canceled": "str", "finish_time": "str", "prize": "str", "class": "str", "horses": [{"horse": "str", "id_horse": "str", "jockey": "str", "trainer": "str", "age": "str", "weight": "str", "number": "str", "last_ran_days_ago": "str", "non_runner": "str", "form": "str", "position": "str", "distance_beaten": "str", "owner": "str", "sire": "str", "dam": "str", "OR": "str", "sp": "str", "odds": "empty list", "_list_length": 11}]}}, {"category_name": "Mapping", "tool_name": "Places", "api_name": "Places list by radius (Nearby Search) ", "api_description": "Method returns objects closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.", "required_parameters": [{"name": "lang", "type": "ENUM", "description": "Language code (2 characters, ISO639-1). The following values are available: en (english), ru (russian)", "default": ""}, {"name": "radius", "type": "NUMBER", "description": "Maximum distance from selected point in meters", "default": "500"}, {"name": "lon", "type": "NUMBER", "description": "Longitude of selected point", "default": "38.364285"}, {"name": "lat", "type": "NUMBER", "description": "Latitude of selected point", "default": "59.855685"}], "optional_parameters": [{"name": "src_attr", "type": "STRING", "description": "The source of the object attributes. It is allowed to point multiple sources separated by commas. Objects from all sources are returned by default. Available values : osm, wikidata, snow, cultura.ru, rosnedra, user", "default": ""}, {"name": "format", "type": "STRING", "description": "The output format (GeoJSON is set by default). Specify \u201ccount\u201d to get the number of obtained objects. Available values : json, geojson, count", "default": ""}, {"name": "kinds", "type": "STRING", "description": "Object category. Several comma-separated categories may be stated with OR logic. Objects from all categories are returned by default. See object category hierarchy at https://dev.opentripmap.com/doc/en/", "default": ""}, {"name": "src_geom", "type": "STRING", "description": "The source of the object geometry. Objects from all sources are returned by default. Available values : osm, wikidata, snow, cultura.ru, rosnedra", "default": ""}, {"name": "rate", "type": "STRING", "description": "Minimum rating of the object popularity, 1 - minimum, 3- maximum, h - object is referred to the cultural heritage. Objects from all categories are returned by default.  Available values : 1, 2, 3, 1h, 2h, 3h", "default": ""}, {"name": "limit", "type": "NUMBER", "description": "Maximum number of returned objects. 500 is set by default.", "default": ""}, {"name": "name", "type": "STRING", "description": "The text string on which to search at the begining of the object name (mimimum 3 characters). All objects are returned by default.", "default": ""}], "method": "GET", "template_response": {"error": "str"}}, {"category_name": "Mapping", "tool_name": "Places", "api_name": "Autosuggest", "api_description": "Method returns suggestions for search term closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.", "required_parameters": [{"name": "name", "type": "STRING", "description": "The query term on which to search.", "default": "don"}, {"name": "lon", "type": "NUMBER", "description": "Longitude of selected point", "default": "-70.65"}, {"name": "radius", "type": "NUMBER", "description": "Maximum distance from selected point in meters", "default": "5000"}, {"name": "lang", "type": "ENUM", "description": "Language code (2 characters, ISO639-1). The following values are available: en (english), ru (russian)", "default": ""}, {"name": "lat", "type": "NUMBER", "description": "Latitude of selected point", "default": "-33.437"}], "optional_parameters": [{"name": "kinds", "type": "STRING", "description": "Object category. Several comma-separated categories may be stated with OR logic. Objects from all categories are returned by default. See object category hierarchy at https://dev.opentripmap.com/doc/en/", "default": "foods"}, {"name": "rate", "type": "STRING", "description": "Minimum rating of the object popularity, 1 - minimum, 3- maximum, h - object is referred to the cultural heritage. Objects from all categories are returned by default.  Available values : 1, 2, 3, 1h, 2h, 3h", "default": ""}, {"name": "src_attr", "type": "STRING", "description": "The source of the object attributes. It is allowed to point multiple sources separated by commas. Objects from all sources are returned by default. Available values : osm, wikidata, snow, cultura.ru, rosnedra, user", "default": ""}, {"name": "format", "type": "ENUM", "description": "The output format (GeoJSON is set by default). Specify \u201ccount\u201d to get the number of obtained objects. Available values : json, geojson", "default": ""}, {"name": "limit", "type": "NUMBER", "description": "Maximum number of returned objects. 500 is set by default.", "default": "10"}, {"name": "src_geom", "type": "STRING", "description": "The source of the object geometry. Objects from all sources are returned by default. Available values : osm, wikidata, snow, cultura.ru, rosnedra", "default": ""}], "method": "GET", "template_response": {"error": "str"}}, {"category_name": "Mapping", "tool_name": "Places", "api_name": "Geographic coordinates by placename", "api_description": "Returns geographic coordinates for the given placename (city, village, etc.). The method returns the place whose name is most similar to the search string.", "required_parameters": [{"name": "name", "type": "STRING", "description": "Placename", "default": "London"}, {"name": "lang", "type": "ENUM", "description": "Two-letter language code (ISO639-1). The following values are available: en (english), ru (russian)", "default": ""}], "optional_parameters": [{"name": "country", "type": "STRING", "description": "Two-letter country code, ISO-3166 (optional). Default is all countries.", "default": ""}], "method": "GET", "template_response": {"error": "str"}}], "query": "I'm planning a surprise birthday party for my best friend and I want to organize a horse racing-themed event. Can you find me a race happening on their birthday and provide me with the race details? It would also be helpful to have a list of nearby venues where we can host the party.", "relevant APIs": [["Horse Racing", "Query races"], ["Places", "Places list by radius (Nearby Search) "]], "query_id": 7546}, {"api_list": [{"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts/active", "api_description": "A list of active alerts that can be filtered by parameters. Uses same parameters as the /alerts endpoint, but sets \"active\" parameter to 1 and ignores \"start\" and \"end\" parameters. The ATOM format returns items in CAP-ATOM.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": "{\"@context\": [\"list of str with length 2\"], \"type\": \"str\", \"features\": [{\"id\": \"str\", \"type\": \"str\", \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"properties\": {\"@id\": \"str\", \"@type\": \"str\", \"id\": \"str\", \"areaDesc\": \"str\", \"geocode\": {\"SAME\": [\"list of str with length 7\"], \"UGC\": [\"list of str with length 7\"]}, \"affectedZones\": [\"list of str with length 7\"], \"references\": \"empty list\", \"sent\": \"str\", \"effective\": \"str\", \"onset\": \"str\", \"expires\": \"str\", \"ends\": \"str\", \"status\": \"str\", \"messageType\": \"str\", \"category\": \"str\", \"severity\": \"str\", \"certainty\": \"str\", \"urgency\": \"str\", \"event\": \"str\", \"sender\": \"str\", \"senderName\": \"str\", \"headline\": \"str\", \"description\": \"str\", \"instruction\": \"str\", \"response\": \"str\", \"parameters\": {\"AWIPSidentifier\": [\"list of str with length 1\"], \"WMOidentifier\": [\"list of str with length 1\"], \"eventMotionDescription\": [\"list of str with length 1\"], \"windThreat\": [\"list of str with length 1\"], \"maxWindGust\": [\"list of str w"}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/alerts?{parameters}", "api_description": "A list of alerts that can be filtered by parameters. If no parameters are provided, then all alerts are returned. The ATOM format returns items in CAP-ATOM.", "required_parameters": [], "optional_parameters": [{"name": "start", "type": "STRING", "description": "start, Start time (ISO8601DateTime)", "default": ""}, {"name": "end", "type": "STRING", "description": "end, End time (ISO8601DateTime)", "default": ""}, {"name": "status", "type": "STRING", "description": "status, Event status (alert, update, cancel)", "default": ""}, {"name": "zone_type", "type": "STRING", "description": "zone_type, Zone type (land or marine)", "default": ""}, {"name": "active", "type": "STRING", "description": "active, Active alerts (1 or 0)", "default": ""}, {"name": "type", "type": "STRING", "description": "type, Event type (list forthcoming)", "default": ""}, {"name": "point", "type": "STRING", "description": "point, Point (latitude,longitude)", "default": ""}, {"name": "state", "type": "STRING", "description": "State/marine code (list forthcoming)", "default": ""}, {"name": "zone", "type": "STRING", "description": "zone, Zone Id (forecast or county, list forthcoming)", "default": ""}, {"name": "urgency", "type": "STRING", "description": "urgency, Urgency (expected, immediate)", "default": ""}, {"name": "region", "type": "STRING", "description": "region, Region code (list forthcoming)", "default": ""}, {"name": "certainty", "type": "STRING", "description": "certainty, Certainty (likely, observed)", "default": ""}, {"name": "severity", "type": "STRING", "description": "severity, Severity (minor, moderate, severe)", "default": ""}, {"name": "limit", "type": "STRING", "description": " limit, Limit (an integer)", "default": ""}], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 14}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Weather", "tool_name": "National Weather Service", "api_name": "/products/types/{typeId}/locations", "api_description": "A list of locations that have issues products for a type. Example: /products/types/AFD/locations", "required_parameters": [{"name": "typeId", "type": "STRING", "description": "typeId: an id of a valid product type (list forthcoming)", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"correlationId": "str", "parameterErrors": [{"parameter": "str", "message": "str", "_list_length": 1}], "title": "str", "type": "str", "status": "int", "detail": "str", "instance": "str"}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "1 Hour / Minutely Forecast (Nowcast)", "api_description": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "", "default": "35.5"}, {"name": "lon", "type": "NUMBER", "description": "", "default": "-78.5"}], "optional_parameters": [{"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}, {"category_name": "Data", "tool_name": "Weather", "api_name": "Current Weather Data of a location.", "api_description": "Returns the current (most recent) weather observation of a given location", "required_parameters": [{"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "-78.5"}, {"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language", "default": ""}, {"name": "units", "type": "ENUM", "description": "I = Imperial, S = Scientific, M = Metric (Default)", "default": ""}], "method": "GET", "template_response": {"count": "int", "data": [{"app_temp": "float", "aqi": "int", "city_name": "str", "clouds": "int", "country_code": "str", "datetime": "str", "dewpt": "int", "dhi": "int", "dni": "int", "elev_angle": "float", "ghi": "int", "gust": "float", "h_angle": "NoneType", "lat": "float", "lon": "float", "ob_time": "str", "pod": "str", "precip": "int", "pres": "float", "rh": "int", "slp": "float", "snow": "int", "solar_rad": "int", "sources": ["list of str with length 1"], "state_code": "str", "station": "str", "sunrise": "str", "sunset": "str", "temp": "float", "timezone": "str", "ts": "int", "uv": "int", "vis": "int", "weather": {"description": "str", "code": "int", "icon": "str"}, "wind_cdir": "str", "wind_cdir_full": "str", "wind_dir": "int", "wind_spd": "float", "_list_length": 1}]}}, {"category_name": "Data", "tool_name": "Weather", "api_name": "16 Day Forecast", "api_description": "Returns a 16 day (daily) forecast", "required_parameters": [{"name": "lon", "type": "NUMBER", "description": "Longitude", "default": "-78.5"}, {"name": "lat", "type": "NUMBER", "description": "Latitude", "default": "38.5"}], "optional_parameters": [{"name": "lang", "type": "ENUM", "description": "Language for weather description", "default": ""}, {"name": "units", "type": "ENUM", "description": "metric (Default), imperial", "default": ""}], "method": "GET"}], "query": "I'm planning a weekend getaway with my family and I need to know the weather conditions and any active alerts for the destination. Fetch the current weather data and the list of active alerts for the location. Also, provide the 16-day forecast for the area.", "relevant APIs": [["National Weather Service", "/alerts/active"], ["National Weather Service", "/alerts?{parameters}"], ["Weather", "Current Weather Data of a location."], ["Weather", "16 Day Forecast"]], "query_id": 7589}, {"api_list": [{"category_name": "Tools", "tool_name": "mailboxlayer", "api_name": "Validate email address", "api_description": "The main API endpoint for validating email addresses", "required_parameters": [{"name": "email", "type": "STRING", "description": "the email address to be validated", "default": ""}], "optional_parameters": [{"name": "catch_all", "type": "NUMBER", "description": "Set to \"0\" (default) to turn off Catch-all detection, set to \"1\" to turn on Catch-all detection", "default": "0"}, {"name": "smtp", "type": "NUMBER", "description": "Set to \"0\" to turn off SMTP check, set to \"1\" (default) to turn on SMTP check", "default": "1"}], "method": "GET", "template_response": {"success": "bool", "error": {"code": "int", "type": "str", "info": "str"}}}, {"category_name": "Email", "tool_name": "Blaze Verify", "api_name": "Get the status of a batch", "api_description": "GET requests to the batch endpoint will get the current status of the batch verification job specified in the \"id\" parameter.<br><br>When a credit card transaction is necessary to obtain enough credits to verify a batch, billing related messages will be returned if there is an error. These will be sent with a 402 response code.<br><br>", "required_parameters": [{"name": "id", "type": "STRING", "description": "The id of the batch.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Email", "tool_name": "Blaze Verify", "api_name": "Verify an email", "api_description": "Verify a single email. If a verification request takes longer than the timeout, you may retry this request for up to 5 minutes. After 5 minutes, further requests will count against your usage. The verification result will be returned when it is available.<br><br>", "required_parameters": [{"name": "email", "type": "STRING", "description": "The email you want verified.", "default": ""}], "optional_parameters": [{"name": "accept_all", "type": "BOOLEAN", "description": "Does an accept-all check. Heavily impacts API's response time. Default: false", "default": ""}, {"name": "smtp", "type": "BOOLEAN", "description": "The SMTP step takes up a majority of the API's response time. If you would like to speed up your response times, you can disable this step. Default: true", "default": ""}, {"name": "timeout", "type": "NUMBER", "description": "Optional timeout to wait for response (in seconds). Min: 2, Max: 30. Default: 5", "default": ""}], "method": "GET", "template_response": {"accept_all": "bool", "did_you_mean": "NoneType", "disposable": "bool", "domain": "str", "duration": "float", "email": "str", "first_name": "str", "free": "bool", "full_name": "str", "gender": "str", "last_name": "NoneType", "mx_record": "str", "reason": "str", "role": "bool", "score": "int", "smtp_provider": "str", "state": "str", "tag": "NoneType", "user": "str"}}, {"category_name": "Email", "tool_name": "Blaze Verify", "api_name": "Get account info", "api_description": "Get general account information like the email of the account owner and available credits.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}], "query": "My company is organizing a promotional event and we need to verify the email addresses of the attendees. Can you verify the email addresses and provide us with the validation results? Additionally, we would like to know the account information for our Blaze Verify API.", "relevant APIs": [["mailboxlayer", "Validate email address"], ["Blaze Verify", "Get account info"]], "query_id": 7612}, {"api_list": [{"category_name": "Science", "tool_name": "CarbonFootprint", "api_name": "CleanHydroToCarbonFootprint", "api_description": "Return the CO2e in Kg from the consumption of clean hydro energy", "required_parameters": [{"name": "energy", "type": "STRING", "description": "The source of the clean energy. Can be Solar, Wind, HydroElectric, Biomass, Geothermal, Tidal or OtherCleanEnergy", "default": "Solar"}, {"name": "consumption", "type": "STRING", "description": "The amount of energy consumed in KWH..", "default": "500"}], "optional_parameters": [], "method": "GET", "template_response": {"carbonEquivalent": "float"}}, {"category_name": "Science", "tool_name": "CarbonFootprint", "api_name": "TreeEquivalent", "api_description": "Calculate how many trees it took to create paper.", "required_parameters": [{"name": "weight", "type": "STRING", "description": "The weight of the paper", "default": "200"}, {"name": "unit", "type": "STRING", "description": "The unit (kg or lb) used for the weight", "default": "kg"}], "optional_parameters": [], "method": "GET", "template_response": {"numberOfTrees": "float"}}, {"category_name": "Science", "tool_name": "CarbonFootprint", "api_name": "CarbonFootprintFromCarTravel", "api_description": "Returns the CO2e in Kg from a travel by car", "required_parameters": [{"name": "distance", "type": "STRING", "description": "The distance in KM.", "default": "100"}, {"name": "vehicle", "type": "STRING", "description": "The type of car, either SmallDieselCar, MediumDieselCar, LargeDieselCar, MediumHybridCar, LargeHybridCar, MediumLPGCar, LargeLPGCar, MediumCNGCar, LargeCNGCar, SmallPetrolVan, LargePetrolVan, SmallDielselVan, MediumDielselVan, LargeDielselVan, LPGVan, CNGVan, SmallPetrolCar, MediumPetrolCar, LargePetrolCar, SmallMotorBike, MediumMotorBike, LargeMotorBike", "default": "SmallDieselCar"}], "optional_parameters": [], "method": "GET", "template_response": {"carbonEquivalent": "float"}}, {"category_name": "Medical", "tool_name": "GetGuidelines", "api_name": "all", "api_description": "All guidelines", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Medical", "tool_name": "GetGuidelines", "api_name": "vac", "api_description": "Vaccinations only", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Food", "tool_name": "Edamam Nutrition Analysis", "api_name": "/api/nutrition-data", "api_description": "This returns the nutritional analysis for the specified food text by extracting information from a short unstructured food text (usually an ingredient line and returns the following structured data for the text: quantity, measure and food,) and if available: diet, health and allergen labels for the text.  With the built in food logging feature, this allows for change of context. For example, \u201crice\u201d will normally be matched to raw rice while, with the food logging feature on, it will match to ready to eat \u2018cooked rice.\u2019 \n \n <b>Access Point:</b> https://api.edamam.com/api/nutrition-data", "required_parameters": [{"name": "ingr", "type": "STRING", "description": "The ingredient.", "default": ""}], "optional_parameters": [{"name": "nutrition-type", "type": "STRING", "description": "Select between the cooking and food logging processor.", "default": "cooking"}], "method": "GET", "template_response": {"error": "str", "message": "str"}}], "query": "I'm a nutritionist and I need to analyze the nutritional content of different foods. Can you fetch the nutritional analysis for a variety of ingredients? Additionally, provide me with the guidelines for special dietary needs and allergen labels.", "relevant APIs": [["Edamam Nutrition Analysis", "/api/nutrition-data"], ["GetGuidelines", "all"]], "query_id": 7682}, {"api_list": [{"category_name": "Medical", "tool_name": "GetGuidelines", "api_name": "vac", "api_description": "Vaccinations only", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Medical", "tool_name": "GetGuidelines", "api_name": "all", "api_description": "All guidelines", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Business", "tool_name": "Healthcaremailing", "api_name": "Healthcare mailing", "api_description": "Healthcare mailing, a direct marketing business founded on a base of many successful years of experience building list.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Food", "tool_name": "Edamam Nutrition Analysis", "api_name": "/api/nutrition-data", "api_description": "This returns the nutritional analysis for the specified food text by extracting information from a short unstructured food text (usually an ingredient line and returns the following structured data for the text: quantity, measure and food,) and if available: diet, health and allergen labels for the text.  With the built in food logging feature, this allows for change of context. For example, \u201crice\u201d will normally be matched to raw rice while, with the food logging feature on, it will match to ready to eat \u2018cooked rice.\u2019 \n \n <b>Access Point:</b> https://api.edamam.com/api/nutrition-data", "required_parameters": [{"name": "ingr", "type": "STRING", "description": "The ingredient.", "default": ""}], "optional_parameters": [{"name": "nutrition-type", "type": "STRING", "description": "Select between the cooking and food logging processor.", "default": "cooking"}], "method": "GET", "template_response": {"error": "str", "message": "str"}}, {"category_name": "Business", "tool_name": "Lake B2B", "api_name": "Email Marketing", "api_description": "Lake B2B provides best email marketing services and programs across the globe to meet your marketing needs thus helping business to run more efficiently.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "CarbonFootprint", "api_name": "CleanHydroToCarbonFootprint", "api_description": "Return the CO2e in Kg from the consumption of clean hydro energy", "required_parameters": [{"name": "energy", "type": "STRING", "description": "The source of the clean energy. Can be Solar, Wind, HydroElectric, Biomass, Geothermal, Tidal or OtherCleanEnergy", "default": "Solar"}, {"name": "consumption", "type": "STRING", "description": "The amount of energy consumed in KWH..", "default": "500"}], "optional_parameters": [], "method": "GET", "template_response": {"carbonEquivalent": "float"}}, {"category_name": "Science", "tool_name": "CarbonFootprint", "api_name": "CarbonFootprintFromMotorBike", "api_description": "Returns the CO2e in Kg from a motorbike travel", "required_parameters": [{"name": "type", "type": "STRING", "description": "The type of motorbike, can be any of SmallMotorBike, MediumMotorBike, LargeMotorBike", "default": "SmallMotorBike"}, {"name": "distance", "type": "STRING", "description": "The distance in KM", "default": "400"}], "optional_parameters": [], "method": "GET", "template_response": {"carbonEquivalent": "float"}}, {"category_name": "Science", "tool_name": "CarbonFootprint", "api_name": "FuelToCO2e", "api_description": "Transform liters of Diesel, Petrol or LPG into CO2 Equivalent in Kg.", "required_parameters": [{"name": "type", "type": "STRING", "description": "The type can be Petrol, Diesel, LPG.", "default": "Petrol"}, {"name": "litres", "type": "STRING", "description": "The number of litres to calculate from.", "default": "10"}], "optional_parameters": [], "method": "GET", "template_response": {"carbonEquivalent": "float"}}], "query": "I'm organizing a health seminar and I need a comprehensive list of medical guidelines. Can you provide me with all the guidelines available? Additionally, fetch the carbon footprint of traveling 400 km on a medium motorbike.", "relevant APIs": [["GetGuidelines", "all"], ["CarbonFootprint", "CarbonFootprintFromMotorBike"]], "query_id": 7721}, {"api_list": [{"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "listquotes", "api_description": "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "exchange", "api_description": "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1.", "required_parameters": [{"name": "from", "type": "STRING", "description": "Source Quote", "default": "SGD"}, {"name": "to", "type": "STRING", "description": "Destination Quote", "default": "MYR"}], "optional_parameters": [{"name": "q", "type": "NUMBER", "description": "Source Amount", "default": "1.0"}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Editorial", "api_description": "An editorial object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Comment", "api_description": "A comment object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Playlist", "api_description": "A playlist object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get trivia fact", "api_description": "Get a trivia fact about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "42"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "notfound", "type": "STRING", "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).", "default": "floor"}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get year fact", "api_description": "Get a fact about a year", "required_parameters": [{"name": "year", "type": "STRING", "description": "The year of interest", "default": "1492"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get math fact", "api_description": "Get a mathematical property about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "1729"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}], "query": "I need the exchange rate from EUR to GBP. Additionally, retrieve a comment from Deezer with the id '5555' and a trivia fact about the year 2022.", "relevant APIs": [["Currency Exchange", "exchange"], ["Deezer", "Comment"], ["Numbers", "Get year fact"]], "query_id": 7824}, {"api_list": [{"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "exchange", "api_description": "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1.", "required_parameters": [{"name": "from", "type": "STRING", "description": "Source Quote", "default": "SGD"}, {"name": "to", "type": "STRING", "description": "Destination Quote", "default": "MYR"}], "optional_parameters": [{"name": "q", "type": "NUMBER", "description": "Source Amount", "default": "1.0"}], "method": "GET"}, {"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "listquotes", "api_description": "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Playlist", "api_description": "A playlist object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Comment", "api_description": "A comment object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Genre", "api_description": "A genre object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Love Calculator", "api_name": "getPercentage", "api_description": "getPercentage", "required_parameters": [{"name": "sname", "type": "STRING", "description": "Enter second name.", "default": "Alice"}, {"name": "fname", "type": "STRING", "description": "Enter first name.", "default": "John"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get a Specific Team", "api_description": "This endpoint retrieves a specific team", "required_parameters": [{"name": "id", "type": "STRING", "description": "The ID of the team", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get a Specific Game", "api_description": "This endpoint retrieves a specific game", "required_parameters": [{"name": "id", "type": "STRING", "description": "ID of the game", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get All Players", "api_description": "This endpoint retrieves all players from all seasons.", "required_parameters": [], "optional_parameters": [{"name": "page", "type": "STRING", "description": "The page number, used for pagination.", "default": "0"}, {"name": "per_page", "type": "STRING", "description": "The number of results returned per call, used for pagination.", "default": "25"}, {"name": "search", "type": "STRING", "description": "Used to filter players based on their name. For example, ?search=davis will return players that have 'davis' in their first or last name.", "default": ""}], "method": "GET", "template_response": {"data": [{"id": "int", "first_name": "str", "height_feet": "NoneType", "height_inches": "NoneType", "last_name": "str", "position": "str", "team": {"id": "int", "abbreviation": "str", "city": "str", "conference": "str", "division": "str", "full_name": "str", "name": "str"}, "weight_pounds": "NoneType", "_list_length": 25}], "meta": {"total_pages": "int", "current_page": "int", "next_page": "int", "per_page": "int", "total_count": "int"}}}], "query": "I'm planning a surprise party for my best friend's birthday. Can you suggest some funny Chuck Norris jokes to include in the party decorations? Also, I need to calculate the love percentage between my friend and their partner to add a romantic touch to the event. Additionally, can you recommend a playlist from Deezer to set the mood for the party?", "relevant APIs": [["Chuck Norris", "/jokes/search"], ["Love Calculator", "getPercentage"], ["Deezer", "Playlist"]], "query_id": 7846}, {"api_list": [{"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "listquotes", "api_description": "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Data", "tool_name": "Currency Exchange", "api_name": "exchange", "api_description": "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1.", "required_parameters": [{"name": "from", "type": "STRING", "description": "Source Quote", "default": "SGD"}, {"name": "to", "type": "STRING", "description": "Destination Quote", "default": "MYR"}], "optional_parameters": [{"name": "q", "type": "NUMBER", "description": "Source Amount", "default": "1.0"}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get trivia fact", "api_description": "Get a trivia fact about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "42"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "notfound", "type": "STRING", "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).", "default": "floor"}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get math fact", "api_description": "Get a mathematical property about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "1729"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get year fact", "api_description": "Get a fact about a year", "required_parameters": [{"name": "year", "type": "STRING", "description": "The year of interest", "default": "1492"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Love Calculator", "api_name": "getPercentage", "api_description": "getPercentage", "required_parameters": [{"name": "sname", "type": "STRING", "description": "Enter second name.", "default": "Alice"}, {"name": "fname", "type": "STRING", "description": "Enter first name.", "default": "John"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Genre", "api_description": "A genre object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "* Search", "api_description": "Search tracks", "required_parameters": [{"name": "q", "type": "STRING", "description": "", "default": "eminem"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Album", "api_description": "An album object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The Deezer album id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get Specific Player", "api_description": "This endpoint retrieves a specific player.", "required_parameters": [{"name": "id", "type": "NUMBER", "description": "The ID of the player to retrieve", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get All Games", "api_description": "This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.", "required_parameters": [], "optional_parameters": [{"name": "page", "type": "STRING", "description": "The page number, used for pagination.", "default": "0"}, {"name": "per_page", "type": "STRING", "description": "The number of results returned per call, used for pagination.", "default": "25"}, {"name": "team_ids", "type": "STRING", "description": "An array of team_ids", "default": ""}, {"name": "date", "type": "STRING", "description": "An array of dates formatted in 'YYYY-MM-DD'", "default": ""}, {"name": "Seasons", "type": "STRING", "description": "An array of seasons", "default": ""}], "method": "GET", "template_response": {"data": [{"id": "int", "date": "str", "home_team": {"id": "int", "abbreviation": "str", "city": "str", "conference": "str", "division": "str", "full_name": "str", "name": "str"}, "home_team_score": "int", "period": "int", "postseason": "bool", "season": "int", "status": "str", "time": "str", "visitor_team": {"id": "int", "abbreviation": "str", "city": "str", "conference": "str", "division": "str", "full_name": "str", "name": "str"}, "visitor_team_score": "int", "_list_length": 25}], "meta": {"total_pages": "int", "current_page": "int", "next_page": "int", "per_page": "int", "total_count": "int"}}}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get All Stats", "api_description": "Retrieves all stats", "required_parameters": [], "optional_parameters": [{"name": "seasons", "type": "STRING", "description": "An array of seasons", "default": ""}, {"name": "page", "type": "STRING", "description": "The page number, used for pagination.", "default": "0"}, {"name": "per_page", "type": "STRING", "description": "The number of results returned per call, used for pagination.", "default": "25"}, {"name": "player_ids", "type": "STRING", "description": "An array of player_ids", "default": ""}, {"name": "dates", "type": "STRING", "description": "An array of dates formatted in 'YYYY-MM-DD'", "default": ""}, {"name": "game_ids", "type": "STRING", "description": "An array of game_ids", "default": ""}], "method": "GET", "template_response": "{\"data\": [{\"id\": \"int\", \"ast\": \"int\", \"blk\": \"int\", \"dreb\": \"int\", \"fg3_pct\": \"float\", \"fg3a\": \"int\", \"fg3m\": \"int\", \"fg_pct\": \"float\", \"fga\": \"int\", \"fgm\": \"int\", \"ft_pct\": \"float\", \"fta\": \"int\", \"ftm\": \"int\", \"game\": {\"id\": \"int\", \"date\": \"str\", \"home_team_id\": \"int\", \"home_team_score\": \"int\", \"period\": \"int\", \"postseason\": \"bool\", \"season\": \"int\", \"status\": \"str\", \"time\": \"str\", \"visitor_team_id\": \"int\", \"visitor_team_score\": \"int\"}, \"min\": \"str\", \"oreb\": \"int\", \"pf\": \"int\", \"player\": {\"id\": \"int\", \"first_name\": \"str\", \"height_feet\": \"NoneType\", \"height_inches\": \"NoneType\", \"last_name\": \"str\", \"position\": \"str\", \"team_id\": \"int\", \"weight_pounds\": \"NoneType\"}, \"pts\": \"int\", \"reb\": \"int\", \"stl\": \"int\", \"team\": {\"id\": \"int\", \"abbreviation\": \"str\", \"city\": \"str\", \"conference\": \"str\", \"division\": \"str\", \"full_name\": \"str\", \"name\": \"str\"}, \"turnover\": \"int\", \"_list_length\": 25}], \"meta\": {\"total_pages\": \"int\", \"current_page\": \"int\", \"next_page\": \"int\", \"per_page\": \"int\", \"total_count\": \"i"}], "query": "I'm planning a family trip to Europe and I need to exchange some currency. Can you provide me with the current exchange rate from USD to EUR? Also, I'd like to search for the top tracks by Eminem.", "relevant APIs": [["Currency Exchange", "exchange"], ["Deezer", "* Search"]], "query_id": 7873}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Artist", "api_description": "An artist object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The artist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "* Search", "api_description": "Search tracks", "required_parameters": [{"name": "q", "type": "STRING", "description": "", "default": "eminem"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Genre", "api_description": "A genre object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Love Calculator", "api_name": "getPercentage", "api_description": "getPercentage", "required_parameters": [{"name": "sname", "type": "STRING", "description": "Enter second name.", "default": "Alice"}, {"name": "fname", "type": "STRING", "description": "Enter first name.", "default": "John"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get random fact", "api_description": "Get result by random number", "required_parameters": [{"name": "type", "type": "STRING", "description": "One of \"trivia\", \"math\", \"date\", or \"year\"", "default": "trivia"}], "optional_parameters": [{"name": "min", "type": "STRING", "description": "Minimum number, inclusive", "default": "10"}, {"name": "max", "type": "STRING", "description": "Maximium number, inclusive", "default": "20"}, {"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get date fact", "api_description": "Get a fact about a day of year", "required_parameters": [{"name": "month", "type": "STRING", "description": "The 1-indexed month (eg. 6 for June)", "default": "6"}, {"name": "day", "type": "STRING", "description": "The day of the month", "default": "21"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get trivia fact", "api_description": "Get a trivia fact about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "42"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "notfound", "type": "STRING", "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).", "default": "floor"}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get Specific Player", "api_description": "This endpoint retrieves a specific player.", "required_parameters": [{"name": "id", "type": "NUMBER", "description": "The ID of the player to retrieve", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get All Players", "api_description": "This endpoint retrieves all players from all seasons.", "required_parameters": [], "optional_parameters": [{"name": "page", "type": "STRING", "description": "The page number, used for pagination.", "default": "0"}, {"name": "per_page", "type": "STRING", "description": "The number of results returned per call, used for pagination.", "default": "25"}, {"name": "search", "type": "STRING", "description": "Used to filter players based on their name. For example, ?search=davis will return players that have 'davis' in their first or last name.", "default": ""}], "method": "GET", "template_response": {"data": [{"id": "int", "first_name": "str", "height_feet": "NoneType", "height_inches": "NoneType", "last_name": "str", "position": "str", "team": {"id": "int", "abbreviation": "str", "city": "str", "conference": "str", "division": "str", "full_name": "str", "name": "str"}, "weight_pounds": "NoneType", "_list_length": 25}], "meta": {"total_pages": "int", "current_page": "int", "next_page": "int", "per_page": "int", "total_count": "int"}}}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get a Specific Game", "api_description": "This endpoint retrieves a specific game", "required_parameters": [{"name": "id", "type": "STRING", "description": "ID of the game", "default": ""}], "optional_parameters": [], "method": "GET"}], "query": "I'm planning a surprise birthday party for my best friend and I want to create a playlist of his favorite tracks. Can you recommend some popular artists and tracks from Deezer that he likes? Also, provide me with a random fact about a specific player from the NBA.", "relevant APIs": [["Deezer", "Artist"], ["Deezer", "* Search"], ["Free NBA", "Get Specific Player"]], "query_id": 7940}, {"api_list": [{"category_name": "Social", "tool_name": "Tronald Dump", "api_name": "/tag/{tag}", "api_description": "Retrieve a quotes by a given tag.", "required_parameters": [{"name": "tag", "type": "STRING", "description": "", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Tronald Dump", "api_name": "/random/quote", "api_description": "Retrieve a random quote.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"appeared_at": "str", "created_at": "str", "quote_id": "str", "tags": ["list of str with length 1"], "updated_at": "str", "value": "str", "_embedded": {"author": [{"author_id": "str", "bio": "NoneType", "created_at": "str", "name": "str", "slug": "str", "updated_at": "str", "_links": {"self": {"href": "str"}}, "_list_length": 1}], "source": [{"created_at": "str", "filename": "NoneType", "quote_source_id": "str", "remarks": "NoneType", "updated_at": "str", "url": "str", "_links": {"self": {"href": "str"}}, "_list_length": 1}]}, "_links": {"self": {"href": "str"}}}}, {"category_name": "Social", "tool_name": "Tronald Dump", "api_name": "Quote", "api_description": "Get quote by id", "required_parameters": [{"name": "id", "type": "STRING", "description": "", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Search", "tool_name": "SuperHero Search", "api_name": "Search", "api_description": "This endpoint searches through our superhero database", "required_parameters": [], "optional_parameters": [{"name": "hero", "type": "STRING", "description": "The name or superhero name of the hero", "default": "Spiderman"}, {"name": "regex", "type": "STRING", "description": "", "default": ""}], "method": "GET", "template_response": {"id": "int", "name": "str", "slug": "str", "powerstats": {"intelligence": "int", "strength": "int", "speed": "int", "durability": "int", "power": "int", "combat": "int"}, "appearance": {"gender": "str", "race": "str", "height": ["list of str with length 2"], "weight": ["list of str with length 2"], "eyeColor": "str", "hairColor": "str"}, "biography": {"fullName": "str", "alterEgos": "str", "aliases": ["list of str with length 15"], "placeOfBirth": "str", "firstAppearance": "str", "publisher": "str", "alignment": "str"}, "work": {"occupation": "str", "base": "str"}, "connections": {"groupAffiliation": "str", "relatives": "str"}, "images": {"xs": "str", "sm": "str", "md": "str", "lg": "str"}}}, {"category_name": "Search", "tool_name": "SuperHero Search", "api_name": "Villains", "api_description": "Return 20 random Villains", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "name": "str", "slug": "str", "powerstats": {"intelligence": "int", "strength": "int", "speed": "int", "durability": "int", "power": "int", "combat": "int"}, "appearance": {"gender": "str", "race": "NoneType", "height": ["list of str with length 2"], "weight": ["list of str with length 2"], "eyeColor": "str", "hairColor": "str"}, "biography": {"fullName": "str", "alterEgos": "str", "aliases": ["list of str with length 1"], "placeOfBirth": "str", "firstAppearance": "str", "publisher": "str", "alignment": "str"}, "work": {"occupation": "str", "base": "str"}, "connections": {"groupAffiliation": "str", "relatives": "str"}, "images": {"xs": "str", "sm": "str", "md": "str", "lg": "str"}}}, {"category_name": "Search", "tool_name": "SuperHero Search", "api_name": "Heroes", "api_description": "Return a list of 20 random heroes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "name": "str", "slug": "str", "powerstats": {"intelligence": "int", "strength": "int", "speed": "int", "durability": "int", "power": "int", "combat": "int"}, "appearance": {"gender": "str", "race": "str", "height": ["list of str with length 2"], "weight": ["list of str with length 2"], "eyeColor": "str", "hairColor": "str"}, "biography": {"fullName": "str", "alterEgos": "str", "aliases": ["list of str with length 5"], "placeOfBirth": "str", "firstAppearance": "str", "publisher": "str", "alignment": "str"}, "work": {"occupation": "str", "base": "str"}, "connections": {"groupAffiliation": "str", "relatives": "str"}, "images": {"xs": "str", "sm": "str", "md": "str", "lg": "str"}}}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get random fact", "api_description": "Get result by random number", "required_parameters": [{"name": "type", "type": "STRING", "description": "One of \"trivia\", \"math\", \"date\", or \"year\"", "default": "trivia"}], "optional_parameters": [{"name": "min", "type": "STRING", "description": "Minimum number, inclusive", "default": "10"}, {"name": "max", "type": "STRING", "description": "Maximium number, inclusive", "default": "20"}, {"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get year fact", "api_description": "Get a fact about a year", "required_parameters": [{"name": "year", "type": "STRING", "description": "The year of interest", "default": "1492"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get math fact", "api_description": "Get a mathematical property about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "1729"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}], "query": "Can you help me find some interesting facts about superheroes? I'm particularly interested in their appearances, powers, and connections. Also, I'd like to know if there are any famous quotes by superheroes like Spiderman or Batman.", "relevant APIs": [["SuperHero Search", "Search"], ["SuperHero Search", "Heroes"], ["SuperHero Search", "Villains"], ["Tronald Dump", "/random/quote"]], "query_id": 8198}, {"api_list": [{"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get global stats", "api_description": "These global statistics tell about the data available on coinranking.", "required_parameters": [], "optional_parameters": [{"name": "referenceCurrencyUuid", "type": "STRING", "description": "UUID of reference currency, in which all the prices are calculated. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl", "default": "yhjMzLPhuIDl"}], "method": "GET", "template_response": {"status": "str", "data": {"referenceCurrencyRate": "int", "totalCoins": "int", "totalMarkets": "int", "totalExchanges": "int", "totalMarketCap": "str", "total24hVolume": "str", "btcDominance": "float", "bestCoins": [{"uuid": "str", "symbol": "str", "name": "str", "iconUrl": "str", "coinrankingUrl": "str", "_list_length": 3}], "newestCoins": [{"uuid": "str", "symbol": "str", "name": "str", "iconUrl": "str", "coinrankingUrl": "str", "_list_length": 3}]}}}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get coin OHLC data", "api_description": "Get OHLC (Open High Low Close) data for the coin throughout time.\nThis endpoint requires the **ultra** plan or higher.\n\n**Beta**\nThe OHLC endpoint is currently in beta. This means we might make some changes that could be considered breaking for your application, and we expect to have downtime every now and then while we are still in beta.", "required_parameters": [{"name": "uuid", "type": "string", "description": "UUID of the coin you want to request. UUIDs of coins can be found using the Get coins endpoint or by checking the URL on coinranking.com, e.g. https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc is the URL for Bitcoin, and the part before the + (Qwsogvtv82FCd) is the UUID.", "default": "Qwsogvtv82FCd"}], "optional_parameters": [{"name": "referenceCurrencyUuid", "type": "STRING", "description": "UUID of reference currency, in which all the prices are calculated. Defaults to US Dollar.\n\nDefault value: yhjMzLPhuIDl", "default": "yhjMzLPhuIDl"}, {"name": "limit", "type": "NUMBER", "description": "Limit the amount of time periods for which the OHLC data is retrieved. For example, when interval=hour and limit is 10, data will be returned for the last 10 hours.\n\nDefault value: 50\nSize range: 0-100", "default": ""}, {"name": "interval", "type": "STRING", "description": "The interval determines the time period over which each OHLC item is determined.\n\nDefault value: day\nAllowed values:\nminute 5minutes hour 8hours day week month", "default": "day"}], "method": "GET", "template_response": {"status": "str", "type": "str", "message": "str"}}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get exchange markets", "api_description": "Find markets on a specific exchange.\nThis endpoint requires the **ultra** plan or higher.", "required_parameters": [{"name": "uuid", "type": "string", "description": "UUID of the exchange you want to request markets for", "default": "-zdvbieRdZ"}], "optional_parameters": [{"name": "referenceCurrencyUuid", "type": "STRING", "description": "UUID of reference currency, which rate is used to calculate the volume. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl", "default": "yhjMzLPhuIDl"}, {"name": "offset", "type": "NUMBER", "description": "Offset. Used for pagination\n\nDefault value: 0", "default": "0"}, {"name": "orderBy", "type": "STRING", "description": "Index to sort on. Default is 24h volume.\n\nDefault value: 24hVolume\nAllowed values:\n24hVolume price", "default": "24hVolume"}, {"name": "search", "type": "STRING", "description": "Value to search for within results, e.g. exchange names, currency names, or currency symbols", "default": ""}, {"name": "limit", "type": "NUMBER", "description": "Limit. Used for pagination\n\nDefault value: 50\nSize range: 0-100", "default": "50"}, {"name": "orderDirection", "type": "STRING", "description": "Order in ascending or descending order\n\nDefault value: desc\nAllowed values:\ndesc asc", "default": "desc"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "AssetById", "api_description": "Retrieves the details of an individual asset. Supply the unique identifier (UUID) of the asset.\n\nThe full list of all asset details can be obtained from the Asset endpoint.", "required_parameters": [{"name": "id", "type": "STRING", "description": "The unique resource identifier (UUID) of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"status": "str", "timestamp": "str", "message": "str"}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "DailyOHLCV", "api_description": "This endpoint returns end-of-day open, high, low, close prices and volumes (OHLCV) for market weighted averages (MWA) or global weighted averages (GWA). The 24hr period for end of day is based on an open/close at 00:00:00 UTC. Parameters may be used to select the data required. \n\nBNC uses universal identifiers (UUIDs) for assets and markets. Each index type will have a UUID which identifies the constituent type used to build the index:\n\n| Index Type | Index Id  | Output |\n| -----------|:---------:|:---------:|\n| MWA        | Market Id | OHLCV for that market |\n| GWA        | Asset Id  | OHLCV for that coin / asset |\n\nThe UUIDs for assets or markets may be found from the Lookups with those names.\n\nIf no timestamp is provided, then only the latest values are returned. With a timestamp, records are returned in reverse date order, the number determining how far back  controlled by the size parameter. \n\nAn authentication token is required. Obtain a token valid for 24 hours from the GetToken endpoint.", "required_parameters": [], "optional_parameters": [{"name": "timestamp", "type": "STRING", "description": "Retrieve all daily OHLCV records up to the timestamp provided. All dates are stored in UTC. Timestamp strings should be in the form  YYYY-MM-DDThh:mm:ssZ", "default": ""}, {"name": "size", "type": "NUMBER", "description": "Integer 1 to 2000. Default 10. The maximum size to return in the result set up to the overall limit of 2000. This parameter is ignored if no timestamp is provided. Otherwise, since records are in reverse data order, use in conjunction with timestamp to make selections back in time.", "default": "10"}, {"name": "startAfter", "type": "STRING", "description": "UUID. Retrieve OHLCV for the indexId or indexType required, starting after this particular record id. Every record in the dataset has a universal identifier (UUID). This parameter provides for pagination through large selections since every response includes a nextId that can be used here.", "default": ""}, {"name": "indexType", "type": "STRING", "description": "Restrict the OHLCV results to the index type. Either MWA or GWA.", "default": ""}, {"name": "indexId", "type": "STRING", "description": "Retrieve all the OHLCV values for a particular asset or market by its id. The index id is a universal identifier (UUID) that will differ based on the index type.\n\n| Index Type | Index Id  |\n| -----------|:---------:|\n| MWA        |Market Id  |\n| GWA        |Asset Id   |\n\nUUIDs for assets or markets can be identified from their endpoints in Lookups.", "default": ""}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "AssetTicker", "api_description": "This free endpoint will return the latest details for an asset refreshed every 5 minutes with global USD spot price, 24 hour volume and supply.  The optional percentChange parameter provides the 1, 7 and 30 day percentage movements as additional payload.   \n\nSupply the unique identifier (UUID) for an asset.  The UUID for any asset may be found from the Assets endpoint in Lookups.\n\nA security token is required for the Authorization Header. Obtain a token valid for 24 hours from the GetToken endpoint.", "required_parameters": [{"name": "assetId", "type": "STRING", "description": "UUID. The unique resource identifier of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f", "default": ""}], "optional_parameters": [{"name": "percentChange", "type": "STRING", "description": "true or false (default).  When true the  percentage changes in the price and 24 hour volume across 1, 7 and 30 days will be included in the response payload. ", "default": ""}], "method": "GET"}, {"category_name": "Financial", "tool_name": "CurrencyAPI.net", "api_name": "Currencies", "api_description": "Gets list of currencies we support", "required_parameters": [], "optional_parameters": [{"name": "output", "type": "STRING", "description": "The output of the response. Either JSON or XML", "default": "JSON"}], "method": "GET", "template_response": "{\"valid\": \"bool\", \"currencies\": {\"AED\": \"str\", \"AFN\": \"str\", \"ALL\": \"str\", \"AMD\": \"str\", \"ANG\": \"str\", \"AOA\": \"str\", \"ARS\": \"str\", \"AUD\": \"str\", \"AWG\": \"str\", \"AZN\": \"str\", \"BAM\": \"str\", \"BBD\": \"str\", \"BCH\": \"str\", \"BDT\": \"str\", \"BGN\": \"str\", \"BHD\": \"str\", \"BIF\": \"str\", \"BMD\": \"str\", \"BND\": \"str\", \"BOB\": \"str\", \"BRL\": \"str\", \"BSD\": \"str\", \"BTC\": \"str\", \"BTG\": \"str\", \"BWP\": \"str\", \"BZD\": \"str\", \"CAD\": \"str\", \"CDF\": \"str\", \"CHF\": \"str\", \"CLP\": \"str\", \"CNH\": \"str\", \"CNY\": \"str\", \"COP\": \"str\", \"CRC\": \"str\", \"CUC\": \"str\", \"CUP\": \"str\", \"CVE\": \"str\", \"CZK\": \"str\", \"DASH\": \"str\", \"DJF\": \"str\", \"DKK\": \"str\", \"DOP\": \"str\", \"DZD\": \"str\", \"EGP\": \"str\", \"EOS\": \"str\", \"ETB\": \"str\", \"ETH\": \"str\", \"EUR\": \"str\", \"FJD\": \"str\", \"GBP\": \"str\", \"GEL\": \"str\", \"GHS\": \"str\", \"GIP\": \"str\", \"GMD\": \"str\", \"GNF\": \"str\", \"GTQ\": \"str\", \"GYD\": \"str\", \"HKD\": \"str\", \"HNL\": \"str\", \"HRK\": \"str\", \"HTG\": \"str\", \"HUF\": \"str\", \"IDR\": \"str\", \"ILS\": \"str\", \"INR\": \"str\", \"IQD\": \"str\", \"IRR\": \"str\", \"ISK\": \"str\", \"JMD\": \"str\", "}, {"category_name": "Financial", "tool_name": "CurrencyAPI.net", "api_name": "Timeframe", "api_description": "Display a currency conversion's historical rates within a given timeframe", "required_parameters": [{"name": "end_date", "type": "DATE (YYYY-MM-DD)", "description": "Display the start date you wish to get the historical data from. Eg 2010-12-29", "default": ""}, {"name": "base", "type": "STRING", "description": "The currency code you want to get the historical data of. Eg, USD", "default": "USD"}, {"name": "start_date", "type": "DATE (YYYY-MM-DD)", "description": "Display the start date you wish to get the historical data from. Eg 2010-12-25", "default": ""}], "optional_parameters": [{"name": "output", "type": "STRING", "description": "The output of the response. Either JSON or XML", "default": "JSON"}], "method": "GET", "template_response": {"valid": "bool", "error": {"code": "int", "message": "str"}}}, {"category_name": "Financial", "tool_name": "CurrencyAPI.net", "api_name": "History", "api_description": "Display the currency conversions historical rates for a particular day", "required_parameters": [{"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "Display the single date you wish to get the historical data from. Eg 2010-12-25", "default": ""}, {"name": "base", "type": "STRING", "description": "The currency code you wish to get the historical rates of. Eg, USD", "default": "USD"}], "optional_parameters": [{"name": "output", "type": "STRING", "description": "The output of the response. Either JSON or XML", "default": "JSON"}], "method": "GET", "template_response": {"valid": "bool", "error": {"code": "int", "message": "str"}}}, {"category_name": "Entertainment", "tool_name": "Coin Flip", "api_name": "Heads / Tails", "api_description": "Returns an outcome. Either heads or tails", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I want to surprise my family with a cryptocurrency-themed treasure hunt. Can you fetch the latest details for an asset using the BraveNewCoin API? It would be great if you could also provide me with the outcome of a coin flip using the Coin Flip API to determine the starting point of the treasure hunt.", "relevant APIs": [["BraveNewCoin", "AssetById"], ["Coin Flip", "Heads / Tails"]], "query_id": 8320}, {"api_list": [{"category_name": "Music", "tool_name": "Shazam", "api_name": "songs/list-artist-top-tracks (Deprecated)", "api_description": "List top tracks of specific artist", "required_parameters": [{"name": "id", "type": "STRING", "description": "The id field inside artists json object returned from .../songs/detect or .../search endpoint", "default": "40008598"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"tracks\": [{\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 2}], \"providers\": [{\"caption\": \"str\", \"images\": {\"overflow\": \"str\", \"default\": \"str\"}, \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}], \"type\": \"str\", \"_list_length\": 2}], \"explicit\": \"bool\", \"displayname\": \"str\"}, "}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "songs/get-related-artist", "api_description": "Get artist related to a song", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'songs->id' field returned from .../shazam-songs/get-details endpoint", "default": "1217912247"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"data": [{"id": "str", "type": "str", "attributes": {"genreNames": ["list of str with length 1"], "name": "str", "editorialNotes": {"name": "str", "standard": "str", "short": "str"}, "artwork": {"width": "int", "url": "str", "height": "int", "textColor3": "str", "textColor2": "str", "textColor4": "str", "textColor1": "str", "bgColor": "str", "hasP3": "bool"}, "url": "str"}, "relationships": {"albums": {"data": [{"id": "str", "type": "str", "_list_length": 25}]}}, "_list_length": 1}]}}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "songs/v2/get-details", "api_description": "Get details information of specific song", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'songs->id' field returned from .../shazam-songs/get-details endpoint", "default": "1217912247"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"data": [{"id": "str", "type": "str", "attributes": {"hasTimeSyncedLyrics": "bool", "albumName": "str", "genreNames": ["list of str with length 2"], "trackNumber": "int", "releaseDate": "str", "durationInMillis": "int", "isVocalAttenuationAllowed": "bool", "isMasteredForItunes": "bool", "isrc": "str", "artwork": {"width": "int", "url": "str", "height": "int", "textColor3": "str", "textColor2": "str", "textColor4": "str", "textColor1": "str", "bgColor": "str", "hasP3": "bool"}, "composerName": "str", "audioLocale": "str", "url": "str", "playParams": {"id": "str", "kind": "str"}, "discNumber": "int", "isAppleDigitalMaster": "bool", "hasLyrics": "bool", "audioTraits": ["list of str with length 2"], "name": "str", "previews": [{"url": "str", "_list_length": 1}], "artistName": "str"}, "relationships": {"artists": {"data": [{"id": "str", "type": "str", "_list_length": 1}]}, "albums": {"data": [{"id": "str", "type": "str", "_list_length": 1}]}}, "_list_length": 1}]}}, {"category_name": "Entertainment", "tool_name": "Chart Lyrics", "api_name": "/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad", "api_description": "Sample API request to search Lyrics", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm a music enthusiast and I'm looking for new songs to add to my playlist. Can you suggest the top tracks of various artists across different genres? It would be awesome if you could also provide me with random quotes related to music.", "relevant APIs": [["Shazam", "songs/list-artist-top-tracks (Deprecated)"], ["Shazam", "songs/v2/get-details"], ["Shazam", "songs/get-related-artist"], ["Chart Lyrics", "/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad"]], "query_id": 8416}, {"api_list": [{"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/song/download", "api_description": "Download one song, the result is a url which you can get the song.", "required_parameters": [{"name": "track_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934/the-phoenix"}], "optional_parameters": [], "method": "GET", "template_response": {"url": "str"}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/search", "api_description": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "required_parameters": [{"name": "type", "type": "STRING", "description": "", "default": "all"}, {"name": "query", "type": "STRING", "description": "", "default": "almost lover"}], "optional_parameters": [], "method": "GET", "template_response": {"index": "int", "artist": "str", "url": "str", "itemName": "str", "name": "str", "type": "str"}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/playlist/info", "api_description": "Get playlist info.", "required_parameters": [{"name": "playlist_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/vghc3eihbsdq/sets/almost-lover"}], "optional_parameters": [], "method": "GET", "template_response": "{\"id\": \"int\", \"title\": \"str\", \"url\": \"str\", \"description\": \"str\", \"thumbnail\": \"str\", \"author\": {\"profile\": \"str\", \"username\": \"str\", \"name\": \"str\", \"urn\": \"int\"}, \"embedURL\": \"str\", \"embed\": \"NoneType\", \"genre\": \"str\", \"trackCount\": \"int\", \"tracks\": [{\"artwork_url\": \"str\", \"caption\": \"NoneType\", \"commentable\": \"bool\", \"comment_count\": \"int\", \"created_at\": \"str\", \"description\": \"str\", \"downloadable\": \"bool\", \"download_count\": \"int\", \"duration\": \"int\", \"full_duration\": \"int\", \"embeddable_by\": \"str\", \"genre\": \"str\", \"has_downloads_left\": \"bool\", \"id\": \"int\", \"kind\": \"str\", \"label_name\": \"str\", \"last_modified\": \"str\", \"license\": \"str\", \"likes_count\": \"int\", \"permalink\": \"str\", \"permalink_url\": \"str\", \"playback_count\": \"int\", \"public\": \"bool\", \"publisher_metadata\": {\"id\": \"int\", \"urn\": \"str\", \"artist\": \"str\", \"contains_music\": \"bool\", \"isrc\": \"str\", \"writer_composer\": \"str\"}, \"purchase_title\": \"NoneType\", \"purchase_url\": \"NoneType\", \"release_date\": \"NoneType\", \"reposts_count\": \"int\", \"secr"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "songs/list-artist-top-tracks (Deprecated)", "api_description": "List top tracks of specific artist", "required_parameters": [{"name": "id", "type": "STRING", "description": "The id field inside artists json object returned from .../songs/detect or .../search endpoint", "default": "40008598"}], "optional_parameters": [{"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"tracks\": [{\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 2}], \"providers\": [{\"caption\": \"str\", \"images\": {\"overflow\": \"str\", \"default\": \"str\"}, \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}], \"type\": \"str\", \"_list_length\": 2}], \"explicit\": \"bool\", \"displayname\": \"str\"}, "}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "charts/track", "api_description": "Get all popular songs in specific chart", "required_parameters": [], "optional_parameters": [{"name": "listId", "type": "STRING", "description": "The value of listId field returned in .../charts/list endpoint", "default": ""}, {"name": "pageSize", "type": "NUMBER", "description": "Used for paging purpose, 20 items per response is maximum.", "default": "20"}, {"name": "startFrom", "type": "NUMBER", "description": "Used for paging purpose.", "default": "0"}, {"name": "locale", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": "{\"properties\": {}, \"tracks\": [{\"layout\": \"str\", \"type\": \"str\", \"key\": \"str\", \"title\": \"str\", \"subtitle\": \"str\", \"share\": {\"subject\": \"str\", \"text\": \"str\", \"href\": \"str\", \"image\": \"str\", \"twitter\": \"str\", \"html\": \"str\", \"avatar\": \"str\", \"snapchat\": \"str\"}, \"images\": {\"background\": \"str\", \"coverart\": \"str\", \"coverarthq\": \"str\", \"joecolor\": \"str\"}, \"hub\": {\"type\": \"str\", \"image\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"id\": \"str\", \"_list_length\": 2}], \"options\": [{\"caption\": \"str\", \"actions\": [{\"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 2}], \"beacondata\": {\"type\": \"str\", \"providername\": \"str\"}, \"image\": \"str\", \"type\": \"str\", \"listcaption\": \"str\", \"overflowimage\": \"str\", \"colouroverflowimage\": \"bool\", \"providername\": \"str\", \"_list_length\": 1}], \"explicit\": \"bool\", \"displayname\": \"str\"}, \"artists\": [{\"alias\": \"str\", \"id\": \"str\", \"adamid\": \"str\", \"_list_length\": 1}], \"url\": \"str\", \"highlightsurls\": {\"artisthighlightsurl\": \"str\", \"trackhighlighturl\": \"str\"}, \"prope"}, {"category_name": "Music", "tool_name": "Shazam", "api_name": "artists/get-latest-release", "api_description": "Get latest release of an artist", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of 'artist->adamid' field returned in .../search OR .../songs/v2/detect OR .../songs/get-details endpoint\nThe value of 'artists->id' field returned in .../shazam-songs/get-details OR .../albums/get-details OR .../albums/get-related-artist", "default": "567072"}], "optional_parameters": [{"name": "l", "type": "STRING", "description": "The language code", "default": "en-US"}], "method": "GET", "template_response": {"data": [{"id": "str", "type": "str", "attributes": {"copyright": "str", "genreNames": ["list of str with length 2"], "releaseDate": "str", "isMasteredForItunes": "bool", "upc": "str", "artwork": {"width": "int", "url": "str", "height": "int", "textColor3": "str", "textColor2": "str", "textColor4": "str", "textColor1": "str", "bgColor": "str", "hasP3": "bool"}, "url": "str", "playParams": {"id": "str", "kind": "str"}, "recordLabel": "str", "trackCount": "int", "isCompilation": "bool", "isPrerelease": "bool", "audioTraits": ["list of str with length 2"], "isSingle": "bool", "name": "str", "artistName": "str", "contentRating": "str", "editorialNotes": {"standard": "str", "short": "str", "tagline": "str"}, "isComplete": "bool"}, "_list_length": 1}]}}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Editorial", "api_description": "An editorial object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Album", "api_description": "An album object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The Deezer album id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Infos", "api_description": "Get the infos about the api in the current country", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "SongMeanings", "api_name": "lyrics.get", "api_description": "Retrieves lyrics and lyric related data for a specific song.", "required_parameters": [{"name": "sm_lid", "type": "STRING", "description": "SongMeanings Lyric ID. When specified, this parameter will bypass any other lyric identification parameters.", "default": ""}, {"name": "lyric_title", "type": "STRING", "description": "Song or track title.", "default": ""}, {"name": "artist_name", "type": "STRING", "description": "Artist name.", "default": ""}, {"name": "format", "type": "STRING", "description": "Decide the output type (either xml or json); xml is default.", "default": ""}], "optional_parameters": [{"name": "spotify_id", "type": "STRING", "description": "If specified, a match will attempt to be made via spotify_id. Please note that if parameter is used, the API will also require lyric_title and artist_name as a backup attempt.", "default": ""}, {"name": "count", "type": "STRING", "description": "This parameter is used to track, and report, any offline cached views of lyrics.", "default": ""}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "SongMeanings", "api_name": "songs.search", "api_description": "", "required_parameters": [{"name": "q", "type": "STRING", "description": "Query string", "default": ""}], "optional_parameters": [{"name": "sm_aid", "type": "STRING", "description": "SongMeapings Artist ID. When defined, engine will search query for any song titles found under the artist specified.", "default": ""}, {"name": "q_artist", "type": "STRING", "description": "Artist name. When defined and Artist ID acquired, engine will search query for any song titles found under the artist specified. If both sm_aid and q_artist are defined, sm_aid will always supercede.", "default": ""}, {"name": "index", "type": "STRING", "description": "Additional indexes to search in addition to song titles (see further parameter values)", "default": ""}, {"name": "page", "type": "STRING", "description": "Starting page of comments", "default": "1"}, {"name": "page_size", "type": "STRING", "description": "Set how many comments returned per page", "default": "25"}, {"name": "matchmode", "type": "STRING", "description": "Configure how matching occurs (see further parameter values)", "default": "extended"}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "SongMeanings", "api_name": "users.favorite.get", "api_description": "Get a user\u2019s favorites by specified type.", "required_parameters": [{"name": "sm_uid", "type": "STRING", "description": "User ID to grab favorites for", "default": ""}], "optional_parameters": [{"name": "type", "type": "STRING", "description": "Type of favorites to retrieve (artists, lyrics)", "default": "lyrics"}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Chart Lyrics", "api_name": "/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad", "api_description": "Sample API request to search Lyrics", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I want to create a relaxing playlist for my yoga session. Can you suggest some calming tracks from Soundcloud? Also, fetch the album details of one of the recommended songs using Deezer.", "relevant APIs": [["Soundcloud", "/search"], ["Deezer", "Album"]], "query_id": 8455}, {"api_list": [{"category_name": "Weather", "tool_name": "Plant Hardiness Zone", "api_name": "Retrieve the Hardiness Zone", "api_description": "Pass a ZIP code in the endpoint path to return an object that includes the ZIP code and USDA Plant Hardiness Zone.", "required_parameters": [{"name": "zipcode", "type": "string", "description": "", "default": "90210"}], "optional_parameters": [], "method": "GET", "template_response": {"hardiness_zone": "str", "zipcode": "str"}}, {"category_name": "Food", "tool_name": "Yummly", "api_name": "categories/list", "api_description": "List all categories of recipes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"browse-categories": [{"promoted": "bool", "tracking-id": "str", "display": {"displayName": "str", "iconImage": "str", "categoryImage": "str", "tag": "str"}, "content": {}, "type": "str", "_list_length": 12}], "shopping-categories": [{"promoted": "bool", "tracking-id": "str", "display": {"displayName": "str", "categoryImage": "str", "tag": "str"}, "content": {}, "type": "str", "_list_length": 14}]}}, {"category_name": "Food", "tool_name": "Yummly", "api_name": "feeds/list-similarities", "api_description": "List similar recipes by name and author", "required_parameters": [{"name": "id", "type": "STRING", "description": "The value of id field returned in feeds/list and feeds/search API", "default": "15-Minute-Baked-Salmon-with-Lemon-9029477"}, {"name": "limit", "type": "NUMBER", "description": "Number of items returned per response", "default": "18"}, {"name": "start", "type": "NUMBER", "description": "The offset of items to be ignored in response for paging", "default": "0"}], "optional_parameters": [{"name": "apiFeedType", "type": "STRING", "description": "The value of apiFeedType field returned in feeds/list and feeds/search API", "default": "moreFrom"}, {"name": "authorId", "type": "STRING", "description": "The value of authorId field returned in feeds/list and feeds/search API", "default": "Yummly"}], "method": "GET", "template_response": "{\"feed\": [{\"seo\": {\"web\": {\"noindex\": \"bool\", \"canonical-term\": \"str\", \"meta-tags\": {\"title\": \"str\", \"description\": \"str\"}, \"link-tags\": [{\"rel\": \"str\", \"href\": \"str\", \"_list_length\": 3}], \"image-url\": \"str\", \"redirect\": {\"permanent\": \"bool\", \"path\": \"str\", \"locale\": \"str\", \"domain\": \"str\"}}, \"spotlightSearch\": {\"keywords\": [\"list of str with length 20\"], \"noindex\": \"bool\"}, \"firebase\": {\"webUrl\": \"str\", \"appUrl\": \"str\", \"name\": \"str\", \"description\": \"str\"}}, \"tracking-id\": \"str\", \"locale\": \"str\", \"content\": {\"description\": {\"mobileSectionName\": \"str\", \"text\": \"str\", \"shortText\": \"NoneType\"}, \"urbSubmitters\": \"empty list\", \"tags\": {\"course\": [{\"display-name\": \"str\", \"tag-url\": \"str\", \"_list_length\": 1}], \"cuisine\": [{\"display-name\": \"str\", \"tag-url\": \"str\", \"_list_length\": 1}], \"difficulty\": [{\"display-name\": \"str\", \"tag-url\": \"str\", \"_list_length\": 1}], \"nutrition\": [{\"display-name\": \"str\", \"tag-url\": \"str\", \"_list_length\": 5}]}, \"preparationSteps\": [\"list of str with length 7\"], \"vid"}, {"category_name": "Food", "tool_name": "Yummly", "api_name": "tags/list", "api_description": "List all tags in which recipes are group together", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": "{\"de-DE\": {\"user-diet\": [{\"id\": \"str\", \"description\": \"str\", \"localesAvailableIn\": [\"list of str with length 6\"], \"value-type\": \"str\", \"ordinal\": \"NoneType\", \"exclusive?\": \"bool\", \"name\": \"NoneType\", \"_list_length\": 6}], \"picker-units\": {\"imperial\": [\"list of list with length 14\"], \"metric\": [\"list of list with length 13\"]}, \"user-allergy\": [{\"id\": \"str\", \"description\": \"str\", \"localesAvailableIn\": [\"list of str with length 2\"], \"value-type\": \"str\", \"ordinal\": \"int\", \"exclusive?\": \"bool\", \"name\": \"str\", \"_list_length\": 10}], \"course\": [{\"description\": \"str\", \"localesAvailableIn\": [\"list of str with length 2\"], \"searchValue\": \"str\", \"name\": \"str\", \"type\": \"str\", \"ordinal\": \"NoneType\", \"imageUrl\": \"NoneType\", \"id\": \"str\", \"visible\": \"bool\", \"_list_length\": 9}], \"technique\": [{\"description\": \"str\", \"localesAvailableIn\": [\"list of str with length 2\"], \"searchValue\": \"str\", \"name\": \"str\", \"type\": \"str\", \"ordinal\": \"NoneType\", \"imageUrl\": \"NoneType\", \"id\": \"str\", \"visible\": \"bool\", \"_list_le"}], "query": "I am planning a family gathering in my backyard and would like to have some games and activities to keep everyone entertained. Can you suggest some fun outdoor games and provide me with the instructions on how to play? Additionally, I would appreciate it if you could recommend some delicious recipes for a barbecue party. Lastly, I need to know the current weather forecast for tomorrow to ensure a perfect day for our gathering.", "relevant APIs": [["Yummly", "categories/list"], ["Yummly", "feeds/list-similarities"], ["Plant Hardiness Zone", "Retrieve the Hardiness Zone"]], "query_id": 8478}, {"api_list": [{"category_name": "Finance", "tool_name": "Coinmill Currency", "api_name": "Coinmill", "api_description": "", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "AssetById", "api_description": "Retrieves the details of an individual asset. Supply the unique identifier (UUID) of the asset.\n\nThe full list of all asset details can be obtained from the Asset endpoint.", "required_parameters": [{"name": "id", "type": "STRING", "description": "The unique resource identifier (UUID) of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"status": "str", "timestamp": "str", "message": "str"}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "Asset", "api_description": "List the UUID and details for all assets or provide an optional query parameter to search.\nAssets may have a status . Active assets will be available at both AssetTicker and DailyOHLCV endpoints. Inactive assets are not available for AssetTickers but may provide some historical OHLCV data if available.", "required_parameters": [], "optional_parameters": [{"name": "status", "type": "STRING", "description": "ACTIVE (default) or INACTIVE.  Only return assets which have the particular status. ", "default": "ACTIVE"}, {"name": "type", "type": "STRING", "description": "CRYPTO or FIAT. Only return assets of the particular type. ", "default": ""}, {"name": "symbol", "type": "STRING", "description": "Only return assets which have a particular ticker symbol e.g. BTC.", "default": ""}], "method": "GET", "template_response": {}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "Market", "api_description": "List the UUIDs for all markets or provide a query parameter to search.\n\nThe parameters are asset UUIDs. The full list of all asset details is available from the Asset endpoint.", "required_parameters": [], "optional_parameters": [{"name": "quoteAssetId", "type": "STRING", "description": "UUID. Only return markets which contain the asset id on the quote side of the market. Supply the UUID of an asset e.g.  USD = e77b9824-126a-418e-a69c-a2e682578e94", "default": ""}, {"name": "baseAssetId", "type": "STRING", "description": "UUID. Only return markets which contain the asset id on the base side of the market. Supply the UUID of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f", "default": ""}], "method": "GET", "template_response": {"content": [{"id": "str", "baseAssetId": "str", "quoteAssetId": "str", "_list_length": 16210}]}}, {"category_name": "Entertainment", "tool_name": "Coin Flip", "api_name": "Heads / Tails", "api_description": "Returns an outcome. Either heads or tails", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get coin modifiers", "api_description": "Get the modifiers of a coin's supply and their balance.\nThis endpoint requires the **ultra** plan or higher.", "required_parameters": [{"name": "uuid", "type": "string", "description": "UUID of the coin you want to request the modifiers for", "default": "Qwsogvtv82FCd"}], "optional_parameters": [{"name": "offset", "type": "NUMBER", "description": "Offset. Used for pagination\n\nDefault value: 0", "default": "0"}, {"name": "limit", "type": "NUMBER", "description": "Limit. Used for pagination\n\nDefault value: 50\nSize range: 0-100", "default": "50"}], "method": "GET", "template_response": {"status": "str", "data": {"total": "int", "modifiers": "empty list"}}}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get coin price history", "api_description": "Coinranking keeps track of prices on all listed assets. The history endpoint lists prices and their timestamp for the requested time period, useful for making a chart.", "required_parameters": [{"name": "uuid", "type": "string", "description": "UUID of the coin you want to request", "default": "Qwsogvtv82FCd"}], "optional_parameters": [{"name": "referenceCurrencyUuid", "type": "STRING", "description": "UUID of reference currency, in which all the prices are calculated. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl", "default": "yhjMzLPhuIDl"}, {"name": "timePeriod", "type": "STRING", "description": "Timeperiod where the change and history are based on\n\nDefault value: 24h\nAllowed values:\n3h 24h 7d 30d 3m 1y 3y 5y", "default": "24h"}], "method": "GET", "template_response": {"status": "str", "data": {"change": "str", "history": [{"price": "str", "timestamp": "int", "_list_length": 288}]}}}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get coin price", "api_description": "With the price endpoint the price can be requested for a specific coin on a specific time. The response is just a single price nearest to the requested time, including its timestamp.", "required_parameters": [{"name": "uuid", "type": "string", "description": "UUID of the coin you need the price", "default": "Qwsogvtv82FCd"}], "optional_parameters": [{"name": "timestamp", "type": "NUMBER", "description": "Timestamp. Epoch timestamp in seconds. If it is not provided this endpoint will get the latest price", "default": ""}, {"name": "referenceCurrencyUuid", "type": "STRING", "description": "UUID of reference currency. This is the currency the price is shown in, which defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl", "default": "yhjMzLPhuIDl"}], "method": "GET", "template_response": {"status": "str", "data": {"price": "str", "timestamp": "int"}}}], "query": "I want to surprise my friend with a unique gift for their graduation. Can you flip a coin and let me know if it's heads or tails? Additionally, I need the details and status of the asset with the UUID 'f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f' to determine its value as a gift.", "relevant APIs": [["Coin Flip", "Heads / Tails"], ["BraveNewCoin", "AssetById"]], "query_id": 8627}, {"api_list": [{"category_name": "Travel", "tool_name": "webcams.travel", "api_name": "/webcams/list/limit={limit},{offset}", "api_description": "This is a modifier. Returns the list of webcams sliced by {limit}. The optional offset is given by {offset}. Required: {limit}. The maximum value for {limit} is 50. {offset} defaults to 0. If limit is not given, then a default of limit=10 is applied.", "required_parameters": [{"name": "limit", "type": "NUMBER", "description": "Maximum number of webcams in the result list.", "default": ""}], "optional_parameters": [{"name": "offset", "type": "NUMBER", "description": "Offset for the first item in the result list.", "default": "0"}, {"name": "lang", "type": "STRING", "description": "Localize the results to this language, if available. Default: \"en\".", "default": "en"}, {"name": "show", "type": "STRING", "description": "Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\".", "default": "webcams:image,location"}], "method": "GET"}, {"category_name": "Travel", "tool_name": "webcams.travel", "api_name": "/webcams/list/category={category}[,{category}[,...]]", "api_description": "This is a modifier. Returns a list of webcams according to the listed categories. Multiple categories must be separated by comma. Required: at least one {category}.", "required_parameters": [{"name": "category", "type": "STRING", "description": "Comma separated list of category names.", "default": ""}], "optional_parameters": [{"name": "lang", "type": "STRING", "description": "Localize the results to this language, if available. Default: \"en\".", "default": "en"}, {"name": "show", "type": "STRING", "description": "Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\".", "default": "webcams:image,location"}], "method": "GET"}, {"category_name": "Travel", "tool_name": "webcams.travel", "api_name": "/webcams/list/orderby={order},{sort}", "api_description": "This is a modifier. Returns the list of webcams ordered by {order}. The optional sorting direction is given by {sort}. Required {order}.", "required_parameters": [{"name": "sort", "type": "STRING", "description": "Possible values are: \"asc\" (ascending), or \"desc\" (descending).", "default": ""}, {"name": "order", "type": "STRING", "description": "Possible values are: \"popularity\" (default order: \"desc\"), \"hotness\" (default order: \"desc\"), \"new\" (default order: \"desc\"), \"recent\" (default order: \"desc\"), \"random\" (default order: \"asc\"), or \"distance\" (default order: \"asc\", only available if the modifier \"nearby\" has been applied).", "default": ""}], "optional_parameters": [{"name": "lang", "type": "STRING", "description": "Localize the results to this language, if available. Default: \"en\".", "default": "en"}, {"name": "show", "type": "STRING", "description": "Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\".", "default": "webcams:image,location"}], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getStandardMapTile", "api_description": "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap", "required_parameters": [{"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "3"}, {"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "6"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getMapTilewithEnglishLabels", "api_description": "Raster Map Tiles with English Labels. Please see our [tutorials page](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials) on how to use this.", "required_parameters": [{"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "6"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "3"}, {"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "3"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Mapping", "tool_name": "MapTiles", "api_name": "getMapTilewithFrenchLabels", "api_description": "Raster Map Tiles with French Labels", "required_parameters": [{"name": "x", "type": "NUMBER", "description": "X-number of tile (see documentation)", "default": "8"}, {"name": "y", "type": "NUMBER", "description": "Y-number of tile (see documentation)", "default": "5"}, {"name": "z", "type": "NUMBER", "description": "zoom (from 0 up to zoom 19)", "default": "4"}], "optional_parameters": [], "method": "GET"}], "query": "I'm a photographer and I'm searching for webcams that capture breathtaking sunsets. Can you recommend some webcams in coastal areas known for their stunning sunset views? Additionally, I would like to see a map tile with French labels to inspire my photography.", "relevant APIs": [["webcams.travel", "/webcams/list/limit={limit},{offset}"], ["webcams.travel", "/webcams/list/orderby={order},{sort}"], ["MapTiles", "getMapTilewithFrenchLabels"]], "query_id": 8681}, {"api_list": [{"category_name": "Tools", "tool_name": "Famous  Quotes", "api_name": "List Categories", "api_description": "List all available categories", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Tools", "tool_name": "Famous  Quotes", "api_name": "Get Random Quotes", "api_description": "Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint", "required_parameters": [{"name": "count", "type": "NUMBER", "description": "", "default": "2"}, {"name": "category", "type": "STRING", "description": "", "default": "all"}], "optional_parameters": [], "method": "GET", "template_response": {"author": "str", "category": "str", "text": "str", "id": "int"}}, {"category_name": "Data", "tool_name": "WikiHow", "api_name": "Images", "api_description": "Gets the src URL for random WikiHow images", "required_parameters": [{"name": "count", "type": "NUMBER", "description": "The number of image URLs to retrieve (maximum 100)", "default": "3"}], "optional_parameters": [], "method": "GET", "template_response": {"1": "str", "2": "str", "3": "str"}}, {"category_name": "Data", "tool_name": "WikiHow", "api_name": "Steps", "api_description": "Gets a random selection of WikiHow steps.", "required_parameters": [{"name": "count", "type": "NUMBER", "description": "The number of step strings to retrieve (maximum 100)", "default": "3"}], "optional_parameters": [], "method": "GET", "template_response": {"1": "str", "2": "str", "3": "str"}}], "query": "I'm looking for interesting content for my blog. Can you provide me with random quotes from different categories and a few WikiHow steps to share with my readers?", "relevant APIs": [["Famous  Quotes", "Get Random Quotes"], ["WikiHow", "Steps"]], "query_id": 8738}, {"api_list": [{"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "Balance Sheet", "api_description": "Returns complete balance sheet of a company showing the summary of assets, liabilities, and shareholders\u2019 equity.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "", "default": "AAPL"}], "optional_parameters": [{"name": "exchange", "type": "STRING", "description": "", "default": ""}, {"name": "country", "type": "STRING", "description": "", "default": ""}, {"name": "start_date", "type": "STRING", "description": "", "default": ""}, {"name": "end_date", "type": "STRING", "description": "", "default": ""}, {"name": "period", "type": "STRING", "description": "", "default": "annual"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "HT_DCPERIOD", "api_description": "Hilbert Transform Dominant Cycle Period(HT_DCPERIOD) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers.", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}, {"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}], "optional_parameters": [{"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}, {"name": "series_type", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}, {"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Finance", "tool_name": "Twelve Data", "api_name": "EMA", "api_description": "Exponential Moving Average(EMA) places greater importance on recent data points than the normal Moving Average(MA).", "required_parameters": [{"name": "symbol", "type": "STRING", "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...", "default": "AAPL"}, {"name": "interval", "type": "STRING", "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`", "default": "1min"}], "optional_parameters": [{"name": "series_type", "type": "STRING", "description": "Supports: `open`, `high`, `low`, `close`", "default": "close"}, {"name": "format", "type": "STRING", "description": "Value can be `CSV` or `JSON`\nDefault `JSON`", "default": "json"}, {"name": "outputsize", "type": "NUMBER", "description": "Default `30` when no date parameters are set, otherwise set to maximum", "default": 30}, {"name": "time_period", "type": "NUMBER", "description": "", "default": 9}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Financial", "tool_name": "QuantaEx Market Data", "api_name": "24 Hours Tickers", "api_description": "24 hours trading data", "required_parameters": [], "optional_parameters": [{"name": "quantaex.com", "type": "STRING", "description": "", "default": ""}], "method": "GET"}], "query": "I would like to compare the exponential moving averages of multiple stocks. Fetch the 24-hour trading data for various markets to identify potential investment opportunities. Also, provide me with the balance sheet of NVIDIA Corporation to assess their financial performance.", "relevant APIs": [["Twelve Data", "EMA"], ["QuantaEx Market Data", "24 Hours Tickers"], ["Twelve Data", "Balance Sheet"]], "query_id": 8803}, {"api_list": [{"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/random", "api_description": "Retrieve a random chuck joke in JSON format.", "required_parameters": [], "optional_parameters": [{"name": "category", "type": "STRING", "description": "Specifies the category of the random joke.", "default": ""}], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "path": "str"}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/search", "api_description": "Free text search", "required_parameters": [{"name": "query", "type": "STRING", "description": "The search term.", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"timestamp": "str", "status": "int", "error": "str", "message": "str", "violations": {"search.query": "str"}}}, {"category_name": "Social", "tool_name": "Chuck Norris", "api_name": "/jokes/categories", "api_description": "Retrieve a list of available joke categories.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {}}, {"category_name": "Gaming", "tool_name": "Trivia by API-Ninjas", "api_name": "/v1/trivia", "api_description": "API Ninjas Trivia API endpoint", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}, {"name": "category", "type": "STRING", "description": "Category of trivia. Possible values are: \n\n**artliterature\nlanguage\nsciencenature\ngeneral\nfooddrink\npeopleplaces\ngeography\nhistoryholidays\nentertainment\ntoysgames\nmusic\nmathematics\nreligionmythology\nsportsleisure**", "default": ""}], "method": "GET", "template_response": {"category": "str", "question": "str", "answer": "str"}}, {"category_name": "Media", "tool_name": "Music Trivia", "api_name": "/getgamelevel", "api_description": "get a game level with a level parameter. The level this does not imply difficulty", "required_parameters": [], "optional_parameters": [{"name": "level", "type": "NUMBER", "description": "paginated level", "default": ""}, {"name": "output", "type": "STRING", "description": "set output format type , 'xml' or 'json'", "default": ""}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get math fact", "api_description": "Get a mathematical property about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "1729"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get trivia fact", "api_description": "Get a trivia fact about a number", "required_parameters": [{"name": "number", "type": "STRING", "description": "The integer of interest", "default": "42"}], "optional_parameters": [{"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "notfound", "type": "STRING", "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).", "default": "floor"}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}, {"category_name": "Education", "tool_name": "Numbers", "api_name": "Get random fact", "api_description": "Get result by random number", "required_parameters": [{"name": "type", "type": "STRING", "description": "One of \"trivia\", \"math\", \"date\", or \"year\"", "default": "trivia"}], "optional_parameters": [{"name": "min", "type": "STRING", "description": "Minimum number, inclusive", "default": "10"}, {"name": "max", "type": "STRING", "description": "Maximium number, inclusive", "default": "20"}, {"name": "fragment", "type": "STRING", "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.", "default": true}, {"name": "json", "type": "STRING", "description": "Specify \"true\" to return result as JSON instead of plaintext.", "default": true}], "method": "GET"}], "query": "I want to surprise my coworkers with interesting trivia facts and jokes during our team meeting. Can you provide me with random trivia facts about numbers? Also, fetch some chuck jokes to add humor to the meeting. Finally, recommend a game level for our music trivia contest.", "relevant APIs": [["Trivia by API-Ninjas", "/v1/trivia"], ["Chuck Norris", "/jokes/random"], ["Music Trivia", "/getgamelevel"]], "query_id": 8892}, {"api_list": [{"category_name": "eCommerce", "tool_name": "HM - Hennes Mauritz", "api_name": "categories/list", "api_description": "List all categories from H&M", "required_parameters": [{"name": "country", "type": "STRING", "description": "The country code that is gotten from /regions/list endpoint", "default": "us"}, {"name": "lang", "type": "STRING", "description": "The language code that is gotten from /regions/list endpoint", "default": "en"}], "optional_parameters": [], "method": "GET", "template_response": {"CatName": "str", "CategoryValue": "str", "CategoriesArray": [{"CatName": "str", "CategoryValue": "str", "CategoriesArray": [{"CatName": "str", "CategoryValue": "str", "tagCodes": ["list of str with length 2"], "_list_length": 5}], "tagCodes": "empty list", "_list_length": 8}], "tagCodes": ["list of str with length 1"]}}, {"category_name": "eCommerce", "tool_name": "HM - Hennes Mauritz", "api_name": "regions/list", "api_description": "List regions H&M supported", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"region": "str", "countries": [{"name": "str", "code": "str", "languages": [{"name": "str", "code": "str", "_list_length": 1}], "_list_length": 32}]}}, {"category_name": "eCommerce", "tool_name": "HM - Hennes Mauritz", "api_name": "products/search-by-barcode", "api_description": "Search product by barcode", "required_parameters": [{"name": "gtinCodes", "type": "STRING", "description": "The scanned code", "default": "00725272730706"}], "optional_parameters": [{"name": "country", "type": "STRING", "description": "The country code", "default": "us"}, {"name": "lang", "type": "STRING", "description": "The language code", "default": "en"}], "method": "GET", "template_response": {}}, {"category_name": "Commerce", "tool_name": "Etsy", "api_name": "findAllListingActive", "api_description": "Finds all active Listings. (Note: the sort_on and sort_order options only work when combined with one of the search options: keywords, color, tags, location, etc.)", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Commerce", "tool_name": "Etsy", "api_name": "getInterestingListings", "api_description": "Collects the list of interesting listings", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Commerce", "tool_name": "Etsy", "api_name": "getTrendingListings", "api_description": "Collects the list of listings used to generate the trending listing page", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm planning a family vacation in Paris next month and I want to make sure we have a great time. Can you provide me with a list of interesting listings on Etsy that are related to Paris? Additionally, I would like to know the categories of products available on H&M's website in France. Finally, could you recommend some popular tourist attractions in Paris?", "relevant APIs": [["Etsy", "getInterestingListings"], ["HM - Hennes Mauritz", "categories/list"], ["HM - Hennes Mauritz", "regions/list"]], "query_id": 8970}, {"api_list": [{"category_name": "Music", "tool_name": "View Song", "api_name": "View song_copy", "api_description": "View song", "required_parameters": [{"name": "https_only", "type": "STRING", "description": "", "default": "1"}, {"name": "wmid", "type": "STRING", "description": "", "default": "161445361"}, {"name": "songid", "type": "STRING", "description": "", "default": "ttEleQJoxgCuNOIbUuRh7Q=="}, {"name": "s", "type": "STRING", "description": "", "default": "fe7cc2de3cfcc4efd457838a9521e7e9"}, {"name": "song_preview_kbps", "type": "STRING", "description": "", "default": "320"}, {"name": "lang", "type": "STRING", "description": "", "default": "id"}, {"name": "country", "type": "STRING", "description": "", "default": "id"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Music", "tool_name": "View Song", "api_name": "View song", "api_description": "View song", "required_parameters": [{"name": "country", "type": "STRING", "description": "", "default": "id"}, {"name": "song_preview_kbps", "type": "STRING", "description": "", "default": "320"}, {"name": "https_only", "type": "STRING", "description": "", "default": "1"}, {"name": "wmid", "type": "STRING", "description": "", "default": "161445361"}, {"name": "songid", "type": "STRING", "description": "", "default": "ttEleQJoxgCuNOIbUuRh7Q=="}, {"name": "lang", "type": "STRING", "description": "", "default": "id"}, {"name": "s", "type": "STRING", "description": "", "default": "fe7cc2de3cfcc4efd457838a9521e7e9"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Billboard Global 200 (YEAR-END)", "api_description": "Provide the YEAR-END Billboard Global 200 chart information\n\nIf `year` is not supplied, will default to last year.", "required_parameters": [], "optional_parameters": [{"name": "year", "type": "STRING", "description": "date format(YYYY)", "default": "2022"}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Hot 100 Songs (Greatest of All Time)", "api_description": "Provide the Greatest of All Time Hot 100 Songs chart information", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Adult Pop Songs", "api_description": "Provide the Greatest of All Time Adult Pop Songs chart information", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Genre", "api_description": "A genre object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Comment", "api_description": "A comment object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Infos", "api_description": "Get the infos about the api in the current country", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm a music enthusiast and I want to explore the greatest adult pop songs of all time. Can you provide me with the chart information and the genre details of these songs? Also, fetch the song details and comments for the top 10 songs on the Billboard Global 200 chart from last year.", "relevant APIs": [["Billboard-API", "Hot 100 Songs (Greatest of All Time)"], ["Billboard-API", "Adult Pop Songs"], ["Billboard-API", "Billboard Global 200 (YEAR-END)"], ["Deezer", "Genre"], ["Deezer", "Comment"]], "query_id": 9052}, {"api_list": [{"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/user/info", "api_description": "Get basic user info", "required_parameters": [{"name": "profile_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934"}], "optional_parameters": [], "method": "GET", "template_response": {"urn": "int", "username": "str", "name": "str", "verified": "bool", "createdAt": "str", "avatarURL": "str", "profile": "str", "bannerURL": "str", "followers": "int", "following": "int", "likesCount": "int", "tracksCount": "int", "tracks": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": "str", "duration": "int", "_list_length": 3}], "likes": [{"title": "str", "url": "str", "publishedAt": "str", "genre": "str", "author": {"name": "str", "username": "str", "profile": "str"}, "_list_length": 1}]}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/search", "api_description": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "required_parameters": [{"name": "type", "type": "STRING", "description": "", "default": "all"}, {"name": "query", "type": "STRING", "description": "", "default": "almost lover"}], "optional_parameters": [], "method": "GET", "template_response": {"index": "int", "artist": "str", "url": "str", "itemName": "str", "name": "str", "type": "str"}}, {"category_name": "Social", "tool_name": "Soundcloud", "api_name": "/song/download", "api_description": "Download one song, the result is a url which you can get the song.", "required_parameters": [{"name": "track_url", "type": "STRING", "description": "", "default": "https://soundcloud.com/user-977421934/the-phoenix"}], "optional_parameters": [], "method": "GET", "template_response": {"url": "str"}}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Artist", "api_description": "An artist object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The artist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Comment", "api_description": "A comment object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Editorial", "api_description": "An editorial object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}], "query": "I'm planning a road trip with my friends and we're looking for some good music to listen to. Can you suggest some popular tracks from Soundcloud that we can download? Also, recommend some artists from Deezer that we can add to our playlist.", "relevant APIs": [["Soundcloud", "/search"], ["Soundcloud", "/song/download"], ["Deezer", "Artist"]], "query_id": 9064}, {"api_list": [{"category_name": "Music", "tool_name": "View Song", "api_name": "View song", "api_description": "View song", "required_parameters": [{"name": "country", "type": "STRING", "description": "", "default": "id"}, {"name": "song_preview_kbps", "type": "STRING", "description": "", "default": "320"}, {"name": "https_only", "type": "STRING", "description": "", "default": "1"}, {"name": "wmid", "type": "STRING", "description": "", "default": "161445361"}, {"name": "songid", "type": "STRING", "description": "", "default": "ttEleQJoxgCuNOIbUuRh7Q=="}, {"name": "lang", "type": "STRING", "description": "", "default": "id"}, {"name": "s", "type": "STRING", "description": "", "default": "fe7cc2de3cfcc4efd457838a9521e7e9"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Music", "tool_name": "View Song", "api_name": "View song_copy", "api_description": "View song", "required_parameters": [{"name": "https_only", "type": "STRING", "description": "", "default": "1"}, {"name": "wmid", "type": "STRING", "description": "", "default": "161445361"}, {"name": "songid", "type": "STRING", "description": "", "default": "ttEleQJoxgCuNOIbUuRh7Q=="}, {"name": "s", "type": "STRING", "description": "", "default": "fe7cc2de3cfcc4efd457838a9521e7e9"}, {"name": "song_preview_kbps", "type": "STRING", "description": "", "default": "320"}, {"name": "lang", "type": "STRING", "description": "", "default": "id"}, {"name": "country", "type": "STRING", "description": "", "default": "id"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "* Search", "api_description": "Search tracks", "required_parameters": [{"name": "q", "type": "STRING", "description": "", "default": "eminem"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Comment", "api_description": "A comment object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Track", "api_description": "A track object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The track's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Australia Songs", "api_description": "Provide the Australia Songs chart information", "required_parameters": [{"name": "range", "type": "STRING", "description": "", "default": "1-10"}, {"name": "date", "type": "DATE (YYYY-MM-DD)", "description": "date format(YYYY-MM-DD)", "default": "2022-05-07"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Adult Alternative Artists", "api_description": "Provide the Greatest of All Time Adult Alternative Artists chart information", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Music", "tool_name": "Billboard-API", "api_name": "Adult Pop Songs Artists", "api_description": "Provide the Greatest of All Time Adult Pop Songs Artists chart information", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}], "query": "I'm a music blogger and I need to gather information about the top artists in different genres. Can you provide me with the Greatest of All Time Adult Alternative Artists and Greatest of All Time Adult Pop Songs Artists chart information? Also, fetch the track details of a specific song with the ID 'ttEleQJoxgCuNOIbUuRh7Q==' for me.", "relevant APIs": [["Billboard-API", "Adult Alternative Artists"], ["Billboard-API", "Adult Pop Songs Artists"], ["Deezer", "Track"]], "query_id": 9085}, {"api_list": [{"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Random Joke", "api_description": "Get the random joke from a collection of most rated and most popular jokes.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Joke of the Day By Category", "api_description": "Get the joke of the day of specific category from a collection of most rated and most popular jokes.", "required_parameters": [{"name": "category", "type": "STRING", "description": "Category of joke based on the jokes categories API", "default": "Money"}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "World of Jokes", "api_name": "Get Joke of the Day", "api_description": "Get the joke of the day from a collection of most rated and most popular jokes.", "required_parameters": [], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "DaddyJokes", "api_name": "Random", "api_description": "Get a random dad joke", "required_parameters": [], "optional_parameters": [], "method": "GET"}], "query": "I'm writing a humorous article and I need some jokes to include. Can you provide me with a random joke, a dad joke, and a manatee joke to add some humor to my writing? Additionally, fetch the joke of the day to include in the article.", "relevant APIs": [["World of Jokes", "Get Random Joke"], ["DaddyJokes", "Random"], ["manatee jokes", "random"], ["World of Jokes", "Get Joke of the Day"]], "query_id": 9594}, {"api_list": [{"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get a Specific Game", "api_description": "This endpoint retrieves a specific game", "required_parameters": [{"name": "id", "type": "STRING", "description": "ID of the game", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get Specific Player", "api_description": "This endpoint retrieves a specific player.", "required_parameters": [{"name": "id", "type": "NUMBER", "description": "The ID of the player to retrieve", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Sports", "tool_name": "Free NBA", "api_name": "Get All Players", "api_description": "This endpoint retrieves all players from all seasons.", "required_parameters": [], "optional_parameters": [{"name": "page", "type": "STRING", "description": "The page number, used for pagination.", "default": "0"}, {"name": "per_page", "type": "STRING", "description": "The number of results returned per call, used for pagination.", "default": "25"}, {"name": "search", "type": "STRING", "description": "Used to filter players based on their name. For example, ?search=davis will return players that have 'davis' in their first or last name.", "default": ""}], "method": "GET", "template_response": {"data": [{"id": "int", "first_name": "str", "height_feet": "NoneType", "height_inches": "NoneType", "last_name": "str", "position": "str", "team": {"id": "int", "abbreviation": "str", "city": "str", "conference": "str", "division": "str", "full_name": "str", "name": "str"}, "weight_pounds": "NoneType", "_list_length": 25}], "meta": {"total_pages": "int", "current_page": "int", "next_page": "int", "per_page": "int", "total_count": "int"}}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "Market", "api_description": "List the UUIDs for all markets or provide a query parameter to search.\n\nThe parameters are asset UUIDs. The full list of all asset details is available from the Asset endpoint.", "required_parameters": [], "optional_parameters": [{"name": "quoteAssetId", "type": "STRING", "description": "UUID. Only return markets which contain the asset id on the quote side of the market. Supply the UUID of an asset e.g.  USD = e77b9824-126a-418e-a69c-a2e682578e94", "default": ""}, {"name": "baseAssetId", "type": "STRING", "description": "UUID. Only return markets which contain the asset id on the base side of the market. Supply the UUID of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f", "default": ""}], "method": "GET", "template_response": {"content": [{"id": "str", "baseAssetId": "str", "quoteAssetId": "str", "_list_length": 16210}]}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "Asset", "api_description": "List the UUID and details for all assets or provide an optional query parameter to search.\nAssets may have a status . Active assets will be available at both AssetTicker and DailyOHLCV endpoints. Inactive assets are not available for AssetTickers but may provide some historical OHLCV data if available.", "required_parameters": [], "optional_parameters": [{"name": "status", "type": "STRING", "description": "ACTIVE (default) or INACTIVE.  Only return assets which have the particular status. ", "default": "ACTIVE"}, {"name": "type", "type": "STRING", "description": "CRYPTO or FIAT. Only return assets of the particular type. ", "default": ""}, {"name": "symbol", "type": "STRING", "description": "Only return assets which have a particular ticker symbol e.g. BTC.", "default": ""}], "method": "GET", "template_response": {}}, {"category_name": "Finance", "tool_name": "BraveNewCoin", "api_name": "MarketById", "api_description": "Retrieves the details of an individual market. Supply the unique identifier (UUID) of the market.\n\nThe full list of all market UUIDs can be obtained from the Market endpoint.", "required_parameters": [{"name": "id", "type": "STRING", "description": "UUID. The unique resource identifier of a market e.g.  BTC/USD = 6ea0d2ef-6dd0-4adb-ad32-f7f3db58ccbe", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"status": "str", "timestamp": "str", "message": "str"}}, {"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports/{sport}/scores", "api_description": "Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html)", "required_parameters": [{"name": "sport", "type": "STRING", "description": "sport key for which to return games and odds", "default": "americanfootball_nfl"}], "optional_parameters": [{"name": "daysFrom", "type": "NUMBER", "description": "The number of days in the past from which to return completed games. Valid values are integers from `1` to `3`. If this field is missing, only live and upcoming games are returned.", "default": 3}], "method": "GET", "template_response": {"id": "str", "sport_key": "str", "sport_title": "str", "commence_time": "str", "completed": "bool", "home_team": "str", "away_team": "str", "scores": "NoneType", "last_update": "NoneType"}}, {"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports/{sport}/odds", "api_description": "Returns list of live and upcoming games for a given sport, showing bookmaker odds for the specified region and markets. Set the `sport` to a `sport_key` from the /sports endpoint. Alternatively if `sport=upcoming`, it will return a list of the next 8 upcoming games across all sports, as well as any live games. For more info, see [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html) and [list of available bookmakers](https://the-odds-api.com/sports-odds-data/bookmaker-apis.html).", "required_parameters": [{"name": "sport", "type": "STRING", "description": "sport key for which to return games and odds", "default": "upcoming"}, {"name": "regions", "type": "STRING", "description": "Determines which bookmakers appear in the response. Can be a comma delimited list of regions. Each region will count as 1 request against the usage quota for each market. Most use cases will only need to specify one region. For a list of bookmakers by region, see https://the-odds-api.com/sports-odds-data/bookmaker-apis.html", "default": "us"}], "optional_parameters": [{"name": "oddsFormat", "type": "STRING", "description": "Format of returned odds.", "default": "decimal"}, {"name": "markets", "type": "STRING", "description": "The odds market to return. Can be a comma delimited list of odds markets. Defaults to h2h (head to head / moneyline). Outrights only avaialable for select sports. Note each market counts as 1 request against the usage quota.", "default": "h2h,spreads"}, {"name": "dateFormat", "type": "STRING", "description": "Format of returned timestamps. Can be iso (ISO8601) or unix timestamp (seconds since epoch)", "default": "iso"}], "method": "GET", "template_response": {"id": "str", "sport_key": "str", "sport_title": "str", "commence_time": "str", "home_team": "str", "away_team": "str", "bookmakers": [{"key": "str", "title": "str", "last_update": "str", "markets": [{"key": "str", "last_update": "str", "outcomes": [{"name": "str", "price": "float", "_list_length": 2}], "_list_length": 1}], "_list_length": 1}]}}, {"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports", "api_description": "Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints.", "required_parameters": [], "optional_parameters": [{"name": "all", "type": "BOOLEAN", "description": "When excluded, only recently updated (in-season) sports appear. Include this paramter to see all available sports", "default": "true"}], "method": "GET", "template_response": {"key": "str", "group": "str", "title": "str", "description": "str", "active": "bool", "has_outrights": "bool"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Currencies", "api_description": "Get currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies.", "required_parameters": [], "optional_parameters": [{"name": "countryId", "type": "STRING", "description": "Only currencies supported by this country", "default": "US"}, {"name": "limit", "type": "NUMBER", "description": "The maximum number of results to retrieve", "default": ""}, {"name": "hateoasMode", "type": "BOOLEAN", "description": "Include HATEOAS-style links in results", "default": ""}, {"name": "offset", "type": "NUMBER", "description": "The zero-ary offset index into the results", "default": ""}], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "City Date-Time", "api_description": "Get the city current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ", "required_parameters": [{"name": "cityid", "type": "STRING", "description": "The city id (either native id or wikiDataId)", "default": "Q60"}], "optional_parameters": [], "method": "GET", "template_response": {"message": "str"}}, {"category_name": "Data", "tool_name": "GeoDB Cities", "api_name": "Cities", "api_description": "Find cities, filtering by optional criteria. If no criteria are set, you will get back all known cities with a population of at least 1000.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "NUMBER", "description": "The maximum number of results to retrieve", "default": ""}, {"name": "location", "type": "STRING", "description": "Only cities near this location. Latitude/longitude in ISO-6709 format: \u00b1DD.DDDD\u00b1DDD.DDDD", "default": ""}, {"name": "radius", "type": "NUMBER", "description": "The location radius within which to find cities", "default": ""}, {"name": "minPopulation", "type": "NUMBER", "description": "Only cities having at least this population", "default": ""}, {"name": "languageCode", "type": "STRING", "description": "Display results in this language", "default": ""}, {"name": "asciiMode", "type": "BOOLEAN", "description": "Display results using ASCII characters", "default": ""}, {"name": "distanceUnit", "type": "STRING", "description": "The unit of distance to use: MI | KM", "default": ""}, {"name": "timeZoneIds", "type": "STRING", "description": "Only cities in these time-zones", "default": ""}, {"name": "sort", "type": "STRING", "description": "How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population", "default": ""}, {"name": "hateoasMode", "type": "BOOLEAN", "description": "Include HATEOAS-style links in results", "default": ""}, {"name": "offset", "type": "NUMBER", "description": "The zero-ary offset into the results", "default": ""}, {"name": "types", "type": "STRING", "description": "Only cities for these types (comma-delimited): CITY | ADM2", "default": ""}, {"name": "countryIds", "type": "STRING", "description": "Only cities in these countries (comma-delimited country codes or WikiData ids)", "default": ""}, {"name": "excludedCountryIds", "type": "STRING", "description": "Only cities NOT in these countries (comma-delimited country codes or WikiData ids)", "default": ""}, {"name": "includeDeleted", "type": "STRING", "description": "Whether to include any cities marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE", "default": ""}, {"name": "namePrefixDefaultLangResults", "type": "BOOLEAN", "description": "When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested.", "default": ""}, {"name": "namePrefix", "type": "STRING", "description": "Only cities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.", "default": ""}, {"name": "maxPopulation", "type": "NUMBER", "description": "Only cities having no more than this population", "default": ""}], "method": "GET", "template_response": {"message": "str"}}], "query": "Help me find the details of an NBA game that took place on October 5, 2023. Also, provide me with the current date and time in San Francisco. Additionally, find all the available sports and tournaments using the Live Sports Odds API.", "relevant APIs": [["Free NBA", "Get a Specific Game"], ["GeoDB Cities", "City Date-Time"], ["Live Sports Odds", "/v4/sports"]], "query_id": 9711}, {"api_list": [{"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports/{sport}/odds", "api_description": "Returns list of live and upcoming games for a given sport, showing bookmaker odds for the specified region and markets. Set the `sport` to a `sport_key` from the /sports endpoint. Alternatively if `sport=upcoming`, it will return a list of the next 8 upcoming games across all sports, as well as any live games. For more info, see [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html) and [list of available bookmakers](https://the-odds-api.com/sports-odds-data/bookmaker-apis.html).", "required_parameters": [{"name": "sport", "type": "STRING", "description": "sport key for which to return games and odds", "default": "upcoming"}, {"name": "regions", "type": "STRING", "description": "Determines which bookmakers appear in the response. Can be a comma delimited list of regions. Each region will count as 1 request against the usage quota for each market. Most use cases will only need to specify one region. For a list of bookmakers by region, see https://the-odds-api.com/sports-odds-data/bookmaker-apis.html", "default": "us"}], "optional_parameters": [{"name": "oddsFormat", "type": "STRING", "description": "Format of returned odds.", "default": "decimal"}, {"name": "markets", "type": "STRING", "description": "The odds market to return. Can be a comma delimited list of odds markets. Defaults to h2h (head to head / moneyline). Outrights only avaialable for select sports. Note each market counts as 1 request against the usage quota.", "default": "h2h,spreads"}, {"name": "dateFormat", "type": "STRING", "description": "Format of returned timestamps. Can be iso (ISO8601) or unix timestamp (seconds since epoch)", "default": "iso"}], "method": "GET", "template_response": {"id": "str", "sport_key": "str", "sport_title": "str", "commence_time": "str", "home_team": "str", "away_team": "str", "bookmakers": [{"key": "str", "title": "str", "last_update": "str", "markets": [{"key": "str", "last_update": "str", "outcomes": [{"name": "str", "price": "float", "_list_length": 2}], "_list_length": 1}], "_list_length": 1}]}}, {"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports/{sport}/scores", "api_description": "Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html)", "required_parameters": [{"name": "sport", "type": "STRING", "description": "sport key for which to return games and odds", "default": "americanfootball_nfl"}], "optional_parameters": [{"name": "daysFrom", "type": "NUMBER", "description": "The number of days in the past from which to return completed games. Valid values are integers from `1` to `3`. If this field is missing, only live and upcoming games are returned.", "default": 3}], "method": "GET", "template_response": {"id": "str", "sport_key": "str", "sport_title": "str", "commence_time": "str", "completed": "bool", "home_team": "str", "away_team": "str", "scores": "NoneType", "last_update": "NoneType"}}, {"category_name": "Sports", "tool_name": "Live Sports Odds", "api_name": "/v4/sports", "api_description": "Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints.", "required_parameters": [], "optional_parameters": [{"name": "all", "type": "BOOLEAN", "description": "When excluded, only recently updated (in-season) sports appear. Include this paramter to see all available sports", "default": "true"}], "method": "GET", "template_response": {"key": "str", "group": "str", "title": "str", "description": "str", "active": "bool", "has_outrights": "bool"}}, {"category_name": "Food", "tool_name": "The Cocktail DB", "api_name": "List of Cocktails", "api_description": "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe.", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "difficulty": "str", "image": "str"}}, {"category_name": "Food", "tool_name": "The Cocktail DB", "api_name": "Detailed Cocktail Recipe by ID", "api_description": "Get Cocktail by ID", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": "45"}], "optional_parameters": [], "method": "GET", "template_response": {"id": "str", "title": "str", "difficulty": "str", "portion": "str", "time": "str", "description": "str", "ingredients": ["list of str with length 5"], "method": [{"Step 1": "str", "_list_length": 3}], "image": "str"}}], "query": "I'm a sports blogger and I want to write an article about upcoming sports events. Can you provide me with the upcoming games and odds for popular sports? Additionally, I would like to include some cocktail recipes in the article. Can you suggest some interesting cocktail recipes?", "relevant APIs": [["Live Sports Odds", "/v4/sports/{sport}/odds"], ["The Cocktail DB", "List of Cocktails"], ["The Cocktail DB", "Detailed Cocktail Recipe by ID"]], "query_id": 9748}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}, {"category_name": "Education", "tool_name": "Quotes", "api_name": "quote", "api_description": "Get a random Quote", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"quote": "str", "author": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}], "query": "I'm a teacher planning a science fair for my students, and I want to make it educational and entertaining. Can you provide me with interesting manatee jokes to include in the event program? Also, fetch random quotes to inspire the students and encourage their scientific curiosity.", "relevant APIs": [["manatee jokes", "random"], ["Quotes", "quote"]], "query_id": 9925}, {"api_list": [{"category_name": "Entertainment", "tool_name": "Jokes by API-Ninjas", "api_name": "/v1/jokes", "api_description": "API Ninjas Jokes API endpoint.", "required_parameters": [], "optional_parameters": [{"name": "limit", "type": "STRING", "description": "How many results to return. Must be between **1** and **30**. Default is **1**.", "default": ""}], "method": "GET"}, {"category_name": "Education", "tool_name": "Quotes", "api_name": "quote", "api_description": "Get a random Quote", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"quote": "str", "author": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "find all", "api_description": "retrieves all available jokes", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "get by id", "api_description": "gets a specific joke by id", "required_parameters": [{"name": "id", "type": "string", "description": "", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Science", "tool_name": "manatee jokes", "api_name": "random", "api_description": "retrieves a random manatee joke", "required_parameters": [], "optional_parameters": [], "method": "GET", "template_response": {"id": "int", "setup": "str", "punchline": "str", "createdAt": "str", "updatedAt": "str"}}], "query": "I'm organizing a charity event to raise funds for a local animal shelter. Can you provide me with quotes about kindness and compassion to include in the event program? Additionally, find a joke API that I can use to entertain the attendees during the event.", "relevant APIs": [["Quotes", "quote"], ["Jokes by API-Ninjas", "/v1/jokes"]], "query_id": 9928}, {"api_list": [{"category_name": "Music", "tool_name": "Spotify", "api_name": "Get artists", "api_description": "Get one or more artists", "required_parameters": [{"name": "ids", "type": "STRING", "description": "Artist IDs (you can use commas)", "default": "2w9zwq3AktTeYYMuhMjju8"}], "optional_parameters": [], "method": "GET", "template_response": {"artists": [{"external_urls": {"spotify": "str"}, "followers": {"href": "NoneType", "total": "int"}, "genres": ["list of str with length 3"], "id": "str", "images": [{"height": "int", "url": "str", "width": "int", "_list_length": 3}], "name": "str", "popularity": "int", "type": "str", "uri": "str", "_list_length": 1}]}}, {"category_name": "Music", "tool_name": "Spotify", "api_name": "Get radio playlist", "api_description": "Get artist or song radio", "required_parameters": [{"name": "uri", "type": "STRING", "description": "Artist or song URI", "default": "spotify:artist:2w9zwq3AktTeYYMuhMjju8"}], "optional_parameters": [], "method": "GET", "template_response": {"total": "int", "mediaItems": [{"uri": "str", "_list_length": 1}]}}, {"category_name": "Music", "tool_name": "Spotify", "api_name": "Artist appears on", "api_description": "Get artist appears on albums (max 50)", "required_parameters": [{"name": "id", "type": "STRING", "description": "Artist ID", "default": "2w9zwq3AktTeYYMuhMjju8"}], "optional_parameters": [], "method": "GET", "template_response": {"data": {"artist": {"id": "str", "uri": "str", "profile": {"name": "str"}, "relatedContent": {"appearsOn": {"totalCount": "int", "items": [{"releases": {"totalCount": "int", "items": [{"uri": "str", "id": "str", "name": "str", "artists": {"items": [{"uri": "str", "profile": {"name": "str"}, "_list_length": 1}]}, "coverArt": {"sources": [{"url": "str", "width": "int", "height": "int", "_list_length": 3}]}, "sharingInfo": {"shareId": "str", "shareUrl": "str"}, "_list_length": 1}]}, "_list_length": 50}]}}}}, "extensions": "empty list"}}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Comment", "api_description": "A comment object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The playlist's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "Genre", "api_description": "A genre object", "required_parameters": [{"name": "id", "type": "STRING", "description": "The editorial's Deezer id", "default": ""}], "optional_parameters": [], "method": "GET"}, {"category_name": "Entertainment", "tool_name": "Deezer", "api_name": "* Search", "api_description": "Search tracks", "required_parameters": [{"name": "q", "type": "STRING", "description": "", "default": "eminem"}], "optional_parameters": [], "method": "GET"}], "query": "I am organizing a music-themed party for my friends. Can you search for tracks related to a specific artist? Also, recommend some popular artists from the same genre.", "relevant APIs": [["Deezer", "* Search"], ["Spotify", "Get artists"]], "query_id": 9946}, {"api_list": [{"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get global stats", "api_description": "These global statistics tell about the data available on coinranking.", "required_parameters": [], "optional_parameters": [{"name": "referenceCurrencyUuid", "type": "STRING", "description": "UUID of reference currency, in which all the prices are calculated. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl", "default": "yhjMzLPhuIDl"}], "method": "GET", "template_response": {"status": "str", "data": {"referenceCurrencyRate": "int", "totalCoins": "int", "totalMarkets": "int", "totalExchanges": "int", "totalMarketCap": "str", "total24hVolume": "str", "btcDominance": "float", "bestCoins": [{"uuid": "str", "symbol": "str", "name": "str", "iconUrl": "str", "coinrankingUrl": "str", "_list_length": 3}], "newestCoins": [{"uuid": "str", "symbol": "str", "name": "str", "iconUrl": "str", "coinrankingUrl": "str", "_list_length": 3}]}}}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get reference currencies", "api_description": "Get a list of reference currencies, which can be used as reference for coins. The response includes all the essentials for this use-case, such as the symbol (e.g. USD) and - if available - the sign (e.g. $).", "required_parameters": [], "optional_parameters": [{"name": "types", "type": "ARRAY", "description": "A currency is one of three types: coin (e.g. Bitcoin, Ethereum, etc.), fiat (US Dollar, Euro, Yen, etc.) or a denominator (e.g. Satoshi). Filter the response by providing one or more types\n\nAllowed values:\ncoin, fiat, denominator\n\nArray parameters should be suffixed with brackets.\nExample: ?types[]=coin&types[]=fiat.", "default": ""}, {"name": "search", "type": "STRING", "description": "Filter the results by searching for currency names or symbols.", "default": ""}, {"name": "offset", "type": "NUMBER", "description": "Offset. Used for pagination\n\nDefault value: 0", "default": "0"}, {"name": "limit", "type": "NUMBER", "description": "Limit. Used for pagination\n\nDefault value: 20\nSize range: 0-100", "default": "50"}], "method": "GET", "template_response": {"status": "str", "data": {"stats": {"total": "int"}, "currencies": [{"uuid": "str", "type": "str", "iconUrl": "str", "name": "str", "symbol": "str", "sign": "str", "_list_length": 50}]}}}, {"category_name": "Finance", "tool_name": "Coinranking", "api_name": "Get coin supply", "api_description": "Get the maximum, total, and circulating supply of a coin.", "required_parameters": [{"name": "uuid", "type": "string", "description": "UUID of the coin you want to request the supply for", "default": "Qwsogvtv82FCd"}], "optional_parameters": [], "method": "GET", "template_response": {"status": "str", "data": {"supply": {"maxAmount": "str", "totalSyncedAt": "str", "totalAmount": "str", "circulatingSyncedAt": "str", "circulatingAmount": "str", "modifierCount": "int"}}}}, {"category_name": "Data", "tool_name": "Tardis.dev", "api_name": "Exchanges", "api_description": "Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc.", "required_parameters": [{"name": "exchange", "type": "ENUM", "description": "", "default": ""}], "optional_parameters": [], "method": "GET", "template_response": {"code": "int", "message": "str"}}, {"category_name": "Finance", "tool_name": "Global Ethereum Price Index - GEX", "api_name": "Custom Ticker", "api_description": "This endpoint can be used to generate a custom index in a certain currency. The \u201cinex\u201d path parameter represents \u201cinclude\u201d or \u201cexclude\u201d, you can choose to generate an index removing specified exchanges, or only including the few that you require.", "required_parameters": [{"name": "inex", "type": "STRING", "description": "include - if you want the ticker to be calculated using only the exchanges sent as query parameter; exclude - if you want the price to be calculated using all exchanges, but the ones sent as query parameter.", "default": "include"}, {"name": "symbol", "type": "STRING", "description": "ETH<fiat> where <fiat> is valid ISO currency (ex. ETHUSD)", "default": "ETHUSD"}], "optional_parameters": [{"name": "exchanges", "type": "STRING", "description": "Comma separated list of exchanges.", "default": "bitfinex,bitstamp"}], "method": "GET", "template_response": {"timestamp": "int", "last": {"price": "float"}, "bid": {"price": "float"}, "ask": {"price": "float"}}}, {"category_name": "Finance", "tool_name": "Global Ethereum Price Index - GEX", "api_name": "All Ticker Data", "api_description": "If no query parameters are sent, then returns ticker data for every supported symbol. If fiat(s) are sent as parameters, then only the ticker for those values is sent.", "required_parameters": [{"name": "market", "type": "STRING", "description": "Possible values: global, local", "default": "local"}], "optional_parameters": [{"name": "crypto", "type": "STRING", "description": "valid value: ETH", "default": "ETH"}, {"name": "fiat", "type": "STRING", "description": "Comma separated list of ISO currency codes (ex. USD,EUR)", "default": "USD,EUR"}], "method": "GET", "template_response": "{\"ETHEUR\": {\"ask\": \"float\", \"bid\": \"float\", \"last\": \"float\", \"high\": \"float\", \"low\": \"float\", \"volume\": \"float\", \"open\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}, \"averages\": {\"day\": \"float\", \"week\": \"float\", \"month\": \"float\"}, \"changes\": {\"price\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}, \"percent\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}}, \"volume_percent\": \"float\", \"timestamp\": \"int\", \"display_timestamp\": \"str\", \"display_symbol\": \"str\"}, \"ETHUSD\": {\"ask\": \"float\", \"bid\": \"float\", \"last\": \"float\", \"high\": \"float\", \"low\": \"float\", \"volume\": \"float\", \"open\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}, \"averages\": {\"day\": \"float\", \"week\": \"float\", \"month"}, {"category_name": "Finance", "tool_name": "Global Ethereum Price Index - GEX", "api_name": "Ticker Changes", "api_description": "Returns ticker values and price changes for specified market and symbol.", "required_parameters": [{"name": "market", "type": "STRING", "description": "Possible values: global, local", "default": "local"}, {"name": "symbol", "type": "STRING", "description": "Possible values: ETH<fiat> where <fiat> is valid ISO currency (ex. ETHUSD)", "default": "ETHUSD"}], "optional_parameters": [], "method": "GET", "template_response": {"ask": "float", "bid": "float", "last": "float", "high": "float", "low": "float", "open": {"hour": "float", "day": "float", "week": "float", "month": "float", "month_3": "float", "month_6": "float", "year": "float"}, "averages": {"day": "float", "week": "float", "month": "float"}, "volume": "float", "changes": {"price": {"hour": "float", "day": "float", "week": "float", "month": "float", "month_3": "float", "month_6": "float", "year": "float"}, "percent": {"hour": "float", "day": "float", "week": "float", "month": "float", "month_3": "float", "month_6": "float", "year": "float"}}, "volume_percent": "float", "timestamp": "int", "display_timestamp": "str", "display_symbol": "str"}}], "query": "I'm a cryptocurrency trader and I need to know the available symbols and incidents of a specific exchange. Can you provide me with the details of a particular exchange? Additionally, give me the global statistics of the cryptocurrency market.", "relevant APIs": [["Tardis.dev", "Exchanges"], ["Coinranking", "Get global stats"]], "query_id": 9998}]